---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: routes.kong.giomaster.io
spec:
  group: kong.giomaster.io
  names:
    categories:
    - crossplane
    - managed
    - kong
    kind: Route
    listKind: RouteList
    plural: routes
    singular: route
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Route is the Schema for the Routes API. Route Resource
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RouteSpec defines the desired state of Route
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  createdAt:
                    description: |-
                      (Number) Unix epoch when the resource was created.
                      Unix epoch when the resource was created.
                    type: number
                  destinations:
                    description: (Attributes List) A list of IP destinations of incoming
                      connections that match this Route when using stream routing.
                      Each entry is an object with fields "ip"  and/or "port". (see
                      below for nested schema)
                    items:
                      properties:
                        ip:
                          description: (String)
                          type: string
                        port:
                          description: (Number)
                          format: int64
                          type: integer
                      type: object
                    type: array
                  headers:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) One or more lists of values indexed by header name that will cause this Route to match if present in the request. The Host header cannot be used with this attribute: hosts should be specified using the hosts attribute. When headers contains only one value and that value starts with the special prefix ~*, the value is interpreted as a regular expression.
                      One or more lists of values indexed by header name that will cause this Route to match if present in the request. The `Host` header cannot be used with this attribute: hosts should be specified using the `hosts` attribute. When `headers` contains only one value and that value starts with the special prefix `~*`, the value is interpreted as a regular expression.
                    type: object
                  hosts:
                    description: |-
                      (List of String) A list of domain names that match this Route. Note that the hosts value is case sensitive.
                      A list of domain names that match this Route. Note that the hosts value is case sensitive.
                    items:
                      type: string
                    type: array
                  httpsRedirectStatusCode:
                    description: |-
                      (Number) The status code Kong responds with when all properties of a Route match except the protocol i.e. if the protocol of the request is HTTP instead of HTTPS. Location header is injected by Kong if the field is set to 301, 302, 307 or 308. Note: This config applies only if the Route is configured to only accept the https protocol. must be one of ["426", "301", "302", "307", "308"]
                      The status code Kong responds with when all properties of a Route match except the protocol i.e. if the protocol of the request is `HTTP` instead of `HTTPS`. `Location` header is injected by Kong if the field is set to 301, 302, 307 or 308. Note: This config applies only if the Route is configured to only accept the `https` protocol. must be one of ["426", "301", "302", "307", "308"]
                    type: number
                  methods:
                    description: |-
                      (List of String) A list of HTTP methods that match this Route.
                      A list of HTTP methods that match this Route.
                    items:
                      type: string
                    type: array
                  name:
                    description: |-
                      (String) The name of the Route. Route names must be unique, and they are case sensitive. For example, there can be two different Routes named "test" and "Test".
                      The name of the Route. Route names must be unique, and they are case sensitive. For example, there can be two different Routes named "test" and "Test".
                    type: string
                  pathHandling:
                    description: |-
                      (String) Controls how the Service path, Route path and requested path are combined when sending a request to the upstream. See above for a detailed description of each behavior. must be one of ["v0", "v1"]
                      Controls how the Service path, Route path and requested path are combined when sending a request to the upstream. See above for a detailed description of each behavior. must be one of ["v0", "v1"]
                    type: string
                  paths:
                    description: |-
                      (List of String) A list of paths that match this Route.
                      A list of paths that match this Route.
                    items:
                      type: string
                    type: array
                  preserveHost:
                    description: |-
                      (Boolean) When matching a Route via one of the hosts domain names, use the request Host header in the upstream request headers. If set to false, the upstream Host header will be that of the Service's host.
                      When matching a Route via one of the `hosts` domain names, use the request `Host` header in the upstream request headers. If set to `false`, the upstream `Host` header will be that of the Service's `host`.
                    type: boolean
                  protocols:
                    description: |-
                      (List of String) An array of the protocols this Route should allow. See the Route Object section for a list of accepted protocols. When set to only "https", HTTP requests are answered with an upgrade error. When set to only "http", HTTPS requests are answered with an error.
                      An array of the protocols this Route should allow. See the [Route Object](#route-object) section for a list of accepted protocols. When set to only `"https"`, HTTP requests are answered with an upgrade error. When set to only `"http"`, HTTPS requests are answered with an error.
                    items:
                      type: string
                    type: array
                  regexPriority:
                    description: |-
                      regex routes is different (longer non-regex routes are matched before shorter ones).
                      A number used to choose which route resolves a given request when several routes match it using regexes simultaneously. When two routes match the path and have the same `regex_priority`, the older one (lowest `created_at`) is used. Note that the priority for non-regex routes is different (longer non-regex routes are matched before shorter ones).
                    type: number
                  requestBuffering:
                    description: |-
                      (Boolean) Whether to enable request body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that receive data with chunked transfer encoding.
                      Whether to enable request body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that receive data with chunked transfer encoding.
                    type: boolean
                  responseBuffering:
                    description: |-
                      (Boolean) Whether to enable response body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that send data with chunked transfer encoding.
                      Whether to enable response body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that send data with chunked transfer encoding.
                    type: boolean
                  service:
                    description: (Attributes) The Service this Route is associated
                      to. This is where the Route proxies traffic to. (see below for
                      nested schema)
                    type: string
                  snis:
                    description: |-
                      (List of String) A list of SNIs that match this Route when using stream routing.
                      A list of SNIs that match this Route when using stream routing.
                    items:
                      type: string
                    type: array
                  sources:
                    description: (Attributes List) A list of IP sources of incoming
                      connections that match this Route when using stream routing.
                      Each entry is an object with fields "ip"  and/or "port". (see
                      below for nested schema)
                    items:
                      properties:
                        ip:
                          description: (String)
                          type: string
                        port:
                          description: (Number)
                          format: int64
                          type: integer
                      type: object
                    type: array
                  stripPath:
                    description: |-
                      (Boolean) When matching a Route via one of the paths, strip the matching prefix from the upstream request URL.
                      When matching a Route via one of the `paths`, strip the matching prefix from the upstream request URL.
                    type: boolean
                  tags:
                    description: |-
                      (List of String) An optional set of strings associated with the Route for grouping and filtering.
                      An optional set of strings associated with the Route for grouping and filtering.
                    items:
                      type: string
                    type: array
                  updatedAt:
                    description: |-
                      (Number) Unix epoch when the resource was last updated.
                      Unix epoch when the resource was last updated.
                    type: number
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  createdAt:
                    description: |-
                      (Number) Unix epoch when the resource was created.
                      Unix epoch when the resource was created.
                    type: number
                  destinations:
                    description: (Attributes List) A list of IP destinations of incoming
                      connections that match this Route when using stream routing.
                      Each entry is an object with fields "ip"  and/or "port". (see
                      below for nested schema)
                    items:
                      properties:
                        ip:
                          description: (String)
                          type: string
                        port:
                          description: (Number)
                          format: int64
                          type: integer
                      type: object
                    type: array
                  headers:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) One or more lists of values indexed by header name that will cause this Route to match if present in the request. The Host header cannot be used with this attribute: hosts should be specified using the hosts attribute. When headers contains only one value and that value starts with the special prefix ~*, the value is interpreted as a regular expression.
                      One or more lists of values indexed by header name that will cause this Route to match if present in the request. The `Host` header cannot be used with this attribute: hosts should be specified using the `hosts` attribute. When `headers` contains only one value and that value starts with the special prefix `~*`, the value is interpreted as a regular expression.
                    type: object
                  hosts:
                    description: |-
                      (List of String) A list of domain names that match this Route. Note that the hosts value is case sensitive.
                      A list of domain names that match this Route. Note that the hosts value is case sensitive.
                    items:
                      type: string
                    type: array
                  httpsRedirectStatusCode:
                    description: |-
                      (Number) The status code Kong responds with when all properties of a Route match except the protocol i.e. if the protocol of the request is HTTP instead of HTTPS. Location header is injected by Kong if the field is set to 301, 302, 307 or 308. Note: This config applies only if the Route is configured to only accept the https protocol. must be one of ["426", "301", "302", "307", "308"]
                      The status code Kong responds with when all properties of a Route match except the protocol i.e. if the protocol of the request is `HTTP` instead of `HTTPS`. `Location` header is injected by Kong if the field is set to 301, 302, 307 or 308. Note: This config applies only if the Route is configured to only accept the `https` protocol. must be one of ["426", "301", "302", "307", "308"]
                    type: number
                  methods:
                    description: |-
                      (List of String) A list of HTTP methods that match this Route.
                      A list of HTTP methods that match this Route.
                    items:
                      type: string
                    type: array
                  name:
                    description: |-
                      (String) The name of the Route. Route names must be unique, and they are case sensitive. For example, there can be two different Routes named "test" and "Test".
                      The name of the Route. Route names must be unique, and they are case sensitive. For example, there can be two different Routes named "test" and "Test".
                    type: string
                  pathHandling:
                    description: |-
                      (String) Controls how the Service path, Route path and requested path are combined when sending a request to the upstream. See above for a detailed description of each behavior. must be one of ["v0", "v1"]
                      Controls how the Service path, Route path and requested path are combined when sending a request to the upstream. See above for a detailed description of each behavior. must be one of ["v0", "v1"]
                    type: string
                  paths:
                    description: |-
                      (List of String) A list of paths that match this Route.
                      A list of paths that match this Route.
                    items:
                      type: string
                    type: array
                  preserveHost:
                    description: |-
                      (Boolean) When matching a Route via one of the hosts domain names, use the request Host header in the upstream request headers. If set to false, the upstream Host header will be that of the Service's host.
                      When matching a Route via one of the `hosts` domain names, use the request `Host` header in the upstream request headers. If set to `false`, the upstream `Host` header will be that of the Service's `host`.
                    type: boolean
                  protocols:
                    description: |-
                      (List of String) An array of the protocols this Route should allow. See the Route Object section for a list of accepted protocols. When set to only "https", HTTP requests are answered with an upgrade error. When set to only "http", HTTPS requests are answered with an error.
                      An array of the protocols this Route should allow. See the [Route Object](#route-object) section for a list of accepted protocols. When set to only `"https"`, HTTP requests are answered with an upgrade error. When set to only `"http"`, HTTPS requests are answered with an error.
                    items:
                      type: string
                    type: array
                  regexPriority:
                    description: |-
                      regex routes is different (longer non-regex routes are matched before shorter ones).
                      A number used to choose which route resolves a given request when several routes match it using regexes simultaneously. When two routes match the path and have the same `regex_priority`, the older one (lowest `created_at`) is used. Note that the priority for non-regex routes is different (longer non-regex routes are matched before shorter ones).
                    type: number
                  requestBuffering:
                    description: |-
                      (Boolean) Whether to enable request body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that receive data with chunked transfer encoding.
                      Whether to enable request body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that receive data with chunked transfer encoding.
                    type: boolean
                  responseBuffering:
                    description: |-
                      (Boolean) Whether to enable response body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that send data with chunked transfer encoding.
                      Whether to enable response body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that send data with chunked transfer encoding.
                    type: boolean
                  service:
                    description: (Attributes) The Service this Route is associated
                      to. This is where the Route proxies traffic to. (see below for
                      nested schema)
                    type: string
                  snis:
                    description: |-
                      (List of String) A list of SNIs that match this Route when using stream routing.
                      A list of SNIs that match this Route when using stream routing.
                    items:
                      type: string
                    type: array
                  sources:
                    description: (Attributes List) A list of IP sources of incoming
                      connections that match this Route when using stream routing.
                      Each entry is an object with fields "ip"  and/or "port". (see
                      below for nested schema)
                    items:
                      properties:
                        ip:
                          description: (String)
                          type: string
                        port:
                          description: (Number)
                          format: int64
                          type: integer
                      type: object
                    type: array
                  stripPath:
                    description: |-
                      (Boolean) When matching a Route via one of the paths, strip the matching prefix from the upstream request URL.
                      When matching a Route via one of the `paths`, strip the matching prefix from the upstream request URL.
                    type: boolean
                  tags:
                    description: |-
                      (List of String) An optional set of strings associated with the Route for grouping and filtering.
                      An optional set of strings associated with the Route for grouping and filtering.
                    items:
                      type: string
                    type: array
                  updatedAt:
                    description: |-
                      (Number) Unix epoch when the resource was last updated.
                      Unix epoch when the resource was last updated.
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RouteStatus defines the observed state of Route.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: |-
                      (Number) Unix epoch when the resource was created.
                      Unix epoch when the resource was created.
                    type: number
                  destinations:
                    description: (Attributes List) A list of IP destinations of incoming
                      connections that match this Route when using stream routing.
                      Each entry is an object with fields "ip"  and/or "port". (see
                      below for nested schema)
                    items:
                      properties:
                        ip:
                          description: (String)
                          type: string
                        port:
                          description: (Number)
                          format: int64
                          type: integer
                      type: object
                    type: array
                  headers:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      (Map of List of String) One or more lists of values indexed by header name that will cause this Route to match if present in the request. The Host header cannot be used with this attribute: hosts should be specified using the hosts attribute. When headers contains only one value and that value starts with the special prefix ~*, the value is interpreted as a regular expression.
                      One or more lists of values indexed by header name that will cause this Route to match if present in the request. The `Host` header cannot be used with this attribute: hosts should be specified using the `hosts` attribute. When `headers` contains only one value and that value starts with the special prefix `~*`, the value is interpreted as a regular expression.
                    type: object
                  hosts:
                    description: |-
                      (List of String) A list of domain names that match this Route. Note that the hosts value is case sensitive.
                      A list of domain names that match this Route. Note that the hosts value is case sensitive.
                    items:
                      type: string
                    type: array
                  httpsRedirectStatusCode:
                    description: |-
                      (Number) The status code Kong responds with when all properties of a Route match except the protocol i.e. if the protocol of the request is HTTP instead of HTTPS. Location header is injected by Kong if the field is set to 301, 302, 307 or 308. Note: This config applies only if the Route is configured to only accept the https protocol. must be one of ["426", "301", "302", "307", "308"]
                      The status code Kong responds with when all properties of a Route match except the protocol i.e. if the protocol of the request is `HTTP` instead of `HTTPS`. `Location` header is injected by Kong if the field is set to 301, 302, 307 or 308. Note: This config applies only if the Route is configured to only accept the `https` protocol. must be one of ["426", "301", "302", "307", "308"]
                    type: number
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  methods:
                    description: |-
                      (List of String) A list of HTTP methods that match this Route.
                      A list of HTTP methods that match this Route.
                    items:
                      type: string
                    type: array
                  name:
                    description: |-
                      (String) The name of the Route. Route names must be unique, and they are case sensitive. For example, there can be two different Routes named "test" and "Test".
                      The name of the Route. Route names must be unique, and they are case sensitive. For example, there can be two different Routes named "test" and "Test".
                    type: string
                  pathHandling:
                    description: |-
                      (String) Controls how the Service path, Route path and requested path are combined when sending a request to the upstream. See above for a detailed description of each behavior. must be one of ["v0", "v1"]
                      Controls how the Service path, Route path and requested path are combined when sending a request to the upstream. See above for a detailed description of each behavior. must be one of ["v0", "v1"]
                    type: string
                  paths:
                    description: |-
                      (List of String) A list of paths that match this Route.
                      A list of paths that match this Route.
                    items:
                      type: string
                    type: array
                  preserveHost:
                    description: |-
                      (Boolean) When matching a Route via one of the hosts domain names, use the request Host header in the upstream request headers. If set to false, the upstream Host header will be that of the Service's host.
                      When matching a Route via one of the `hosts` domain names, use the request `Host` header in the upstream request headers. If set to `false`, the upstream `Host` header will be that of the Service's `host`.
                    type: boolean
                  protocols:
                    description: |-
                      (List of String) An array of the protocols this Route should allow. See the Route Object section for a list of accepted protocols. When set to only "https", HTTP requests are answered with an upgrade error. When set to only "http", HTTPS requests are answered with an error.
                      An array of the protocols this Route should allow. See the [Route Object](#route-object) section for a list of accepted protocols. When set to only `"https"`, HTTP requests are answered with an upgrade error. When set to only `"http"`, HTTPS requests are answered with an error.
                    items:
                      type: string
                    type: array
                  regexPriority:
                    description: |-
                      regex routes is different (longer non-regex routes are matched before shorter ones).
                      A number used to choose which route resolves a given request when several routes match it using regexes simultaneously. When two routes match the path and have the same `regex_priority`, the older one (lowest `created_at`) is used. Note that the priority for non-regex routes is different (longer non-regex routes are matched before shorter ones).
                    type: number
                  requestBuffering:
                    description: |-
                      (Boolean) Whether to enable request body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that receive data with chunked transfer encoding.
                      Whether to enable request body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that receive data with chunked transfer encoding.
                    type: boolean
                  responseBuffering:
                    description: |-
                      (Boolean) Whether to enable response body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that send data with chunked transfer encoding.
                      Whether to enable response body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that send data with chunked transfer encoding.
                    type: boolean
                  service:
                    description: (Attributes) The Service this Route is associated
                      to. This is where the Route proxies traffic to. (see below for
                      nested schema)
                    type: string
                  snis:
                    description: |-
                      (List of String) A list of SNIs that match this Route when using stream routing.
                      A list of SNIs that match this Route when using stream routing.
                    items:
                      type: string
                    type: array
                  sources:
                    description: (Attributes List) A list of IP sources of incoming
                      connections that match this Route when using stream routing.
                      Each entry is an object with fields "ip"  and/or "port". (see
                      below for nested schema)
                    items:
                      properties:
                        ip:
                          description: (String)
                          type: string
                        port:
                          description: (Number)
                          format: int64
                          type: integer
                      type: object
                    type: array
                  stripPath:
                    description: |-
                      (Boolean) When matching a Route via one of the paths, strip the matching prefix from the upstream request URL.
                      When matching a Route via one of the `paths`, strip the matching prefix from the upstream request URL.
                    type: boolean
                  tags:
                    description: |-
                      (List of String) An optional set of strings associated with the Route for grouping and filtering.
                      An optional set of strings associated with the Route for grouping and filtering.
                    items:
                      type: string
                    type: array
                  updatedAt:
                    description: |-
                      (Number) Unix epoch when the resource was last updated.
                      Unix epoch when the resource was last updated.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
