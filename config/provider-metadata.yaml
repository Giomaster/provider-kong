name: Kong/kong-gateway
resources:
    kong-gateway_acl:
        subCategory: ""
        description: ACL Resource
        name: kong-gateway_acl
        title: kong-gateway_acl Resource - terraform-provider-kong-gateway
        examples:
            - name: my_acl
              manifest: |-
                {
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_id": "f28acbfa-c866-4587-b688-0208ac24df21",
                  "created_at": 9,
                  "group": "...my_group...",
                  "id": "...my_id...",
                  "tags": [
                    "..."
                  ]
                }
        argumentDocs:
            consumer: (Attributes) (see below for nested schema)
            consumer_id: (String) Consumer ID for nested entities
            created_at: (Number) Unix epoch when the resource was created.
            group: (String)
            id: (String) The ID of this resource.
            tags: (List of String)
        importStatements:
            - 'terraform import kong-gateway_acl.my_kong-gateway_acl ''{"consumer_id": "f28acbfa-c866-4587-b688-0208ac24df21", "id": "f28acbfa-c866-4587-b688-0208ac24df21"}'''
    kong-gateway_basic_auth:
        subCategory: ""
        description: BasicAuth Resource
        name: kong-gateway_basic_auth
        title: kong-gateway_basic_auth Resource - terraform-provider-kong-gateway
        examples:
            - name: my_basicauth
              manifest: |-
                {
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_id": "f28acbfa-c866-4587-b688-0208ac24df21",
                  "created_at": 7,
                  "id": "...my_id...",
                  "password": "...my_password...",
                  "tags": [
                    "..."
                  ],
                  "username": "...my_username..."
                }
        argumentDocs:
            consumer: (Attributes) (see below for nested schema)
            consumer_id: (String) Consumer ID for nested entities
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            password: (String, Sensitive)
            tags: (List of String)
            username: (String)
        importStatements:
            - 'terraform import kong-gateway_basic_auth.my_kong-gateway_basic_auth ''{"consumer_id": "f28acbfa-c866-4587-b688-0208ac24df21", "id": "80db1b58-ca7c-4d21-b92a-64eb07725872"}'''
    kong-gateway_ca_certificate:
        subCategory: ""
        description: CACertificate Resource
        name: kong-gateway_ca_certificate
        title: kong-gateway_ca_certificate Resource - terraform-provider-kong-gateway
        examples:
            - name: my_cacertificate
              manifest: |-
                {
                  "cert": "...my_cert...",
                  "cert_digest": "...my_cert_digest...",
                  "created_at": 10,
                  "id": "...my_id...",
                  "tags": [
                    "..."
                  ],
                  "updated_at": 7
                }
        argumentDocs:
            cert: (String) PEM-encoded public certificate of the CA.
            cert_digest: (String) SHA256 hex digest of the public certificate. This field is read-only and it cannot be set by the caller, the value is automatically computed.
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            tags: (List of String) An optional set of strings associated with the Certificate for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_ca_certificate.my_kong-gateway_ca_certificate ""
    kong-gateway_certificate:
        subCategory: ""
        description: Certificate Resource
        name: kong-gateway_certificate
        title: kong-gateway_certificate Resource - terraform-provider-kong-gateway
        examples:
            - name: my_certificate
              manifest: |-
                {
                  "cert": "...my_cert...",
                  "cert_alt": "...my_cert_alt...",
                  "created_at": 7,
                  "id": "...my_id...",
                  "key": "...my_key...",
                  "key_alt": "...my_key_alt...",
                  "snis": [
                    "..."
                  ],
                  "tags": [
                    "..."
                  ],
                  "updated_at": 2
                }
        argumentDocs:
            cert: (String) PEM-encoded public certificate chain of the SSL key pair. This field is referenceable, which means it can be securely stored as a secret in a vault. References must follow a specific format.
            cert_alt: (String) PEM-encoded public certificate chain of the alternate SSL key pair. This should only be set if you have both RSA and ECDSA types of certificate available and would like Kong to prefer serving using ECDSA certs when client advertises support for it. This field is referenceable, which means it can be securely stored as a secret in a vault. References must follow a specific format.
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            key: (String) PEM-encoded private key of the SSL key pair. This field is referenceable, which means it can be securely stored as a secret in a vault. References must follow a specific format.
            key_alt: (String) PEM-encoded private key of the alternate SSL key pair. This should only be set if you have both RSA and ECDSA types of certificate available and would like Kong to prefer serving using ECDSA certs when client advertises support for it. This field is referenceable, which means it can be securely stored as a secret in a vault. References must follow a specific format.
            snis: (List of String)
            tags: (List of String) An optional set of strings associated with the Certificate for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_certificate.my_kong-gateway_certificate ""
    kong-gateway_consumer:
        subCategory: ""
        description: Consumer Resource
        name: kong-gateway_consumer
        title: kong-gateway_consumer Resource - terraform-provider-kong-gateway
        examples:
            - name: my_consumer
              manifest: |-
                {
                  "created_at": 7,
                  "custom_id": "...my_custom_id...",
                  "id": "...my_id...",
                  "tags": [
                    "..."
                  ],
                  "updated_at": 1,
                  "username": "...my_username..."
                }
        argumentDocs:
            created_at: (Number) Unix epoch when the resource was created.
            custom_id: (String) Field for storing an existing unique ID for the Consumer - useful for mapping Kong with users in your existing database. You must send either this field or username with the request.
            id: (String) The ID of this resource.
            tags: (List of String) An optional set of strings associated with the Consumer for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            username: (String) The unique username of the Consumer. You must send either this field or custom_id with the request.
        importStatements:
            - terraform import kong-gateway_consumer.my_kong-gateway_consumer ""
    kong-gateway_consumer_group:
        subCategory: ""
        description: ConsumerGroup Resource
        name: kong-gateway_consumer_group
        title: kong-gateway_consumer_group Resource - terraform-provider-kong-gateway
        examples:
            - name: my_consumergroup
              manifest: |-
                {
                  "created_at": 6,
                  "id": "...my_id...",
                  "name": "...my_name...",
                  "tags": [
                    "..."
                  ],
                  "updated_at": 4
                }
        argumentDocs:
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            name: (String)
            tags: (List of String)
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_consumer_group.my_kong-gateway_consumer_group ""
    kong-gateway_gateway_consumer_group_member:
        subCategory: ""
        description: GatewayConsumerGroupMember Resource
        name: kong-gateway_gateway_consumer_group_member
        title: kong-gateway_gateway_consumer_group_member Resource - terraform-provider-kong-gateway
        examples:
            - name: my_gatewayconsumergroupmember
              manifest: |-
                {
                  "consumer_group_id": "...my_consumer_group_id...",
                  "consumer_id": "cf4c7e60-11db-49dd-b300-7c7e5f0f7e6b",
                  "consumer_id_or_username": "...my_consumer_id_or_username..."
                }
        argumentDocs:
            consumer_group: (Attributes) (see below for nested schema)
            consumer_group_id: (String) Requires replacement if changed.
            consumer_id: (String) Requires replacement if changed.
            consumer_id_or_username: (String)
            consumers: (Attributes List) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            custom_id: (String) Field for storing an existing unique ID for the Consumer - useful for mapping Kong with users in your existing database. You must send either this field or username with the request.
            id: (String)
            name: (String)
            tags: (List of String)
            updated_at: (Number) Unix epoch when the resource was last updated.
            username: (String) The unique username of the Consumer. You must send either this field or custom_id with the request.
        importStatements: []
    kong-gateway_hmac_auth:
        subCategory: ""
        description: HMACAuth Resource
        name: kong-gateway_hmac_auth
        title: kong-gateway_hmac_auth Resource - terraform-provider-kong-gateway
        examples:
            - name: my_hmacauth
              manifest: |-
                {
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_id": "f28acbfa-c866-4587-b688-0208ac24df21",
                  "created_at": 3,
                  "id": "...my_id...",
                  "secret": "...my_secret...",
                  "tags": [
                    "..."
                  ],
                  "username": "...my_username..."
                }
        argumentDocs:
            consumer: (Attributes) (see below for nested schema)
            consumer_id: (String) Consumer ID for nested entities
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            secret: (String)
            tags: (List of String)
            username: (String)
        importStatements:
            - 'terraform import kong-gateway_hmac_auth.my_kong-gateway_hmac_auth ''{"consumer_id": "f28acbfa-c866-4587-b688-0208ac24df21", "id": "70e7b00b-72f2-471b-a5ce-9c4171775360"}'''
    kong-gateway_jwt:
        subCategory: ""
        description: Jwt Resource
        name: kong-gateway_jwt
        title: kong-gateway_jwt Resource - terraform-provider-kong-gateway
        examples:
            - name: my_jwt
              manifest: |-
                {
                  "algorithm": "PS512",
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_id": "f28acbfa-c866-4587-b688-0208ac24df21",
                  "created_at": 2,
                  "id": "...my_id...",
                  "key": "...my_key...",
                  "rsa_public_key": "...my_rsa_public_key...",
                  "secret": "...my_secret...",
                  "tags": [
                    "..."
                  ]
                }
        argumentDocs:
            algorithm: (String) must be one of ["HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "ES256", "ES384", "ES512", "PS256", "PS384", "PS512", "EdDSA"]
            consumer: (Attributes) (see below for nested schema)
            consumer_id: (String) Consumer ID for nested entities
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            key: (String)
            rsa_public_key: (String)
            secret: (String)
            tags: (List of String)
        importStatements:
            - 'terraform import kong-gateway_jwt.my_kong-gateway_jwt ''{"consumer_id": "f28acbfa-c866-4587-b688-0208ac24df21", "id": "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"}'''
    kong-gateway_key:
        subCategory: ""
        description: Key Resource
        name: kong-gateway_key
        title: kong-gateway_key Resource - terraform-provider-kong-gateway
        examples:
            - name: my_key
              manifest: |-
                {
                  "created_at": 0,
                  "id": "...my_id...",
                  "jwk": "...my_jwk...",
                  "kid": "...my_kid...",
                  "name": "...my_name...",
                  "pem": {
                    "private_key": "...my_private_key...",
                    "public_key": "...my_public_key..."
                  },
                  "set": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9,
                  "x5t": "...my_x5t..."
                }
        argumentDocs:
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            jwk: (String) A JSON Web Key represented as a string.
            kid: (String) A unique identifier for a key.
            name: (String) The name to associate with the given keys.
            pem: (Attributes) A keypair in PEM format. (see below for nested schema)
            private_key: (String)
            public_key: (String)
            set: (Attributes) The id (an UUID) of the key-set with which to associate the key. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Key for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            x5t: (String)
        importStatements:
            - terraform import kong-gateway_key.my_kong-gateway_key ""
    kong-gateway_key_auth:
        subCategory: ""
        description: KeyAuth Resource
        name: kong-gateway_key_auth
        title: kong-gateway_key_auth Resource - terraform-provider-kong-gateway
        examples:
            - name: my_keyauth
              manifest: |-
                {
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_id": "f28acbfa-c866-4587-b688-0208ac24df21",
                  "created_at": 1,
                  "id": "...my_id...",
                  "key": "...my_key...",
                  "tags": [
                    "..."
                  ],
                  "ttl": 6
                }
        argumentDocs:
            consumer: (Attributes) (see below for nested schema)
            consumer_id: (String) Consumer ID for nested entities
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            key: (String)
            tags: (List of String)
            ttl: (Number) key-auth ttl in seconds
        importStatements:
            - 'terraform import kong-gateway_key_auth.my_kong-gateway_key_auth ''{"consumer_id": "f28acbfa-c866-4587-b688-0208ac24df21", "id": ""}'''
    kong-gateway_key_set:
        subCategory: ""
        description: KeySet Resource
        name: kong-gateway_key_set
        title: kong-gateway_key_set Resource - terraform-provider-kong-gateway
        examples:
            - name: my_keyset
              manifest: |-
                {
                  "created_at": 0,
                  "id": "...my_id...",
                  "name": "...my_name...",
                  "tags": [
                    "..."
                  ],
                  "updated_at": 4
                }
        argumentDocs:
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            name: (String)
            tags: (List of String)
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_key_set.my_kong-gateway_key_set ""
    kong-gateway_mtls_auth:
        subCategory: ""
        description: MTLSAuth Resource
        name: kong-gateway_mtls_auth
        title: kong-gateway_mtls_auth Resource - terraform-provider-kong-gateway
        examples:
            - name: my_mtlsauth
              manifest: |-
                {
                  "ca_certificate": {
                    "id": "...my_id..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_id": "f28acbfa-c866-4587-b688-0208ac24df21",
                  "created_at": 7,
                  "id": "...my_id...",
                  "subject_name": "...my_subject_name...",
                  "tags": [
                    "..."
                  ]
                }
        argumentDocs:
            ca_certificate: (Attributes) (see below for nested schema)
            consumer: (Attributes) (see below for nested schema)
            consumer_id: (String) Consumer ID for nested entities
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            subject_name: (String)
            tags: (List of String)
        importStatements:
            - 'terraform import kong-gateway_mtls_auth.my_kong-gateway_mtls_auth ''{"consumer_id": "f28acbfa-c866-4587-b688-0208ac24df21", "id": ""}'''
    kong-gateway_oidc_jwk:
        subCategory: ""
        description: OidcJwk Resource
        name: kong-gateway_oidc_jwk
        title: kong-gateway_oidc_jwk Resource - terraform-provider-kong-gateway
        examples:
            - name: my_oidcjwk
              manifest: |-
                {
                  "id": "...my_id...",
                  "jwks": {
                    "keys": [
                      {
                        "alg": "...my_alg...",
                        "crv": "...my_crv...",
                        "d": "...my_d...",
                        "dp": "...my_dp...",
                        "dq": "...my_dq...",
                        "e": "...my_e...",
                        "issuer": "...my_issuer...",
                        "k": "...my_k...",
                        "key_ops": [
                          "..."
                        ],
                        "kid": "...my_kid...",
                        "kty": "...my_kty...",
                        "n": "...my_n...",
                        "oth": "...my_oth...",
                        "p": "...my_p...",
                        "q": "...my_q...",
                        "qi": "...my_qi...",
                        "r": "...my_r...",
                        "t": "...my_t...",
                        "use": "...my_use...",
                        "x": "...my_x...",
                        "x5c": [
                          "..."
                        ],
                        "x5t": "...my_x5t...",
                        "x5t_number_s256": "...my_x5t_number_s256...",
                        "x5u": "...my_x5u...",
                        "y": "...my_y..."
                      }
                    ]
                  }
                }
        argumentDocs:
            alg: (String)
            crv: (String)
            d: (String)
            dp: (String)
            dq: (String)
            e: (String)
            id: (String) The ID of this resource.
            issuer: (String)
            jwks: (Attributes) (see below for nested schema)
            k: (String)
            key_ops: (List of String)
            keys: (Attributes List) (see below for nested schema)
            kid: (String)
            kty: (String)
            "n": (String)
            oth: (String)
            p: (String)
            q: (String)
            qi: (String)
            r: (String)
            t: (String)
            use: (String)
            x: (String)
            x5c: (List of String)
            x5t: (String)
            x5t_number_s256: (String)
            x5u: (String)
            "y": (String)
        importStatements:
            - terraform import kong-gateway_oidc_jwk.my_kong-gateway_oidc_jwk ""
    kong-gateway_partial:
        subCategory: ""
        description: Partial Resource
        name: kong-gateway_partial
        title: kong-gateway_partial Resource - terraform-provider-kong-gateway
        examples:
            - name: my_partial
              manifest: |-
                {
                  "config": {
                    "key": "${jsonencode(\"value\")}"
                  },
                  "created_at": 5,
                  "id": "...my_id...",
                  "name": "...my_name...",
                  "tags": [
                    "..."
                  ],
                  "type": "...my_type...",
                  "updated_at": 5
                }
        argumentDocs:
            config: (Map of String)
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            name: (String)
            tags: (List of String)
            type: (String)
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_partial.my_kong-gateway_partial ""
    kong-gateway_plugin_acl:
        subCategory: ""
        description: PluginACL Resource
        name: kong-gateway_plugin_acl
        title: kong-gateway_plugin_acl Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginacl
              manifest: |-
                {
                  "config": {
                    "allow": [
                      "..."
                    ],
                    "always_use_authenticated_groups": true,
                    "deny": [
                      "..."
                    ],
                    "hide_groups_header": true,
                    "include_consumer_groups": false
                  },
                  "created_at": 5,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 1
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow: (List of String) Arbitrary group names that are allowed to consume the service or route. One of config.allow or config.deny must be specified.
            always_use_authenticated_groups: (Boolean) If enabled (true), the authenticated groups will always be used even when an authenticated consumer already exists. If the authenticated groups don't exist, it will fallback to use the groups associated with the consumer. By default the authenticated groups will only be used when there is no consumer or the consumer is anonymous.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            deny: (List of String) Arbitrary group names that are not allowed to consume the service or route. One of config.allow or config.deny must be specified.
            enabled: (Boolean) Whether the plugin is applied.
            hide_groups_header: (Boolean) If enabled (true), prevents the X-Consumer-Groups header from being sent in the request to the upstream service.
            id: (String) The ID of this resource.
            include_consumer_groups: (Boolean) If enabled (true), allows the consumer-groups to be used in the allow|deny fields
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_acl.my_kong-gateway_plugin_acl ""
    kong-gateway_plugin_acme:
        subCategory: ""
        description: PluginAcme Resource
        name: kong-gateway_plugin_acme
        title: kong-gateway_plugin_acme Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginacme
              manifest: |-
                {
                  "config": {
                    "account_email": "...my_account_email...",
                    "account_key": {
                      "key_id": "...my_key_id...",
                      "key_set": "...my_key_set..."
                    },
                    "allow_any_domain": true,
                    "api_uri": "...my_api_uri...",
                    "cert_type": "ecc",
                    "domains": [
                      "..."
                    ],
                    "eab_hmac_key": "...my_eab_hmac_key...",
                    "eab_kid": "...my_eab_kid...",
                    "enable_ipv4_common_name": true,
                    "fail_backoff_minutes": 9.27,
                    "preferred_chain": "...my_preferred_chain...",
                    "renew_threshold_days": 8.54,
                    "rsa_key_size": 4096,
                    "storage": "shm",
                    "storage_config": {
                      "consul": {
                        "host": "...my_host...",
                        "https": true,
                        "kv_path": "...my_kv_path...",
                        "port": 14637,
                        "timeout": 7.48,
                        "token": "...my_token..."
                      },
                      "kong": {
                        "key": "${jsonencode(\"value\")}"
                      },
                      "redis": {
                        "database": 9,
                        "extra_options": {
                          "namespace": "...my_namespace...",
                          "scan_count": 3.07
                        },
                        "host": "...my_host...",
                        "password": "...my_password...",
                        "port": 1232,
                        "server_name": "...my_server_name...",
                        "ssl": false,
                        "ssl_verify": true,
                        "timeout": 1180626308,
                        "username": "...my_username..."
                      },
                      "shm": {
                        "shm_name": "...my_shm_name..."
                      },
                      "vault": {
                        "auth_method": "token",
                        "auth_path": "...my_auth_path...",
                        "auth_role": "...my_auth_role...",
                        "host": "...my_host...",
                        "https": false,
                        "jwt_path": "...my_jwt_path...",
                        "kv_path": "...my_kv_path...",
                        "port": 47038,
                        "timeout": 4.54,
                        "tls_server_name": "...my_tls_server_name...",
                        "tls_verify": false,
                        "token": "...my_token..."
                      }
                    },
                    "tos_accepted": true
                  },
                  "created_at": 2,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "tags": [
                    "..."
                  ],
                  "updated_at": 4
                }
        argumentDocs:
            access: (List of String)
            account_email: (String) The account identifier. Can be reused in a different plugin instance.
            account_key: (Attributes) The private key associated with the account. (see below for nested schema)
            after: (Attributes) (see below for nested schema)
            allow_any_domain: (Boolean) If set to true, the plugin allows all domains and ignores any values in the domains list.
            api_uri: (String) A string representing a URL, such as https://example.com/path/to/resource?q=search.
            auth_method: (String) Auth Method, default to token, can be 'token' or 'kubernetes'. must be one of ["kubernetes", "token"]
            auth_path: (String) Vault's authentication path to use.
            auth_role: (String) The role to try and assign.
            before: (Attributes) (see below for nested schema)
            cert_type: (String) The certificate type to create. The possible values are rsa for RSA certificate or ecc for EC certificate. must be one of ["ecc", "rsa"]
            config: (Attributes) (see below for nested schema)
            consul: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            database: (Number) Database to use for the Redis connection when using the redis strategy
            domains: (List of String) An array of strings representing hosts. A valid host is a string containing one or more labels separated by periods, with at most one wildcard label ('*')
            eab_hmac_key: (String) External account binding (EAB) base64-encoded URL string of the HMAC key. You usually don't need to set this unless it is explicitly required by the CA.
            eab_kid: (String) External account binding (EAB) key id. You usually don't need to set this unless it is explicitly required by the CA.
            enable_ipv4_common_name: (Boolean) A boolean value that controls whether to include the IPv4 address in the common name field of generated certificates.
            enabled: (Boolean) Whether the plugin is applied.
            extra_options: (Attributes) Custom ACME Redis options (see below for nested schema)
            fail_backoff_minutes: |-
                (Number) Minutes to wait for each domain that fails to create a certificate. This applies to both a
                new certificate and a renewal certificate.
            host: (String) A string representing a host name, such as example.com.
            https: (Boolean) Boolean representation of https.
            id: (String) The ID of this resource.
            instance_name: (String)
            jwt_path: (String) The path to the JWT.
            key_id: (String) The Key ID. Not Null
            key_set: (String) The ID of the key set to associate the Key ID with.
            kong: (Map of String)
            kv_path: (String) KV prefix path.
            name: (String)
            namespace: (String) A namespace to prepend to all keys stored in Redis.
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            preferred_chain: (String) A string value that specifies the preferred certificate chain to use when generating certificates.
            protocols: (List of String) A set of strings representing HTTP protocols.
            redis: (Attributes) (see below for nested schema)
            renew_threshold_days: (Number) Days remaining to renew the certificate before it expires.
            rsa_key_size: (Number) RSA private key size for the certificate. The possible values are 2048, 3072, or 4096. must be one of ["2048", "3072", "4096"]
            scan_count: (Number) The number of keys to return in Redis SCAN calls.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            shm: (Attributes) (see below for nested schema)
            shm_name: (String) Name of shared memory zone used for Kong API gateway storage
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_verify: (Boolean) If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure lua_ssl_trusted_certificate in kong.conf to specify the CA (or server) certificate used by your Redis server. You may also need to configure lua_ssl_verify_depth accordingly.
            storage: (String) The backend storage type to use. In DB-less mode and Konnect, kong storage is unavailable. In hybrid mode and Konnect, shm storage is unavailable. shm storage does not persist during Kong restarts and does not work for Kong running on different machines, so consider using one of kong, redis, consul, or vault in production. must be one of ["consul", "kong", "redis", "shm", "vault"]
            storage_config: (Attributes) (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) Timeout in milliseconds.
            tls_server_name: (String) SNI used in request, default to host if omitted.
            tls_verify: (Boolean) Turn on TLS verification.
            token: (String) Consul ACL token.
            tos_accepted: (Boolean) If you are using Let's Encrypt, you must set this to true to agree the terms of service.
            updated_at: (Number) Unix epoch when the resource was last updated.
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            vault: (Attributes) (see below for nested schema)
        importStatements:
            - terraform import kong-gateway_plugin_acme.my_kong-gateway_plugin_acme ""
    kong-gateway_plugin_ai_azure_content_safety:
        subCategory: ""
        description: PluginAiAzureContentSafety Resource
        name: kong-gateway_plugin_ai_azure_content_safety
        title: kong-gateway_plugin_ai_azure_content_safety Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginaiazurecontentsafety
              manifest: |-
                {
                  "config": {
                    "azure_api_version": "...my_azure_api_version...",
                    "azure_client_id": "...my_azure_client_id...",
                    "azure_client_secret": "...my_azure_client_secret...",
                    "azure_tenant_id": "...my_azure_tenant_id...",
                    "azure_use_managed_identity": false,
                    "blocklist_names": [
                      "..."
                    ],
                    "categories": [
                      {
                        "name": "...my_name...",
                        "rejection_level": 5
                      }
                    ],
                    "content_safety_key": "...my_content_safety_key...",
                    "content_safety_url": "...my_content_safety_url...",
                    "halt_on_blocklist_hit": false,
                    "output_type": "EightSeverityLevels",
                    "reveal_failure_reason": true,
                    "text_source": "concatenate_all_content"
                  },
                  "created_at": 7,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 2
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            azure_api_version: (String) Sets the ?api-version URL parameter, used for defining the Azure Content Services interchange format.
            azure_client_id: (String) If azure_use_managed_identity is true, set the client ID if required.
            azure_client_secret: (String) If azure_use_managed_identity is true, set the client secret if required.
            azure_tenant_id: (String) If azure_use_managed_identity is true, set the tenant ID if required.
            azure_use_managed_identity: (Boolean) If checked, uses (if set) azure_client_id, azure_client_secret, and/or azure_tenant_id for Azure authentication, via Managed or User-assigned identity
            before: (Attributes) (see below for nested schema)
            blocklist_names: (List of String) Use these configured blocklists (in Azure Content Services) when inspecting content.
            categories: (Attributes List) Array of categories, and their thresholds, to measure on. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            content_safety_key: (String) If azure_use_managed_identity is true, set the API key to call Content Safety.
            content_safety_url: (String) Full URL, inc protocol, of the Azure Content Safety instance.
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            halt_on_blocklist_hit: (Boolean) Tells Azure to reject the request if any blocklist filter is hit.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String) Not Null
            ordering: (Attributes) (see below for nested schema)
            output_type: (String) See https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/content-filter#content-filtering-categories. must be one of ["EightSeverityLevels", "FourSeverityLevels"]
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            rejection_level: (Number) Not Null
            reveal_failure_reason: (Boolean) Set true to tell the caller why their request was rejected, if so.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            text_source: (String) Select where to pick the 'text' for the Azure Content Services request. must be one of ["concatenate_all_content", "concatenate_user_content"]
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_ai_azure_content_safety.my_kong-gateway_plugin_ai_azure_content_safety ""
    kong-gateway_plugin_ai_prompt_decorator:
        subCategory: ""
        description: PluginAiPromptDecorator Resource
        name: kong-gateway_plugin_ai_prompt_decorator
        title: kong-gateway_plugin_ai_prompt_decorator Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginaipromptdecorator
              manifest: |-
                {
                  "config": {
                    "llm_format": "openai",
                    "max_request_body_size": 6,
                    "prompts": {
                      "append": [
                        {
                          "content": "...my_content...",
                          "role": "user"
                        }
                      ],
                      "prepend": [
                        {
                          "content": "...my_content...",
                          "role": "system"
                        }
                      ]
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 2,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 7
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            append: (Attributes List) Insert chat messages at the end of the chat message array. This array preserves exact order when adding messages. (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            content: (String) Not Null
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            llm_format: (String) LLM input and output format and schema to use. must be one of ["bedrock", "gemini", "openai"]
            max_request_body_size: (Number) max allowed body size allowed to be introspected
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            prepend: (Attributes List) Insert chat messages at the beginning of the chat message array. This array preserves exact order when adding messages. (see below for nested schema)
            prompts: (Attributes) (see below for nested schema)
            protocols: (List of String) A set of strings representing HTTP protocols.
            role: (String) must be one of ["assistant", "system", "user"]
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_ai_prompt_decorator.my_kong-gateway_plugin_ai_prompt_decorator ""
    kong-gateway_plugin_ai_prompt_guard:
        subCategory: ""
        description: PluginAiPromptGuard Resource
        name: kong-gateway_plugin_ai_prompt_guard
        title: kong-gateway_plugin_ai_prompt_guard Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginaipromptguard
              manifest: |-
                {
                  "config": {
                    "allow_all_conversation_history": true,
                    "allow_patterns": [
                      "..."
                    ],
                    "deny_patterns": [
                      "..."
                    ],
                    "llm_format": "openai",
                    "match_all_roles": true,
                    "max_request_body_size": 0
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 4
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_all_conversation_history: (Boolean) If true, will ignore all previous chat prompts from the conversation history.
            allow_patterns: (List of String) Array of valid regex patterns, or valid questions from the 'user' role in chat.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            deny_patterns: (List of String) Array of invalid regex patterns, or invalid questions from the 'user' role in chat.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            llm_format: (String) LLM input and output format and schema to use. must be one of ["bedrock", "gemini", "openai"]
            match_all_roles: (Boolean) If true, will match all roles in addition to 'user' role in conversation history.
            max_request_body_size: (Number) max allowed body size allowed to be introspected
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_ai_prompt_guard.my_kong-gateway_plugin_ai_prompt_guard ""
    kong-gateway_plugin_ai_prompt_template:
        subCategory: ""
        description: PluginAiPromptTemplate Resource
        name: kong-gateway_plugin_ai_prompt_template
        title: kong-gateway_plugin_ai_prompt_template Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginaiprompttemplate
              manifest: |-
                {
                  "config": {
                    "allow_untemplated_requests": false,
                    "log_original_request": false,
                    "max_request_body_size": 3,
                    "templates": [
                      {
                        "name": "...my_name...",
                        "template": "...my_template..."
                      }
                    ]
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 4,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 1
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_untemplated_requests: (Boolean) Set true to allow requests that don't call or match any template.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            log_original_request: (Boolean) Set true to add the original request to the Kong log plugin(s) output.
            max_request_body_size: (Number) max allowed body size allowed to be introspected
            name: (String) Unique name for the template, can be called with {template://NAME}. Not Null
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            template: (String) Template string for this request, supports mustache-style {{placeholders}}. Not Null
            templates: (Attributes List) Array of templates available to the request context. (see below for nested schema)
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_ai_prompt_template.my_kong-gateway_plugin_ai_prompt_template ""
    kong-gateway_plugin_ai_proxy:
        subCategory: ""
        description: PluginAiProxy Resource
        name: kong-gateway_plugin_ai_proxy
        title: kong-gateway_plugin_ai_proxy Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginaiproxy
              manifest: |-
                {
                  "config": {
                    "auth": {
                      "allow_override": true,
                      "aws_access_key_id": "...my_aws_access_key_id...",
                      "aws_secret_access_key": "...my_aws_secret_access_key...",
                      "azure_client_id": "...my_azure_client_id...",
                      "azure_client_secret": "...my_azure_client_secret...",
                      "azure_tenant_id": "...my_azure_tenant_id...",
                      "azure_use_managed_identity": true,
                      "gcp_service_account_json": "...my_gcp_service_account_json...",
                      "gcp_use_service_account": false,
                      "header_name": "...my_header_name...",
                      "header_value": "...my_header_value...",
                      "param_location": "body",
                      "param_name": "...my_param_name...",
                      "param_value": "...my_param_value..."
                    },
                    "llm_format": "openai",
                    "logging": {
                      "log_payloads": false,
                      "log_statistics": true
                    },
                    "max_request_body_size": 1,
                    "model": {
                      "name": "...my_name...",
                      "options": {
                        "anthropic_version": "...my_anthropic_version...",
                        "azure_api_version": "...my_azure_api_version...",
                        "azure_deployment_id": "...my_azure_deployment_id...",
                        "azure_instance": "...my_azure_instance...",
                        "bedrock": {
                          "aws_assume_role_arn": "...my_aws_assume_role_arn...",
                          "aws_region": "...my_aws_region...",
                          "aws_role_session_name": "...my_aws_role_session_name...",
                          "aws_sts_endpoint_url": "...my_aws_sts_endpoint_url..."
                        },
                        "gemini": {
                          "api_endpoint": "...my_api_endpoint...",
                          "location_id": "...my_location_id...",
                          "project_id": "...my_project_id..."
                        },
                        "huggingface": {
                          "use_cache": true,
                          "wait_for_model": true
                        },
                        "input_cost": 8.68,
                        "llama2_format": "openai",
                        "max_tokens": 6,
                        "mistral_format": "openai",
                        "output_cost": 4.55,
                        "temperature": 2.87,
                        "top_k": 331,
                        "top_p": 0.21,
                        "upstream_path": "...my_upstream_path...",
                        "upstream_url": "...my_upstream_url..."
                      },
                      "provider": "anthropic"
                    },
                    "model_name_header": false,
                    "response_streaming": "allow",
                    "route_type": "llm/v1/chat"
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 9,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 10
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_override: (Boolean) If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin.
            anthropic_version: (String) Defines the schema/API version, if using Anthropic provider.
            api_endpoint: (String) If running Gemini on Vertex, specify the regional API endpoint (hostname only).
            auth: (Attributes) (see below for nested schema)
            aws_access_key_id: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.
            aws_assume_role_arn: (String) If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.
            aws_region: (String) If using AWS providers (Bedrock) you can override the AWS_REGION environment variable by setting this option.
            aws_role_session_name: (String) If using AWS providers (Bedrock), set the identifier of the assumed role session.
            aws_secret_access_key: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.
            aws_sts_endpoint_url: (String) If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.
            azure_api_version: (String) 'api-version' for Azure OpenAI instances.
            azure_client_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.
            azure_client_secret: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.
            azure_deployment_id: (String) Deployment ID for Azure OpenAI instances.
            azure_instance: (String) Instance name for Azure OpenAI hosted models.
            azure_tenant_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.
            azure_use_managed_identity: (Boolean) Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models.
            bedrock: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            gcp_service_account_json: (String) Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable GCP_SERVICE_ACCOUNT.
            gcp_use_service_account: (Boolean) Use service account auth for GCP-based providers and models.
            gemini: (Attributes) (see below for nested schema)
            header_name: (String) If AI model requires authentication via Authorization or API key header, specify its name here.
            header_value: (String) Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.
            huggingface: (Attributes) (see below for nested schema)
            id: (String) The ID of this resource.
            input_cost: (Number) Defines the cost per 1M tokens in your prompt.
            instance_name: (String)
            llama2_format: (String) If using llama2 provider, select the upstream message format. must be one of ["ollama", "openai", "raw"]
            llm_format: (String) LLM input and output format and schema to use. must be one of ["bedrock", "gemini", "openai"]
            location_id: (String) If running Gemini on Vertex, specify the location ID.
            log_payloads: (Boolean) If enabled, will log the request and response body into the Kong log plugin(s) output.
            log_statistics: (Boolean) If enabled and supported by the driver, will add model usage and token metrics into the Kong log plugin(s) output.
            logging: (Attributes) (see below for nested schema)
            max_request_body_size: (Number) max allowed body size allowed to be introspected
            max_tokens: (Number) Defines the max_tokens, if using chat or completion models.
            mistral_format: (String) If using mistral provider, select the upstream message format. must be one of ["ollama", "openai"]
            model: (Attributes) (see below for nested schema)
            model_name_header: (Boolean) Display the model name selected in the X-Kong-LLM-Model response header
            name: (String) Model name to execute.
            options: (Attributes) Key/value settings for the model (see below for nested schema)
            ordering: (Attributes) (see below for nested schema)
            output_cost: (Number) Defines the cost per 1M tokens in the output of the AI.
            param_location: (String) Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of ["body", "query"]
            param_name: (String) If AI model requires authentication via query parameter, specify its name here.
            param_value: (String) Specify the full parameter value for 'param_name'.
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            project_id: (String) If running Gemini on Vertex, specify the project ID.
            protocols: (List of String) A set of strings representing HTTP protocols.
            provider: (String) AI provider request format - Kong translates requests to and from the specified backend compatible formats. must be one of ["anthropic", "azure", "bedrock", "cohere", "gemini", "huggingface", "llama2", "mistral", "openai"]
            response_streaming: (String) Whether to 'optionally allow', 'deny', or 'always' (force) the streaming of answers via server sent events. must be one of ["allow", "always", "deny"]
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            route_type: (String) The model's operation implementation, for this provider. Set to preserve to pass through without transformation. must be one of ["llm/v1/chat", "llm/v1/completions", "preserve"]
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            temperature: (Number) Defines the matching temperature, if using chat or completion models.
            top_k: (Number) Defines the top-k most likely tokens, if supported.
            top_p: (Number) Defines the top-p probability mass, if supported.
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_path: (String) Manually specify or override the AI operation path, used when e.g. using the 'preserve' route_type.
            upstream_url: (String) Manually specify or override the full URL to the AI operation endpoints, when calling (self-)hosted models, or for running via a private endpoint.
            use_cache: (Boolean) Use the cache layer on the inference API
            wait_for_model: (Boolean) Wait for the model if it is not ready
        importStatements:
            - terraform import kong-gateway_plugin_ai_proxy.my_kong-gateway_plugin_ai_proxy ""
    kong-gateway_plugin_ai_proxy_advanced:
        subCategory: ""
        description: PluginAiProxyAdvanced Resource
        name: kong-gateway_plugin_ai_proxy_advanced
        title: kong-gateway_plugin_ai_proxy_advanced Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginaiproxyadvanced
              manifest: |-
                {
                  "config": {
                    "balancer": {
                      "algorithm": "consistent-hashing",
                      "connect_timeout": 1442520343,
                      "failover_criteria": [
                        "non_idempotent"
                      ],
                      "hash_on_header": "...my_hash_on_header...",
                      "latency_strategy": "tpot",
                      "read_timeout": 1231607071,
                      "retries": 7527,
                      "slots": 15983,
                      "tokens_count_strategy": "prompt-tokens",
                      "write_timeout": 1922410764
                    },
                    "embeddings": {
                      "auth": {
                        "allow_override": false,
                        "aws_access_key_id": "...my_aws_access_key_id...",
                        "aws_secret_access_key": "...my_aws_secret_access_key...",
                        "azure_client_id": "...my_azure_client_id...",
                        "azure_client_secret": "...my_azure_client_secret...",
                        "azure_tenant_id": "...my_azure_tenant_id...",
                        "azure_use_managed_identity": false,
                        "gcp_service_account_json": "...my_gcp_service_account_json...",
                        "gcp_use_service_account": true,
                        "header_name": "...my_header_name...",
                        "header_value": "...my_header_value...",
                        "param_location": "body",
                        "param_name": "...my_param_name...",
                        "param_value": "...my_param_value..."
                      },
                      "model": {
                        "name": "...my_name...",
                        "options": {
                          "azure": {
                            "api_version": "...my_api_version...",
                            "deployment_id": "...my_deployment_id...",
                            "instance": "...my_instance..."
                          },
                          "bedrock": {
                            "aws_assume_role_arn": "...my_aws_assume_role_arn...",
                            "aws_region": "...my_aws_region...",
                            "aws_role_session_name": "...my_aws_role_session_name...",
                            "aws_sts_endpoint_url": "...my_aws_sts_endpoint_url..."
                          },
                          "gemini": {
                            "api_endpoint": "...my_api_endpoint...",
                            "location_id": "...my_location_id...",
                            "project_id": "...my_project_id..."
                          },
                          "huggingface": {
                            "use_cache": false,
                            "wait_for_model": false
                          },
                          "upstream_url": "...my_upstream_url..."
                        },
                        "provider": "bedrock"
                      }
                    },
                    "llm_format": "openai",
                    "max_request_body_size": 2,
                    "model_name_header": true,
                    "response_streaming": "deny",
                    "targets": [
                      {
                        "auth": {
                          "allow_override": true,
                          "aws_access_key_id": "...my_aws_access_key_id...",
                          "aws_secret_access_key": "...my_aws_secret_access_key...",
                          "azure_client_id": "...my_azure_client_id...",
                          "azure_client_secret": "...my_azure_client_secret...",
                          "azure_tenant_id": "...my_azure_tenant_id...",
                          "azure_use_managed_identity": false,
                          "gcp_service_account_json": "...my_gcp_service_account_json...",
                          "gcp_use_service_account": false,
                          "header_name": "...my_header_name...",
                          "header_value": "...my_header_value...",
                          "param_location": "body",
                          "param_name": "...my_param_name...",
                          "param_value": "...my_param_value..."
                        },
                        "description": "...my_description...",
                        "logging": {
                          "log_payloads": true,
                          "log_statistics": false
                        },
                        "model": {
                          "name": "...my_name...",
                          "options": {
                            "anthropic_version": "...my_anthropic_version...",
                            "azure_api_version": "...my_azure_api_version...",
                            "azure_deployment_id": "...my_azure_deployment_id...",
                            "azure_instance": "...my_azure_instance...",
                            "bedrock": {
                              "aws_assume_role_arn": "...my_aws_assume_role_arn...",
                              "aws_region": "...my_aws_region...",
                              "aws_role_session_name": "...my_aws_role_session_name...",
                              "aws_sts_endpoint_url": "...my_aws_sts_endpoint_url..."
                            },
                            "gemini": {
                              "api_endpoint": "...my_api_endpoint...",
                              "location_id": "...my_location_id...",
                              "project_id": "...my_project_id..."
                            },
                            "huggingface": {
                              "use_cache": false,
                              "wait_for_model": true
                            },
                            "input_cost": 9.55,
                            "llama2_format": "raw",
                            "max_tokens": 1,
                            "mistral_format": "ollama",
                            "output_cost": 1.21,
                            "temperature": 3.47,
                            "top_k": 180,
                            "top_p": 0.23,
                            "upstream_path": "...my_upstream_path...",
                            "upstream_url": "...my_upstream_url..."
                          },
                          "provider": "bedrock"
                        },
                        "route_type": "llm/v1/chat",
                        "weight": 7898
                      }
                    ],
                    "vectordb": {
                      "dimensions": 4,
                      "distance_metric": "euclidean",
                      "pgvector": {
                        "database": "...my_database...",
                        "host": "...my_host...",
                        "password": "...my_password...",
                        "port": 2,
                        "ssl": true,
                        "ssl_cert": "...my_ssl_cert...",
                        "ssl_cert_key": "...my_ssl_cert_key...",
                        "ssl_required": true,
                        "ssl_verify": false,
                        "ssl_version": "tlsv1_2",
                        "timeout": 1.29,
                        "user": "...my_user..."
                      },
                      "redis": {
                        "cluster_max_redirections": 8,
                        "cluster_nodes": [
                          {
                            "ip": "...my_ip...",
                            "port": 11385
                          }
                        ],
                        "connect_timeout": 1707750376,
                        "connection_is_proxied": false,
                        "database": 1,
                        "host": "...my_host...",
                        "keepalive_backlog": 1711497347,
                        "keepalive_pool_size": 1579881521,
                        "password": "...my_password...",
                        "port": 29474,
                        "read_timeout": 1971873846,
                        "send_timeout": 1172755346,
                        "sentinel_master": "...my_sentinel_master...",
                        "sentinel_nodes": [
                          {
                            "host": "...my_host...",
                            "port": 10275
                          }
                        ],
                        "sentinel_password": "...my_sentinel_password...",
                        "sentinel_role": "master",
                        "sentinel_username": "...my_sentinel_username...",
                        "server_name": "...my_server_name...",
                        "ssl": false,
                        "ssl_verify": true,
                        "username": "...my_username..."
                      },
                      "strategy": "pgvector",
                      "threshold": 0.52
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 7,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 10
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            algorithm: (String) Which load balancing algorithm to use. must be one of ["consistent-hashing", "lowest-latency", "lowest-usage", "priority", "round-robin", "semantic"]
            allow_override: (Boolean) If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin.
            anthropic_version: (String) Defines the schema/API version, if using Anthropic provider.
            api_endpoint: (String) If running Gemini on Vertex, specify the regional API endpoint (hostname only).
            api_version: (String) 'api-version' for Azure OpenAI instances.
            auth: (Attributes) (see below for nested schema)
            aws_access_key_id: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.
            aws_assume_role_arn: (String) If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.
            aws_region: (String) If using AWS providers (Bedrock) you can override the AWS_REGION environment variable by setting this option.
            aws_role_session_name: (String) If using AWS providers (Bedrock), set the identifier of the assumed role session.
            aws_secret_access_key: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.
            aws_sts_endpoint_url: (String) If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.
            azure: (Attributes) Not Null (see below for nested schema)
            azure_api_version: (String) 'api-version' for Azure OpenAI instances.
            azure_client_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.
            azure_client_secret: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.
            azure_deployment_id: (String) Deployment ID for Azure OpenAI instances.
            azure_instance: (String) Instance name for Azure OpenAI hosted models.
            azure_tenant_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.
            azure_use_managed_identity: (Boolean) Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models.
            balancer: (Attributes) (see below for nested schema)
            bedrock: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number)
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            database: (String) the database of the pgvector database
            deployment_id: (String) Deployment ID for Azure OpenAI instances.
            description: (String) The semantic description of the target, required if using semantic load balancing. Specially, setting this to 'CATCHALL' will indicate such target to be used when no other targets match the semantic threshold.
            dimensions: (Number) the desired dimensionality for the vectors. Not Null
            distance_metric: (String) the distance metric to use for vector searches. Not Null; must be one of ["cosine", "euclidean"]
            embeddings: (Attributes) (see below for nested schema)
            enabled: (Boolean) Whether the plugin is applied.
            failover_criteria: (List of String) Specifies in which cases an upstream response should be failover to the next target. Each option in the array is equivalent to the function of http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream
            gcp_service_account_json: (String) Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable GCP_SERVICE_ACCOUNT.
            gcp_use_service_account: (Boolean) Use service account auth for GCP-based providers and models.
            gemini: (Attributes) (see below for nested schema)
            hash_on_header: (String) The header to use for consistent-hashing.
            header_name: (String) If AI model requires authentication via Authorization or API key header, specify its name here.
            header_value: (String) Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.
            host: (String) the host of the pgvector database
            huggingface: (Attributes) (see below for nested schema)
            id: (String) The ID of this resource.
            input_cost: (Number) Defines the cost per 1M tokens in your prompt.
            instance: (String) Instance name for Azure OpenAI hosted models.
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            latency_strategy: '(String) What metrics to use for latency. Available values are: tpot (time-per-output-token) and e2e. must be one of ["e2e", "tpot"]'
            llama2_format: (String) If using llama2 provider, select the upstream message format. must be one of ["ollama", "openai", "raw"]
            llm_format: (String) LLM input and output format and schema to use. must be one of ["bedrock", "gemini", "openai"]
            location_id: (String) If running Gemini on Vertex, specify the location ID.
            log_payloads: (Boolean) If enabled, will log the request and response body into the Kong log plugin(s) output.
            log_statistics: (Boolean) If enabled and supported by the driver, will add model usage and token metrics into the Kong log plugin(s) output.
            logging: (Attributes) Not Null (see below for nested schema)
            max_request_body_size: (Number) max allowed body size allowed to be introspected
            max_tokens: (Number) Defines the max_tokens, if using chat or completion models.
            mistral_format: (String) If using mistral provider, select the upstream message format. must be one of ["ollama", "openai"]
            model: (Attributes) Not Null (see below for nested schema)
            model_name_header: (Boolean) Display the model name selected in the X-Kong-LLM-Model response header
            name: (String) Model name to execute. Not Null
            options: (Attributes) Key/value settings for the model (see below for nested schema)
            ordering: (Attributes) (see below for nested schema)
            output_cost: (Number) Defines the cost per 1M tokens in the output of the AI.
            param_location: (String) Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of ["body", "query"]
            param_name: (String) If AI model requires authentication via query parameter, specify its name here.
            param_value: (String) Specify the full parameter value for 'param_name'.
            partials: (Attributes List) (see below for nested schema)
            password: (String) the password of the pgvector database
            path: (String)
            pgvector: (Attributes) Not Null (see below for nested schema)
            port: (Number) the port of the pgvector database
            project_id: (String) If running Gemini on Vertex, specify the project ID.
            protocols: (List of String) A set of strings representing HTTP protocols.
            provider: (String) AI provider format to use for embeddings API. Not Null; must be one of ["azure", "bedrock", "gemini", "huggingface", "mistral", "openai"]
            read_timeout: (Number)
            redis: (Attributes) Not Null (see below for nested schema)
            response_streaming: (String) Whether to 'optionally allow', 'deny', or 'always' (force) the streaming of answers via server sent events. must be one of ["allow", "always", "deny"]
            retries: (Number) The number of retries to execute upon failure to proxy.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            route_type: (String) The model's operation implementation, for this provider. Set to preserve to pass through without transformation. Not Null; must be one of ["llm/v1/chat", "llm/v1/completions", "preserve"]
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            slots: (Number) The number of slots in the load balancer algorithm.
            ssl: (Boolean) whether to use ssl for the pgvector database
            ssl_cert: (String) the path of ssl cert to use for the pgvector database
            ssl_cert_key: (String) the path of ssl cert key to use for the pgvector database
            ssl_required: (Boolean) whether ssl is required for the pgvector database
            ssl_verify: (Boolean) whether to verify ssl for the pgvector database
            ssl_version: (String) the ssl version to use for the pgvector database. must be one of ["any", "tlsv1_2", "tlsv1_3"]
            strategy: (String) which vector database driver to use. Not Null; must be one of ["pgvector", "redis"]
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            targets: (Attributes List) (see below for nested schema)
            temperature: (Number) Defines the matching temperature, if using chat or completion models.
            threshold: (Number) the default similarity threshold for accepting semantic search results (float). Not Null
            timeout: (Number) the timeout of the pgvector database
            tokens_count_strategy: '(String) What tokens to use for usage calculation. Available values are: total_tokens prompt_tokens, completion_tokens and cost. must be one of ["completion-tokens", "cost", "prompt-tokens", "total-tokens"]'
            top_k: (Number) Defines the top-k most likely tokens, if supported.
            top_p: (Number) Defines the top-p probability mass, if supported.
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_path: (String) Manually specify or override the AI operation path, used when e.g. using the 'preserve' route_type.
            upstream_url: (String) upstream url for the embeddings
            use_cache: (Boolean) Use the cache layer on the inference API
            user: (String) the user of the pgvector database
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            vectordb: (Attributes) (see below for nested schema)
            wait_for_model: (Boolean) Wait for the model if it is not ready
            weight: (Number) The weight this target gets within the upstream loadbalancer (1-65535).
            write_timeout: (Number)
        importStatements:
            - terraform import kong-gateway_plugin_ai_proxy_advanced.my_kong-gateway_plugin_ai_proxy_advanced ""
    kong-gateway_plugin_ai_rag_injector:
        subCategory: ""
        description: PluginAiRagInjector Resource
        name: kong-gateway_plugin_ai_rag_injector
        title: kong-gateway_plugin_ai_rag_injector Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginairaginjector
              manifest: |-
                {
                  "config": {
                    "embeddings": {
                      "auth": {
                        "allow_override": false,
                        "aws_access_key_id": "...my_aws_access_key_id...",
                        "aws_secret_access_key": "...my_aws_secret_access_key...",
                        "azure_client_id": "...my_azure_client_id...",
                        "azure_client_secret": "...my_azure_client_secret...",
                        "azure_tenant_id": "...my_azure_tenant_id...",
                        "azure_use_managed_identity": false,
                        "gcp_service_account_json": "...my_gcp_service_account_json...",
                        "gcp_use_service_account": false,
                        "header_name": "...my_header_name...",
                        "header_value": "...my_header_value...",
                        "param_location": "query",
                        "param_name": "...my_param_name...",
                        "param_value": "...my_param_value..."
                      },
                      "model": {
                        "name": "...my_name...",
                        "options": {
                          "azure": {
                            "api_version": "...my_api_version...",
                            "deployment_id": "...my_deployment_id...",
                            "instance": "...my_instance..."
                          },
                          "bedrock": {
                            "aws_assume_role_arn": "...my_aws_assume_role_arn...",
                            "aws_region": "...my_aws_region...",
                            "aws_role_session_name": "...my_aws_role_session_name...",
                            "aws_sts_endpoint_url": "...my_aws_sts_endpoint_url..."
                          },
                          "gemini": {
                            "api_endpoint": "...my_api_endpoint...",
                            "location_id": "...my_location_id...",
                            "project_id": "...my_project_id..."
                          },
                          "huggingface": {
                            "use_cache": false,
                            "wait_for_model": true
                          },
                          "upstream_url": "...my_upstream_url..."
                        },
                        "provider": "azure"
                      }
                    },
                    "fetch_chunks_count": 4.28,
                    "inject_as_role": "system",
                    "inject_template": "...my_inject_template...",
                    "stop_on_failure": false,
                    "vectordb": {
                      "dimensions": 8,
                      "distance_metric": "cosine",
                      "pgvector": {
                        "database": "...my_database...",
                        "host": "...my_host...",
                        "password": "...my_password...",
                        "port": 3,
                        "ssl": true,
                        "ssl_cert": "...my_ssl_cert...",
                        "ssl_cert_key": "...my_ssl_cert_key...",
                        "ssl_required": true,
                        "ssl_verify": true,
                        "ssl_version": "tlsv1_3",
                        "timeout": 2.36,
                        "user": "...my_user..."
                      },
                      "redis": {
                        "cluster_max_redirections": 5,
                        "cluster_nodes": [
                          {
                            "ip": "...my_ip...",
                            "port": 44965
                          }
                        ],
                        "connect_timeout": 1450856028,
                        "connection_is_proxied": true,
                        "database": 5,
                        "host": "...my_host...",
                        "keepalive_backlog": 1106489394,
                        "keepalive_pool_size": 1424533900,
                        "password": "...my_password...",
                        "port": 63827,
                        "read_timeout": 1623294065,
                        "send_timeout": 1676531505,
                        "sentinel_master": "...my_sentinel_master...",
                        "sentinel_nodes": [
                          {
                            "host": "...my_host...",
                            "port": 36616
                          }
                        ],
                        "sentinel_password": "...my_sentinel_password...",
                        "sentinel_role": "slave",
                        "sentinel_username": "...my_sentinel_username...",
                        "server_name": "...my_server_name...",
                        "ssl": true,
                        "ssl_verify": true,
                        "username": "...my_username..."
                      },
                      "strategy": "redis"
                    },
                    "vectordb_namespace": "...my_vectordb_namespace..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 3,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_override: (Boolean) If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin.
            api_endpoint: (String) If running Gemini on Vertex, specify the regional API endpoint (hostname only).
            api_version: (String) 'api-version' for Azure OpenAI instances.
            auth: (Attributes) (see below for nested schema)
            aws_access_key_id: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.
            aws_assume_role_arn: (String) If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.
            aws_region: (String) If using AWS providers (Bedrock) you can override the AWS_REGION environment variable by setting this option.
            aws_role_session_name: (String) If using AWS providers (Bedrock), set the identifier of the assumed role session.
            aws_secret_access_key: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.
            aws_sts_endpoint_url: (String) If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.
            azure: (Attributes) Not Null (see below for nested schema)
            azure_client_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.
            azure_client_secret: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.
            azure_tenant_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.
            azure_use_managed_identity: (Boolean) Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models.
            bedrock: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            database: (String) the database of the pgvector database
            deployment_id: (String) Deployment ID for Azure OpenAI instances.
            dimensions: (Number) the desired dimensionality for the vectors
            distance_metric: (String) the distance metric to use for vector searches. must be one of ["cosine", "euclidean"]
            embeddings: (Attributes) (see below for nested schema)
            enabled: (Boolean) Whether the plugin is applied.
            fetch_chunks_count: (Number) The maximum number of chunks to fetch from vectordb
            gcp_service_account_json: (String) Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable GCP_SERVICE_ACCOUNT.
            gcp_use_service_account: (Boolean) Use service account auth for GCP-based providers and models.
            gemini: (Attributes) (see below for nested schema)
            header_name: (String) If AI model requires authentication via Authorization or API key header, specify its name here.
            header_value: (String) Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.
            host: (String) the host of the pgvector database
            huggingface: (Attributes) (see below for nested schema)
            id: (String) The ID of this resource.
            inject_as_role: (String) must be one of ["assistant", "system", "user"]
            inject_template: (String)
            instance: (String) Instance name for Azure OpenAI hosted models.
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            location_id: (String) If running Gemini on Vertex, specify the location ID.
            model: (Attributes) (see below for nested schema)
            name: (String) Model name to execute.
            options: (Attributes) Key/value settings for the model (see below for nested schema)
            ordering: (Attributes) (see below for nested schema)
            param_location: (String) Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of ["body", "query"]
            param_name: (String) If AI model requires authentication via query parameter, specify its name here.
            param_value: (String) Specify the full parameter value for 'param_name'.
            partials: (Attributes List) (see below for nested schema)
            password: (String) the password of the pgvector database
            path: (String)
            pgvector: (Attributes) (see below for nested schema)
            port: (Number) the port of the pgvector database
            project_id: (String) If running Gemini on Vertex, specify the project ID.
            protocols: (List of String) A set of strings representing HTTP protocols.
            provider: (String) AI provider format to use for embeddings API. must be one of ["azure", "bedrock", "gemini", "huggingface", "mistral", "openai"]
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redis: (Attributes) (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) whether to use ssl for the pgvector database
            ssl_cert: (String) the path of ssl cert to use for the pgvector database
            ssl_cert_key: (String) the path of ssl cert key to use for the pgvector database
            ssl_required: (Boolean) whether ssl is required for the pgvector database
            ssl_verify: (Boolean) whether to verify ssl for the pgvector database
            ssl_version: (String) the ssl version to use for the pgvector database. must be one of ["any", "tlsv1_2", "tlsv1_3"]
            stop_on_failure: (Boolean) Halt the LLM request process in case of a vectordb or embeddings service failure
            strategy: (String) which vector database driver to use. must be one of ["pgvector", "redis"]
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) the timeout of the pgvector database
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_url: (String) upstream url for the embeddings
            use_cache: (Boolean) Use the cache layer on the inference API
            user: (String) the user of the pgvector database
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            vectordb: (Attributes) (see below for nested schema)
            vectordb_namespace: (String) The namespace of the vectordb to use for embeddings lookup
            wait_for_model: (Boolean) Wait for the model if it is not ready
        importStatements:
            - terraform import kong-gateway_plugin_ai_rag_injector.my_kong-gateway_plugin_ai_rag_injector ""
    kong-gateway_plugin_ai_rate_limiting_advanced:
        subCategory: ""
        description: PluginAiRateLimitingAdvanced Resource
        name: kong-gateway_plugin_ai_rate_limiting_advanced
        title: kong-gateway_plugin_ai_rate_limiting_advanced Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginairatelimitingadvanced
              manifest: |-
                {
                  "config": {
                    "dictionary_name": "...my_dictionary_name...",
                    "disable_penalty": true,
                    "error_code": 5.27,
                    "error_hide_providers": false,
                    "error_message": "...my_error_message...",
                    "header_name": "...my_header_name...",
                    "hide_client_headers": true,
                    "identifier": "header",
                    "llm_format": "bedrock",
                    "llm_providers": [
                      {
                        "limit": [
                          7.24
                        ],
                        "name": "azure",
                        "window_size": [
                          5.85
                        ]
                      }
                    ],
                    "path": "...my_path...",
                    "redis": {
                      "cluster_max_redirections": 8,
                      "cluster_nodes": [
                        {
                          "ip": "...my_ip...",
                          "port": 1877
                        }
                      ],
                      "connect_timeout": 400425519,
                      "connection_is_proxied": true,
                      "database": 9,
                      "host": "...my_host...",
                      "keepalive_backlog": 415391695,
                      "keepalive_pool_size": 1929371908,
                      "password": "...my_password...",
                      "port": 64064,
                      "read_timeout": 758708690,
                      "send_timeout": 1341651644,
                      "sentinel_master": "...my_sentinel_master...",
                      "sentinel_nodes": [
                        {
                          "host": "...my_host...",
                          "port": 14902
                        }
                      ],
                      "sentinel_password": "...my_sentinel_password...",
                      "sentinel_role": "any",
                      "sentinel_username": "...my_sentinel_username...",
                      "server_name": "...my_server_name...",
                      "ssl": false,
                      "ssl_verify": false,
                      "username": "...my_username..."
                    },
                    "request_prompt_count_function": "...my_request_prompt_count_function...",
                    "retry_after_jitter_max": 6.92,
                    "strategy": "local",
                    "sync_rate": 1.66,
                    "tokens_count_strategy": "total_tokens",
                    "window_type": "fixed"
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 2,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 5
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            database: (Number) Database to use for the Redis connection when using the redis strategy
            dictionary_name: (String) The shared dictionary where counters are stored. When the plugin is configured to synchronize counter data externally (that is config.strategy is cluster or redis and config.sync_rate isn't -1), this dictionary serves as a buffer to populate counters in the data store on each synchronization cycle.
            disable_penalty: (Boolean) If set to true, this doesn't count denied requests (status = 429). If set to false, all requests, including denied ones, are counted. This parameter only affects the sliding window_type and the request prompt provider.
            enabled: (Boolean) Whether the plugin is applied.
            error_code: (Number) Set a custom error code to return when the rate limit is exceeded.
            error_hide_providers: (Boolean) Optionally hide informative response that would otherwise provide information about the provider in the error message.
            error_message: (String) Set a custom error message to return when the rate limit is exceeded.
            header_name: (String) A string representing an HTTP header name.
            hide_client_headers: (Boolean) Optionally hide informative response headers that would otherwise provide information about the current status of limits and counters.
            host: (String) A string representing a host name, such as example.com.
            id: (String) The ID of this resource.
            identifier: (String) The type of identifier used to generate the rate limit key. Defines the scope used to increment the rate limiting counters. Can be ip, credential, consumer, service, header, path or consumer-group. Note if identifier is consumer-group, the plugin must be applied on a consumer group entity. Because a consumer may belong to multiple consumer groups, the plugin needs to know explicitly which consumer group to limit the rate. must be one of ["consumer", "consumer-group", "credential", "header", "ip", "path", "service"]
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            limit: (List of Number) One or more requests-per-window limits to apply. There must be a matching number of window limits and sizes specified. Not Null
            llm_format: (String) LLM input and output format and schema to use. must be one of ["bedrock", "gemini", "openai"]
            llm_providers: (Attributes List) The provider config. Takes an array of name, limit and window size values. (see below for nested schema)
            name: (String) The LLM provider to which the rate limit applies. Not Null; must be one of ["anthropic", "azure", "bedrock", "cohere", "gemini", "huggingface", "llama2", "mistral", "openai", "requestPrompt"]
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            path: (String) A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing HTTP protocols.
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redis: (Attributes) (see below for nested schema)
            request_prompt_count_function: (String) If defined, it use custom function to count requests for the request prompt provider
            retry_after_jitter_max: (Number) The upper bound of a jitter (random delay) in seconds to be added to the Retry-After header of denied requests (status = 429) in order to prevent all the clients from coming back at the same time. The lower bound of the jitter is 0; in this case, the Retry-After header is equal to the RateLimit-Reset header.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_verify: (Boolean) If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure lua_ssl_trusted_certificate in kong.conf to specify the CA (or server) certificate used by your Redis server. You may also need to configure lua_ssl_verify_depth accordingly.
            strategy: '(String) The rate-limiting strategy to use for retrieving and incrementing the limits. Available values are: local and cluster. must be one of ["cluster", "local", "redis"]'
            sync_rate: (Number) How often to sync counter data to the central data store. A value of 0 results in synchronous behavior; a value of -1 ignores sync behavior entirely and only stores counters in node memory. A value greater than 0 will sync the counters in the specified number of seconds. The minimum allowed interval is 0.02 seconds (20ms).
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            tokens_count_strategy: '(String) What tokens to use for cost calculation. Available values are: total_tokens prompt_tokens, completion_tokens or cost. must be one of ["completion_tokens", "cost", "prompt_tokens", "total_tokens"]'
            updated_at: (Number) Unix epoch when the resource was last updated.
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            window_size: (List of Number) One or more window sizes to apply a limit to (defined in seconds). There must be a matching number of window limits and sizes specified. Not Null
            window_type: (String) Sets the time window type to either sliding (default) or fixed. Sliding windows apply the rate limiting logic while taking into account previous hit rates (from the window that immediately precedes the current) using a dynamic weight. Fixed windows consist of buckets that are statically assigned to a definitive time range, each request is mapped to only one fixed window based on its timestamp and will affect only that window's counters. must be one of ["fixed", "sliding"]
        importStatements:
            - terraform import kong-gateway_plugin_ai_rate_limiting_advanced.my_kong-gateway_plugin_ai_rate_limiting_advanced ""
    kong-gateway_plugin_ai_request_transformer:
        subCategory: ""
        description: PluginAiRequestTransformer Resource
        name: kong-gateway_plugin_ai_request_transformer
        title: kong-gateway_plugin_ai_request_transformer Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginairequesttransformer
              manifest: |-
                {
                  "config": {
                    "http_proxy_host": "...my_http_proxy_host...",
                    "http_proxy_port": 24415,
                    "http_timeout": 2,
                    "https_proxy_host": "...my_https_proxy_host...",
                    "https_proxy_port": 63994,
                    "https_verify": true,
                    "llm": {
                      "auth": {
                        "allow_override": false,
                        "aws_access_key_id": "...my_aws_access_key_id...",
                        "aws_secret_access_key": "...my_aws_secret_access_key...",
                        "azure_client_id": "...my_azure_client_id...",
                        "azure_client_secret": "...my_azure_client_secret...",
                        "azure_tenant_id": "...my_azure_tenant_id...",
                        "azure_use_managed_identity": true,
                        "gcp_service_account_json": "...my_gcp_service_account_json...",
                        "gcp_use_service_account": false,
                        "header_name": "...my_header_name...",
                        "header_value": "...my_header_value...",
                        "param_location": "query",
                        "param_name": "...my_param_name...",
                        "param_value": "...my_param_value..."
                      },
                      "logging": {
                        "log_payloads": false,
                        "log_statistics": false
                      },
                      "model": {
                        "name": "...my_name...",
                        "options": {
                          "anthropic_version": "...my_anthropic_version...",
                          "azure_api_version": "...my_azure_api_version...",
                          "azure_deployment_id": "...my_azure_deployment_id...",
                          "azure_instance": "...my_azure_instance...",
                          "bedrock": {
                            "aws_assume_role_arn": "...my_aws_assume_role_arn...",
                            "aws_region": "...my_aws_region...",
                            "aws_role_session_name": "...my_aws_role_session_name...",
                            "aws_sts_endpoint_url": "...my_aws_sts_endpoint_url..."
                          },
                          "gemini": {
                            "api_endpoint": "...my_api_endpoint...",
                            "location_id": "...my_location_id...",
                            "project_id": "...my_project_id..."
                          },
                          "huggingface": {
                            "use_cache": true,
                            "wait_for_model": false
                          },
                          "input_cost": 6.07,
                          "llama2_format": "raw",
                          "max_tokens": 10,
                          "mistral_format": "openai",
                          "output_cost": 0.7,
                          "temperature": 0.38,
                          "top_k": 492,
                          "top_p": 0.12,
                          "upstream_path": "...my_upstream_path...",
                          "upstream_url": "...my_upstream_url..."
                        },
                        "provider": "llama2"
                      },
                      "route_type": "llm/v1/chat"
                    },
                    "max_request_body_size": 2,
                    "prompt": "...my_prompt...",
                    "transformation_extract_pattern": "...my_transformation_extract_pattern..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 6,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 10
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_override: (Boolean) If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin.
            anthropic_version: (String) Defines the schema/API version, if using Anthropic provider.
            api_endpoint: (String) If running Gemini on Vertex, specify the regional API endpoint (hostname only).
            auth: (Attributes) (see below for nested schema)
            aws_access_key_id: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.
            aws_assume_role_arn: (String) If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.
            aws_region: (String) If using AWS providers (Bedrock) you can override the AWS_REGION environment variable by setting this option.
            aws_role_session_name: (String) If using AWS providers (Bedrock), set the identifier of the assumed role session.
            aws_secret_access_key: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.
            aws_sts_endpoint_url: (String) If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.
            azure_api_version: (String) 'api-version' for Azure OpenAI instances.
            azure_client_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.
            azure_client_secret: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.
            azure_deployment_id: (String) Deployment ID for Azure OpenAI instances.
            azure_instance: (String) Instance name for Azure OpenAI hosted models.
            azure_tenant_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.
            azure_use_managed_identity: (Boolean) Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models.
            bedrock: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            gcp_service_account_json: (String) Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable GCP_SERVICE_ACCOUNT.
            gcp_use_service_account: (Boolean) Use service account auth for GCP-based providers and models.
            gemini: (Attributes) (see below for nested schema)
            header_name: (String) If AI model requires authentication via Authorization or API key header, specify its name here.
            header_value: (String) Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.
            http_proxy_host: (String) A string representing a host name, such as example.com.
            http_proxy_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            http_timeout: (Number) Timeout in milliseconds for the AI upstream service.
            https_proxy_host: (String) A string representing a host name, such as example.com.
            https_proxy_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            https_verify: (Boolean) Verify the TLS certificate of the AI upstream service.
            huggingface: (Attributes) (see below for nested schema)
            id: (String) The ID of this resource.
            input_cost: (Number) Defines the cost per 1M tokens in your prompt.
            instance_name: (String)
            llama2_format: (String) If using llama2 provider, select the upstream message format. must be one of ["ollama", "openai", "raw"]
            llm: (Attributes) (see below for nested schema)
            location_id: (String) If running Gemini on Vertex, specify the location ID.
            log_payloads: (Boolean) If enabled, will log the request and response body into the Kong log plugin(s) output.
            log_statistics: (Boolean) If enabled and supported by the driver, will add model usage and token metrics into the Kong log plugin(s) output.
            logging: (Attributes) (see below for nested schema)
            max_request_body_size: (Number) max allowed body size allowed to be introspected
            max_tokens: (Number) Defines the max_tokens, if using chat or completion models.
            mistral_format: (String) If using mistral provider, select the upstream message format. must be one of ["ollama", "openai"]
            model: (Attributes) (see below for nested schema)
            name: (String) Model name to execute.
            options: (Attributes) Key/value settings for the model (see below for nested schema)
            ordering: (Attributes) (see below for nested schema)
            output_cost: (Number) Defines the cost per 1M tokens in the output of the AI.
            param_location: (String) Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of ["body", "query"]
            param_name: (String) If AI model requires authentication via query parameter, specify its name here.
            param_value: (String) Specify the full parameter value for 'param_name'.
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            project_id: (String) If running Gemini on Vertex, specify the project ID.
            prompt: (String) Use this prompt to tune the LLM system/assistant message for the incoming proxy request (from the client), and what you are expecting in return.
            protocols: (List of String) A set of strings representing HTTP protocols.
            provider: (String) AI provider request format - Kong translates requests to and from the specified backend compatible formats. must be one of ["anthropic", "azure", "bedrock", "cohere", "gemini", "huggingface", "llama2", "mistral", "openai"]
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            route_type: (String) The model's operation implementation, for this provider. Set to preserve to pass through without transformation. must be one of ["llm/v1/chat", "llm/v1/completions", "preserve"]
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            temperature: (Number) Defines the matching temperature, if using chat or completion models.
            top_k: (Number) Defines the top-k most likely tokens, if supported.
            top_p: (Number) Defines the top-p probability mass, if supported.
            transformation_extract_pattern: (String) Defines the regular expression that must match to indicate a successful AI transformation at the request phase. The first match will be set as the outgoing body. If the AI service's response doesn't match this pattern, it is marked as a failure.
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_path: (String) Manually specify or override the AI operation path, used when e.g. using the 'preserve' route_type.
            upstream_url: (String) Manually specify or override the full URL to the AI operation endpoints, when calling (self-)hosted models, or for running via a private endpoint.
            use_cache: (Boolean) Use the cache layer on the inference API
            wait_for_model: (Boolean) Wait for the model if it is not ready
        importStatements:
            - terraform import kong-gateway_plugin_ai_request_transformer.my_kong-gateway_plugin_ai_request_transformer ""
    kong-gateway_plugin_ai_response_transformer:
        subCategory: ""
        description: PluginAiResponseTransformer Resource
        name: kong-gateway_plugin_ai_response_transformer
        title: kong-gateway_plugin_ai_response_transformer Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginairesponsetransformer
              manifest: |-
                {
                  "config": {
                    "http_proxy_host": "...my_http_proxy_host...",
                    "http_proxy_port": 26589,
                    "http_timeout": 7,
                    "https_proxy_host": "...my_https_proxy_host...",
                    "https_proxy_port": 19730,
                    "https_verify": false,
                    "llm": {
                      "auth": {
                        "allow_override": true,
                        "aws_access_key_id": "...my_aws_access_key_id...",
                        "aws_secret_access_key": "...my_aws_secret_access_key...",
                        "azure_client_id": "...my_azure_client_id...",
                        "azure_client_secret": "...my_azure_client_secret...",
                        "azure_tenant_id": "...my_azure_tenant_id...",
                        "azure_use_managed_identity": false,
                        "gcp_service_account_json": "...my_gcp_service_account_json...",
                        "gcp_use_service_account": false,
                        "header_name": "...my_header_name...",
                        "header_value": "...my_header_value...",
                        "param_location": "body",
                        "param_name": "...my_param_name...",
                        "param_value": "...my_param_value..."
                      },
                      "logging": {
                        "log_payloads": true,
                        "log_statistics": false
                      },
                      "model": {
                        "name": "...my_name...",
                        "options": {
                          "anthropic_version": "...my_anthropic_version...",
                          "azure_api_version": "...my_azure_api_version...",
                          "azure_deployment_id": "...my_azure_deployment_id...",
                          "azure_instance": "...my_azure_instance...",
                          "bedrock": {
                            "aws_assume_role_arn": "...my_aws_assume_role_arn...",
                            "aws_region": "...my_aws_region...",
                            "aws_role_session_name": "...my_aws_role_session_name...",
                            "aws_sts_endpoint_url": "...my_aws_sts_endpoint_url..."
                          },
                          "gemini": {
                            "api_endpoint": "...my_api_endpoint...",
                            "location_id": "...my_location_id...",
                            "project_id": "...my_project_id..."
                          },
                          "huggingface": {
                            "use_cache": true,
                            "wait_for_model": true
                          },
                          "input_cost": 1.4,
                          "llama2_format": "ollama",
                          "max_tokens": 7,
                          "mistral_format": "openai",
                          "output_cost": 4.74,
                          "temperature": 0.53,
                          "top_k": 425,
                          "top_p": 0.68,
                          "upstream_path": "...my_upstream_path...",
                          "upstream_url": "...my_upstream_url..."
                        },
                        "provider": "huggingface"
                      },
                      "route_type": "llm/v1/chat"
                    },
                    "max_request_body_size": 0,
                    "parse_llm_response_json_instructions": true,
                    "prompt": "...my_prompt...",
                    "transformation_extract_pattern": "...my_transformation_extract_pattern..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 10
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_override: (Boolean) If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin.
            anthropic_version: (String) Defines the schema/API version, if using Anthropic provider.
            api_endpoint: (String) If running Gemini on Vertex, specify the regional API endpoint (hostname only).
            auth: (Attributes) (see below for nested schema)
            aws_access_key_id: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.
            aws_assume_role_arn: (String) If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.
            aws_region: (String) If using AWS providers (Bedrock) you can override the AWS_REGION environment variable by setting this option.
            aws_role_session_name: (String) If using AWS providers (Bedrock), set the identifier of the assumed role session.
            aws_secret_access_key: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.
            aws_sts_endpoint_url: (String) If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.
            azure_api_version: (String) 'api-version' for Azure OpenAI instances.
            azure_client_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.
            azure_client_secret: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.
            azure_deployment_id: (String) Deployment ID for Azure OpenAI instances.
            azure_instance: (String) Instance name for Azure OpenAI hosted models.
            azure_tenant_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.
            azure_use_managed_identity: (Boolean) Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models.
            bedrock: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            gcp_service_account_json: (String) Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable GCP_SERVICE_ACCOUNT.
            gcp_use_service_account: (Boolean) Use service account auth for GCP-based providers and models.
            gemini: (Attributes) (see below for nested schema)
            header_name: (String) If AI model requires authentication via Authorization or API key header, specify its name here.
            header_value: (String) Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.
            http_proxy_host: (String) A string representing a host name, such as example.com.
            http_proxy_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            http_timeout: (Number) Timeout in milliseconds for the AI upstream service.
            https_proxy_host: (String) A string representing a host name, such as example.com.
            https_proxy_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            https_verify: (Boolean) Verify the TLS certificate of the AI upstream service.
            huggingface: (Attributes) (see below for nested schema)
            id: (String) The ID of this resource.
            input_cost: (Number) Defines the cost per 1M tokens in your prompt.
            instance_name: (String)
            llama2_format: (String) If using llama2 provider, select the upstream message format. must be one of ["ollama", "openai", "raw"]
            llm: (Attributes) (see below for nested schema)
            location_id: (String) If running Gemini on Vertex, specify the location ID.
            log_payloads: (Boolean) If enabled, will log the request and response body into the Kong log plugin(s) output.
            log_statistics: (Boolean) If enabled and supported by the driver, will add model usage and token metrics into the Kong log plugin(s) output.
            logging: (Attributes) (see below for nested schema)
            max_request_body_size: (Number) max allowed body size allowed to be introspected
            max_tokens: (Number) Defines the max_tokens, if using chat or completion models.
            mistral_format: (String) If using mistral provider, select the upstream message format. must be one of ["ollama", "openai"]
            model: (Attributes) (see below for nested schema)
            name: (String) Model name to execute.
            options: (Attributes) Key/value settings for the model (see below for nested schema)
            ordering: (Attributes) (see below for nested schema)
            output_cost: (Number) Defines the cost per 1M tokens in the output of the AI.
            param_location: (String) Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of ["body", "query"]
            param_name: (String) If AI model requires authentication via query parameter, specify its name here.
            param_value: (String) Specify the full parameter value for 'param_name'.
            parse_llm_response_json_instructions: (Boolean) Set true to read specific response format from the LLM, and accordingly set the status code / body / headers that proxy back to the client. You need to engineer your LLM prompt to return the correct format, see plugin docs 'Overview' page for usage instructions.
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            project_id: (String) If running Gemini on Vertex, specify the project ID.
            prompt: (String) Use this prompt to tune the LLM system/assistant message for the returning proxy response (from the upstream), adn what response format you are expecting.
            protocols: (List of String) A set of strings representing HTTP protocols.
            provider: (String) AI provider request format - Kong translates requests to and from the specified backend compatible formats. must be one of ["anthropic", "azure", "bedrock", "cohere", "gemini", "huggingface", "llama2", "mistral", "openai"]
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            route_type: (String) The model's operation implementation, for this provider. Set to preserve to pass through without transformation. must be one of ["llm/v1/chat", "llm/v1/completions", "preserve"]
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            temperature: (Number) Defines the matching temperature, if using chat or completion models.
            top_k: (Number) Defines the top-k most likely tokens, if supported.
            top_p: (Number) Defines the top-p probability mass, if supported.
            transformation_extract_pattern: (String) Defines the regular expression that must match to indicate a successful AI transformation at the response phase. The first match will be set as the returning body. If the AI service's response doesn't match this pattern, a failure is returned to the client.
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_path: (String) Manually specify or override the AI operation path, used when e.g. using the 'preserve' route_type.
            upstream_url: (String) Manually specify or override the full URL to the AI operation endpoints, when calling (self-)hosted models, or for running via a private endpoint.
            use_cache: (Boolean) Use the cache layer on the inference API
            wait_for_model: (Boolean) Wait for the model if it is not ready
        importStatements:
            - terraform import kong-gateway_plugin_ai_response_transformer.my_kong-gateway_plugin_ai_response_transformer ""
    kong-gateway_plugin_ai_sanitizer:
        subCategory: ""
        description: PluginAiSanitizer Resource
        name: kong-gateway_plugin_ai_sanitizer
        title: kong-gateway_plugin_ai_sanitizer Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginaisanitizer
              manifest: |-
                {
                  "config": {
                    "anonymize": [
                      "ssn"
                    ],
                    "custom_patterns": [
                      {
                        "name": "...my_name...",
                        "regex": "...my_regex...",
                        "score": 0.71
                      }
                    ],
                    "host": "...my_host...",
                    "keepalive_timeout": 9.88,
                    "port": 5.24,
                    "recover_redacted": true,
                    "redact_type": "placeholder",
                    "scheme": "...my_scheme...",
                    "stop_on_error": false,
                    "timeout": 3.64
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 0,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            anonymize: (List of String) List of types to be anonymized
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            custom_patterns: (Attributes List) List of custom patterns to be used for anonymization (see below for nested schema)
            enabled: (Boolean) Whether the plugin is applied.
            host: (String) The host of the sanitizer
            id: (String) The ID of this resource.
            instance_name: (String)
            keepalive_timeout: (Number) The keepalive timeout for the established http connnection
            name: (String) Not Null
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            port: (Number) The port of the sanitizer
            protocols: (List of String) A set of strings representing HTTP protocols.
            recover_redacted: (Boolean) Whether to recover redacted data
            redact_type: (String) What value to be used to redacted to. must be one of ["placeholder", "synthetic"]
            regex: (String) Not Null
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            scheme: (String) The protocol can be http and https
            score: (Number)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            stop_on_error: (Boolean) Stop processing if an error occurs
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) Connection timeout with the sanitizer
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_ai_sanitizer.my_kong-gateway_plugin_ai_sanitizer ""
    kong-gateway_plugin_ai_semantic_cache:
        subCategory: ""
        description: PluginAiSemanticCache Resource
        name: kong-gateway_plugin_ai_semantic_cache
        title: kong-gateway_plugin_ai_semantic_cache Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginaisemanticcache
              manifest: |-
                {
                  "config": {
                    "cache_control": true,
                    "cache_ttl": 8,
                    "embeddings": {
                      "auth": {
                        "allow_override": false,
                        "aws_access_key_id": "...my_aws_access_key_id...",
                        "aws_secret_access_key": "...my_aws_secret_access_key...",
                        "azure_client_id": "...my_azure_client_id...",
                        "azure_client_secret": "...my_azure_client_secret...",
                        "azure_tenant_id": "...my_azure_tenant_id...",
                        "azure_use_managed_identity": false,
                        "gcp_service_account_json": "...my_gcp_service_account_json...",
                        "gcp_use_service_account": true,
                        "header_name": "...my_header_name...",
                        "header_value": "...my_header_value...",
                        "param_location": "query",
                        "param_name": "...my_param_name...",
                        "param_value": "...my_param_value..."
                      },
                      "model": {
                        "name": "...my_name...",
                        "options": {
                          "azure": {
                            "api_version": "...my_api_version...",
                            "deployment_id": "...my_deployment_id...",
                            "instance": "...my_instance..."
                          },
                          "bedrock": {
                            "aws_assume_role_arn": "...my_aws_assume_role_arn...",
                            "aws_region": "...my_aws_region...",
                            "aws_role_session_name": "...my_aws_role_session_name...",
                            "aws_sts_endpoint_url": "...my_aws_sts_endpoint_url..."
                          },
                          "gemini": {
                            "api_endpoint": "...my_api_endpoint...",
                            "location_id": "...my_location_id...",
                            "project_id": "...my_project_id..."
                          },
                          "huggingface": {
                            "use_cache": true,
                            "wait_for_model": false
                          },
                          "upstream_url": "...my_upstream_url..."
                        },
                        "provider": "huggingface"
                      }
                    },
                    "exact_caching": false,
                    "ignore_assistant_prompts": true,
                    "ignore_system_prompts": true,
                    "ignore_tool_prompts": true,
                    "llm_format": "gemini",
                    "message_countback": 719.66,
                    "stop_on_failure": false,
                    "vectordb": {
                      "dimensions": 1,
                      "distance_metric": "cosine",
                      "pgvector": {
                        "database": "...my_database...",
                        "host": "...my_host...",
                        "password": "...my_password...",
                        "port": 8,
                        "ssl": false,
                        "ssl_cert": "...my_ssl_cert...",
                        "ssl_cert_key": "...my_ssl_cert_key...",
                        "ssl_required": true,
                        "ssl_verify": false,
                        "ssl_version": "tlsv1_2",
                        "timeout": 8.68,
                        "user": "...my_user..."
                      },
                      "redis": {
                        "cluster_max_redirections": 3,
                        "cluster_nodes": [
                          {
                            "ip": "...my_ip...",
                            "port": 9082
                          }
                        ],
                        "connect_timeout": 1305461283,
                        "connection_is_proxied": true,
                        "database": 4,
                        "host": "...my_host...",
                        "keepalive_backlog": 116790188,
                        "keepalive_pool_size": 2067641114,
                        "password": "...my_password...",
                        "port": 53613,
                        "read_timeout": 388988598,
                        "send_timeout": 813587933,
                        "sentinel_master": "...my_sentinel_master...",
                        "sentinel_nodes": [
                          {
                            "host": "...my_host...",
                            "port": 9942
                          }
                        ],
                        "sentinel_password": "...my_sentinel_password...",
                        "sentinel_role": "master",
                        "sentinel_username": "...my_sentinel_username...",
                        "server_name": "...my_server_name...",
                        "ssl": false,
                        "ssl_verify": true,
                        "username": "...my_username..."
                      },
                      "strategy": "redis",
                      "threshold": 3.81
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 5,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_override: (Boolean) If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin.
            api_endpoint: (String) If running Gemini on Vertex, specify the regional API endpoint (hostname only).
            api_version: (String) 'api-version' for Azure OpenAI instances.
            auth: (Attributes) (see below for nested schema)
            aws_access_key_id: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.
            aws_assume_role_arn: (String) If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.
            aws_region: (String) If using AWS providers (Bedrock) you can override the AWS_REGION environment variable by setting this option.
            aws_role_session_name: (String) If using AWS providers (Bedrock), set the identifier of the assumed role session.
            aws_secret_access_key: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.
            aws_sts_endpoint_url: (String) If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.
            azure: (Attributes) Not Null (see below for nested schema)
            azure_client_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.
            azure_client_secret: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.
            azure_tenant_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.
            azure_use_managed_identity: (Boolean) Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models.
            bedrock: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            cache_control: (Boolean) When enabled, respect the Cache-Control behaviors defined in RFC7234.
            cache_ttl: (Number) TTL in seconds of cache entities. Must be a value greater than 0.
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            database: (String) the database of the pgvector database
            deployment_id: (String) Deployment ID for Azure OpenAI instances.
            dimensions: (Number) the desired dimensionality for the vectors
            distance_metric: (String) the distance metric to use for vector searches. must be one of ["cosine", "euclidean"]
            embeddings: (Attributes) (see below for nested schema)
            enabled: (Boolean) Whether the plugin is applied.
            exact_caching: (Boolean) When enabled, a first check for exact query will be done. It will impact DB size
            gcp_service_account_json: (String) Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable GCP_SERVICE_ACCOUNT.
            gcp_use_service_account: (Boolean) Use service account auth for GCP-based providers and models.
            gemini: (Attributes) (see below for nested schema)
            header_name: (String) If AI model requires authentication via Authorization or API key header, specify its name here.
            header_value: (String) Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.
            host: (String) the host of the pgvector database
            huggingface: (Attributes) (see below for nested schema)
            id: (String) The ID of this resource.
            ignore_assistant_prompts: (Boolean) Ignore and discard any assistant prompts when Vectorizing the request
            ignore_system_prompts: (Boolean) Ignore and discard any system prompts when Vectorizing the request
            ignore_tool_prompts: (Boolean) Ignore and discard any tool prompts when Vectorizing the request
            instance: (String) Instance name for Azure OpenAI hosted models.
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            llm_format: (String) LLM input and output format and schema to use. must be one of ["bedrock", "gemini", "openai"]
            location_id: (String) If running Gemini on Vertex, specify the location ID.
            message_countback: (Number) Number of messages in the chat history to Vectorize/Cache
            model: (Attributes) (see below for nested schema)
            name: (String) Model name to execute.
            options: (Attributes) Key/value settings for the model (see below for nested schema)
            ordering: (Attributes) (see below for nested schema)
            param_location: (String) Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of ["body", "query"]
            param_name: (String) If AI model requires authentication via query parameter, specify its name here.
            param_value: (String) Specify the full parameter value for 'param_name'.
            partials: (Attributes List) (see below for nested schema)
            password: (String) the password of the pgvector database
            path: (String)
            pgvector: (Attributes) (see below for nested schema)
            port: (Number) the port of the pgvector database
            project_id: (String) If running Gemini on Vertex, specify the project ID.
            protocols: (List of String) A set of strings representing HTTP protocols.
            provider: (String) AI provider format to use for embeddings API. must be one of ["azure", "bedrock", "gemini", "huggingface", "mistral", "openai"]
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redis: (Attributes) (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) whether to use ssl for the pgvector database
            ssl_cert: (String) the path of ssl cert to use for the pgvector database
            ssl_cert_key: (String) the path of ssl cert key to use for the pgvector database
            ssl_required: (Boolean) whether ssl is required for the pgvector database
            ssl_verify: (Boolean) whether to verify ssl for the pgvector database
            ssl_version: (String) the ssl version to use for the pgvector database. must be one of ["any", "tlsv1_2", "tlsv1_3"]
            stop_on_failure: (Boolean) Halt the LLM request process in case of a caching system failure
            strategy: (String) which vector database driver to use. must be one of ["pgvector", "redis"]
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            threshold: (Number) the default similarity threshold for accepting semantic search results (float)
            timeout: (Number) the timeout of the pgvector database
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_url: (String) upstream url for the embeddings
            use_cache: (Boolean) Use the cache layer on the inference API
            user: (String) the user of the pgvector database
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            vectordb: (Attributes) (see below for nested schema)
            wait_for_model: (Boolean) Wait for the model if it is not ready
        importStatements:
            - terraform import kong-gateway_plugin_ai_semantic_cache.my_kong-gateway_plugin_ai_semantic_cache ""
    kong-gateway_plugin_ai_semantic_prompt_guard:
        subCategory: ""
        description: PluginAiSemanticPromptGuard Resource
        name: kong-gateway_plugin_ai_semantic_prompt_guard
        title: kong-gateway_plugin_ai_semantic_prompt_guard Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginaisemanticpromptguard
              manifest: |-
                {
                  "config": {
                    "embeddings": {
                      "auth": {
                        "allow_override": true,
                        "aws_access_key_id": "...my_aws_access_key_id...",
                        "aws_secret_access_key": "...my_aws_secret_access_key...",
                        "azure_client_id": "...my_azure_client_id...",
                        "azure_client_secret": "...my_azure_client_secret...",
                        "azure_tenant_id": "...my_azure_tenant_id...",
                        "azure_use_managed_identity": true,
                        "gcp_service_account_json": "...my_gcp_service_account_json...",
                        "gcp_use_service_account": true,
                        "header_name": "...my_header_name...",
                        "header_value": "...my_header_value...",
                        "param_location": "body",
                        "param_name": "...my_param_name...",
                        "param_value": "...my_param_value..."
                      },
                      "model": {
                        "name": "...my_name...",
                        "options": {
                          "azure": {
                            "api_version": "...my_api_version...",
                            "deployment_id": "...my_deployment_id...",
                            "instance": "...my_instance..."
                          },
                          "bedrock": {
                            "aws_assume_role_arn": "...my_aws_assume_role_arn...",
                            "aws_region": "...my_aws_region...",
                            "aws_role_session_name": "...my_aws_role_session_name...",
                            "aws_sts_endpoint_url": "...my_aws_sts_endpoint_url..."
                          },
                          "gemini": {
                            "api_endpoint": "...my_api_endpoint...",
                            "location_id": "...my_location_id...",
                            "project_id": "...my_project_id..."
                          },
                          "huggingface": {
                            "use_cache": false,
                            "wait_for_model": false
                          },
                          "upstream_url": "...my_upstream_url..."
                        },
                        "provider": "huggingface"
                      }
                    },
                    "llm_format": "bedrock",
                    "rules": {
                      "allow_prompts": [
                        "..."
                      ],
                      "deny_prompts": [
                        "..."
                      ],
                      "match_all_conversation_history": false,
                      "match_all_roles": true,
                      "max_request_body_size": 3
                    },
                    "search": {
                      "threshold": 9.43
                    },
                    "vectordb": {
                      "dimensions": 6,
                      "distance_metric": "euclidean",
                      "pgvector": {
                        "database": "...my_database...",
                        "host": "...my_host...",
                        "password": "...my_password...",
                        "port": 2,
                        "ssl": false,
                        "ssl_cert": "...my_ssl_cert...",
                        "ssl_cert_key": "...my_ssl_cert_key...",
                        "ssl_required": true,
                        "ssl_verify": false,
                        "ssl_version": "tlsv1_3",
                        "timeout": 9.92,
                        "user": "...my_user..."
                      },
                      "redis": {
                        "cluster_max_redirections": 0,
                        "cluster_nodes": [
                          {
                            "ip": "...my_ip...",
                            "port": 1249
                          }
                        ],
                        "connect_timeout": 1868635585,
                        "connection_is_proxied": false,
                        "database": 3,
                        "host": "...my_host...",
                        "keepalive_backlog": 1913448530,
                        "keepalive_pool_size": 1765871018,
                        "password": "...my_password...",
                        "port": 51739,
                        "read_timeout": 659301580,
                        "send_timeout": 328163308,
                        "sentinel_master": "...my_sentinel_master...",
                        "sentinel_nodes": [
                          {
                            "host": "...my_host...",
                            "port": 46094
                          }
                        ],
                        "sentinel_password": "...my_sentinel_password...",
                        "sentinel_role": "any",
                        "sentinel_username": "...my_sentinel_username...",
                        "server_name": "...my_server_name...",
                        "ssl": true,
                        "ssl_verify": true,
                        "username": "...my_username..."
                      },
                      "strategy": "pgvector",
                      "threshold": 1.07
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 10,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_override: (Boolean) If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin.
            allow_prompts: (List of String) List of prompts to allow.
            api_endpoint: (String) If running Gemini on Vertex, specify the regional API endpoint (hostname only).
            api_version: (String) 'api-version' for Azure OpenAI instances.
            auth: (Attributes) (see below for nested schema)
            aws_access_key_id: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.
            aws_assume_role_arn: (String) If using AWS providers (Bedrock) you can assume a different role after authentication with the current IAM context is successful.
            aws_region: (String) If using AWS providers (Bedrock) you can override the AWS_REGION environment variable by setting this option.
            aws_role_session_name: (String) If using AWS providers (Bedrock), set the identifier of the assumed role session.
            aws_secret_access_key: (String) Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.
            aws_sts_endpoint_url: (String) If using AWS providers (Bedrock), override the STS endpoint URL when assuming a different role.
            azure: (Attributes) Not Null (see below for nested schema)
            azure_client_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.
            azure_client_secret: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.
            azure_tenant_id: (String) If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.
            azure_use_managed_identity: (Boolean) Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models.
            bedrock: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            database: (String) the database of the pgvector database
            deny_prompts: (List of String) List of prompts to deny.
            deployment_id: (String) Deployment ID for Azure OpenAI instances.
            dimensions: (Number) the desired dimensionality for the vectors
            distance_metric: (String) the distance metric to use for vector searches. must be one of ["cosine", "euclidean"]
            embeddings: (Attributes) (see below for nested schema)
            enabled: (Boolean) Whether the plugin is applied.
            gcp_service_account_json: (String) Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable GCP_SERVICE_ACCOUNT.
            gcp_use_service_account: (Boolean) Use service account auth for GCP-based providers and models.
            gemini: (Attributes) (see below for nested schema)
            header_name: (String) If AI model requires authentication via Authorization or API key header, specify its name here.
            header_value: (String) Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.
            host: (String) the host of the pgvector database
            huggingface: (Attributes) (see below for nested schema)
            id: (String) The ID of this resource.
            instance: (String) Instance name for Azure OpenAI hosted models.
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            llm_format: (String) LLM input and output format and schema to use. must be one of ["bedrock", "gemini", "openai"]
            location_id: (String) If running Gemini on Vertex, specify the location ID.
            match_all_conversation_history: (Boolean) If false, will ignore all previous chat prompts from the conversation history.
            match_all_roles: (Boolean) If true, will match all roles in addition to 'user' role in conversation history.
            max_request_body_size: (Number) max allowed body size allowed to be introspected
            model: (Attributes) (see below for nested schema)
            name: (String) Model name to execute.
            options: (Attributes) Key/value settings for the model (see below for nested schema)
            ordering: (Attributes) (see below for nested schema)
            param_location: (String) Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body. must be one of ["body", "query"]
            param_name: (String) If AI model requires authentication via query parameter, specify its name here.
            param_value: (String) Specify the full parameter value for 'param_name'.
            partials: (Attributes List) (see below for nested schema)
            password: (String) the password of the pgvector database
            path: (String)
            pgvector: (Attributes) (see below for nested schema)
            port: (Number) the port of the pgvector database
            project_id: (String) If running Gemini on Vertex, specify the project ID.
            protocols: (List of String) A set of strings representing HTTP protocols.
            provider: (String) AI provider format to use for embeddings API. must be one of ["azure", "bedrock", "gemini", "huggingface", "mistral", "openai"]
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redis: (Attributes) (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            rules: (Attributes) (see below for nested schema)
            search: (Attributes) (see below for nested schema)
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) whether to use ssl for the pgvector database
            ssl_cert: (String) the path of ssl cert to use for the pgvector database
            ssl_cert_key: (String) the path of ssl cert key to use for the pgvector database
            ssl_required: (Boolean) whether ssl is required for the pgvector database
            ssl_verify: (Boolean) whether to verify ssl for the pgvector database
            ssl_version: (String) the ssl version to use for the pgvector database. must be one of ["any", "tlsv1_2", "tlsv1_3"]
            strategy: (String) which vector database driver to use. must be one of ["pgvector", "redis"]
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            threshold: (Number) Threshold for the similarity score to be considered a match.
            timeout: (Number) the timeout of the pgvector database
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_url: (String) upstream url for the embeddings
            use_cache: (Boolean) Use the cache layer on the inference API
            user: (String) the user of the pgvector database
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            vectordb: (Attributes) (see below for nested schema)
            wait_for_model: (Boolean) Wait for the model if it is not ready
        importStatements:
            - terraform import kong-gateway_plugin_ai_semantic_prompt_guard.my_kong-gateway_plugin_ai_semantic_prompt_guard ""
    kong-gateway_plugin_aws_lambda:
        subCategory: ""
        description: PluginAwsLambda Resource
        name: kong-gateway_plugin_aws_lambda
        title: kong-gateway_plugin_aws_lambda Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginawslambda
              manifest: |-
                {
                  "config": {
                    "aws_assume_role_arn": "...my_aws_assume_role_arn...",
                    "aws_imds_protocol_version": "v2",
                    "aws_key": "...my_aws_key...",
                    "aws_region": "...my_aws_region...",
                    "aws_role_session_name": "...my_aws_role_session_name...",
                    "aws_secret": "...my_aws_secret...",
                    "aws_sts_endpoint_url": "...my_aws_sts_endpoint_url...",
                    "awsgateway_compatible": false,
                    "base64_encode_body": true,
                    "disable_https": true,
                    "empty_arrays_mode": "legacy",
                    "forward_request_body": true,
                    "forward_request_headers": false,
                    "forward_request_method": false,
                    "forward_request_uri": true,
                    "function_name": "...my_function_name...",
                    "host": "...my_host...",
                    "invocation_type": "RequestResponse",
                    "is_proxy_integration": true,
                    "keepalive": 5.55,
                    "log_type": "Tail",
                    "port": 36372,
                    "proxy_url": "...my_proxy_url...",
                    "qualifier": "...my_qualifier...",
                    "skip_large_bodies": true,
                    "timeout": 6.58,
                    "unhandled_status": 443
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 3,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 5
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            aws_assume_role_arn: (String) The target AWS IAM role ARN used to invoke the Lambda function.
            aws_imds_protocol_version: '(String) Identifier to select the IMDS protocol version to use: v1 or v2. must be one of ["v1", "v2"]'
            aws_key: (String) The AWS key credential to be used when invoking the function.
            aws_region: (String) A string representing a host name, such as example.com.
            aws_role_session_name: (String) The identifier of the assumed role session.
            aws_secret: (String) The AWS secret credential to be used when invoking the function.
            aws_sts_endpoint_url: (String) A string representing a URL, such as https://example.com/path/to/resource?q=search.
            awsgateway_compatible: (Boolean) An optional value that defines whether the plugin should wrap requests into the Amazon API gateway.
            base64_encode_body: (Boolean) An optional value that Base64-encodes the request body.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            disable_https: (Boolean)
            empty_arrays_mode: (String) An optional value that defines whether Kong should send empty arrays (returned by Lambda function) as [] arrays or {} objects in JSON responses. The value legacy means Kong will send empty arrays as {} objects in response. must be one of ["correct", "legacy"]
            enabled: (Boolean) Whether the plugin is applied.
            forward_request_body: (Boolean) An optional value that defines whether the request body is sent in the request_body field of the JSON-encoded request. If the body arguments can be parsed, they are sent in the separate request_body_args field of the request.
            forward_request_headers: (Boolean) An optional value that defines whether the original HTTP request headers are sent as a map in the request_headers field of the JSON-encoded request.
            forward_request_method: (Boolean) An optional value that defines whether the original HTTP request method verb is sent in the request_method field of the JSON-encoded request.
            forward_request_uri: (Boolean) An optional value that defines whether the original HTTP request URI is sent in the request_uri field of the JSON-encoded request.
            function_name: (String) The AWS Lambda function to invoke. Both function name and function ARN (including partial) are supported.
            host: (String) A string representing a host name, such as example.com.
            id: (String) The ID of this resource.
            instance_name: (String)
            invocation_type: (String) The InvocationType to use when invoking the function. Available types are RequestResponse, Event, DryRun. must be one of ["DryRun", "Event", "RequestResponse"]
            is_proxy_integration: (Boolean) An optional value that defines whether the response format to receive from the Lambda to this format.
            keepalive: (Number) An optional value in milliseconds that defines how long an idle connection lives before being closed.
            log_type: (String) The LogType to use when invoking the function. By default, None and Tail are supported. must be one of ["None", "Tail"]
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing HTTP protocols.
            proxy_url: (String) A string representing a URL, such as https://example.com/path/to/resource?q=search.
            qualifier: (String) The qualifier to use when invoking the function.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            skip_large_bodies: (Boolean) An optional value that defines whether Kong should send large bodies that are buffered to disk
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) An optional timeout in milliseconds when invoking the function.
            unhandled_status: (Number) The response status code to use (instead of the default 200, 202, or 204) in the case of an Unhandled Function Error.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_aws_lambda.my_kong-gateway_plugin_aws_lambda ""
    kong-gateway_plugin_azure_functions:
        subCategory: ""
        description: PluginAzureFunctions Resource
        name: kong-gateway_plugin_azure_functions
        title: kong-gateway_plugin_azure_functions Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginazurefunctions
              manifest: |-
                {
                  "config": {
                    "apikey": "...my_apikey...",
                    "appname": "...my_appname...",
                    "clientid": "...my_clientid...",
                    "functionname": "...my_functionname...",
                    "hostdomain": "...my_hostdomain...",
                    "https": true,
                    "https_verify": true,
                    "keepalive": 9.43,
                    "routeprefix": "...my_routeprefix...",
                    "timeout": 4.56
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 9,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "tls"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 2
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            apikey: (String) The apikey to access the Azure resources. If provided, it is injected as the x-functions-key header.
            appname: (String) The Azure app name.
            before: (Attributes) (see below for nested schema)
            clientid: (String) The clientid to access the Azure resources. If provided, it is injected as the x-functions-clientid header.
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            functionname: (String) Name of the Azure function to invoke.
            hostdomain: (String) The domain where the function resides.
            https: (Boolean) Use of HTTPS to connect with the Azure Functions server.
            https_verify: (Boolean) Set to true to authenticate the Azure Functions server.
            id: (String) The ID of this resource.
            instance_name: (String)
            keepalive: (Number) Time in milliseconds during which an idle connection to the Azure Functions server lives before being closed.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            routeprefix: (String) Route prefix to use.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) Timeout in milliseconds before closing a connection to the Azure Functions server.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_azure_functions.my_kong-gateway_plugin_azure_functions ""
    kong-gateway_plugin_basic_auth:
        subCategory: ""
        description: PluginBasicAuth Resource
        name: kong-gateway_plugin_basic_auth
        title: kong-gateway_plugin_basic_auth Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginbasicauth
              manifest: |-
                {
                  "config": {
                    "anonymous": "...my_anonymous...",
                    "hide_credentials": true,
                    "realm": "...my_realm..."
                  },
                  "created_at": 10,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "wss"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 2
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            anonymous: (String) An optional string (Consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request will fail with an authentication failure 4xx. Please note that this value must refer to the Consumer id or username attribute, and not its custom_id.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            hide_credentials: (Boolean) An optional boolean value telling the plugin to show or hide the credential from the upstream service. If true, the plugin will strip the credential from the request (i.e. the Authorization header) before proxying it.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            realm: (String) When authentication fails the plugin sends WWW-Authenticate header with realm attribute value.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_basic_auth.my_kong-gateway_plugin_basic_auth ""
    kong-gateway_plugin_bot_detection:
        subCategory: ""
        description: PluginBotDetection Resource
        name: kong-gateway_plugin_bot_detection
        title: kong-gateway_plugin_bot_detection Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginbotdetection
              manifest: |-
                {
                  "config": {
                    "allow": [
                      "..."
                    ],
                    "deny": [
                      "..."
                    ]
                  },
                  "created_at": 1,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 2
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow: (List of String) An array of regular expressions that should be allowed. The regular expressions will be checked against the User-Agent header.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            deny: (List of String) An array of regular expressions that should be denied. The regular expressions will be checked against the User-Agent header.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_bot_detection.my_kong-gateway_plugin_bot_detection ""
    kong-gateway_plugin_canary:
        subCategory: ""
        description: PluginCanary Resource
        name: kong-gateway_plugin_canary
        title: kong-gateway_plugin_canary Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugincanary
              manifest: |-
                {
                  "config": {
                    "canary_by_header_name": "...my_canary_by_header_name...",
                    "duration": 8.21,
                    "groups": [
                      "..."
                    ],
                    "hash": "header",
                    "hash_header": "...my_hash_header...",
                    "percentage": 98.24,
                    "start": 2.01,
                    "steps": 6.39,
                    "upstream_fallback": true,
                    "upstream_host": "...my_upstream_host...",
                    "upstream_port": 26191,
                    "upstream_uri": "...my_upstream_uri..."
                  },
                  "created_at": 7,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow: ': Allows the specified groups to access the canary release.'
            before: (Attributes) (see below for nested schema)
            canary_by_header_name: (String) A string representing an HTTP header name.
            config: (Attributes) (see below for nested schema)
            consumer: ': The hash will be based on the consumer.'
            created_at: (Number) Unix epoch when the resource was created.
            deny: ': Denies the specified groups from accessing the canary release.'
            duration: (Number) The duration of the canary release in seconds.
            enabled: (Boolean) Whether the plugin is applied.
            groups: (List of String) The groups allowed to access the canary release.
            hash: (String) Hash algorithm to be used for canary release.
            hash_header: (String) A string representing an HTTP header name.
            header: |-
                : The hash will be based on the specified header value.
                must be one of ["allow", "consumer", "deny", "header", "ip", "none"]
            id: (String) The ID of this resource.
            instance_name: (String)
            ip: ': The hash will be based on the client IP address.'
            name: (String)
            none: ': No hash will be applied.'
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            percentage: (Number) The percentage of traffic to be routed to the canary release.
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            start: (Number) Future time in seconds since epoch, when the canary release will start. Ignored when percentage is set, or when using allow or deny in hash.
            steps: (Number) The number of steps for the canary release.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_fallback: (Boolean) Specifies whether to fallback to the upstream server if the canary release fails.
            upstream_host: (String) A string representing a host name, such as example.com.
            upstream_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            upstream_uri: (String) The URI of the upstream server to be used for the canary release.
        importStatements:
            - terraform import kong-gateway_plugin_canary.my_kong-gateway_plugin_canary ""
    kong-gateway_plugin_confluent:
        subCategory: ""
        description: PluginConfluent Resource
        name: kong-gateway_plugin_confluent
        title: kong-gateway_plugin_confluent Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginconfluent
              manifest: |-
                {
                  "config": {
                    "allowed_topics": [
                      "..."
                    ],
                    "bootstrap_servers": [
                      {
                        "host": "...my_host...",
                        "port": 31248
                      }
                    ],
                    "cluster_api_key": "...my_cluster_api_key...",
                    "cluster_api_secret": "...my_cluster_api_secret...",
                    "cluster_name": "...my_cluster_name...",
                    "confluent_cloud_api_key": "...my_confluent_cloud_api_key...",
                    "confluent_cloud_api_secret": "...my_confluent_cloud_api_secret...",
                    "forward_body": true,
                    "forward_headers": true,
                    "forward_method": true,
                    "forward_uri": true,
                    "keepalive": 8,
                    "keepalive_enabled": false,
                    "message_by_lua_functions": [
                      "..."
                    ],
                    "producer_async": false,
                    "producer_async_buffering_limits_messages_in_memory": 6,
                    "producer_async_flush_timeout": 3,
                    "producer_request_acks": 0,
                    "producer_request_limits_bytes_per_request": 3,
                    "producer_request_limits_messages_per_request": 9,
                    "producer_request_retries_backoff_timeout": 7,
                    "producer_request_retries_max_attempts": 10,
                    "producer_request_timeout": 4,
                    "timeout": 6,
                    "topic": "...my_topic...",
                    "topics_query_arg": "...my_topics_query_arg..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 0,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 6
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allowed_topics: (List of String) The list of allowed topic names to which messages can be sent. The default topic configured in the topic field is always allowed, regardless of its inclusion in allowed_topics.
            before: (Attributes) (see below for nested schema)
            bootstrap_servers: '(Attributes List) Set of bootstrap brokers in a {host: host, port: port} list format. (see below for nested schema)'
            cluster_api_key: (String) Username/Apikey for SASL authentication.
            cluster_api_secret: (String) Password/ApiSecret for SASL authentication.
            cluster_name: (String) An identifier for the Kafka cluster. By default, this field generates a random string. You can also set your own custom cluster identifier.  If more than one Kafka plugin is configured without a cluster_name (that is, if the default autogenerated value is removed), these plugins will use the same producer, and by extension, the same cluster. Logs will be sent to the leader of the cluster.
            config: (Attributes) (see below for nested schema)
            confluent_cloud_api_key: (String) Apikey for authentication with Confluent Cloud. This allows for management tasks such as creating topics, ACLs, etc.
            confluent_cloud_api_secret: (String) The corresponding secret for the Confluent Cloud API key.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            forward_body: '(Boolean) Include the request body in the message. At least one of these must be true: forward_method, forward_uri, forward_headers, forward_body.'
            forward_headers: '(Boolean) Include the request headers in the message. At least one of these must be true: forward_method, forward_uri, forward_headers, forward_body.'
            forward_method: '(Boolean) Include the request method in the message. At least one of these must be true: forward_method, forward_uri, forward_headers, forward_body.'
            forward_uri: '(Boolean) Include the request URI and URI arguments (as in, query arguments) in the message. At least one of these must be true: forward_method, forward_uri, forward_headers, forward_body.'
            host: (String) A string representing a host name, such as example.com. Not Null
            id: (String) The ID of this resource.
            instance_name: (String)
            keepalive: (Number) Keepalive timeout in milliseconds.
            keepalive_enabled: (Boolean)
            message_by_lua_functions: (List of String) The Lua functions that manipulates the message being sent to the Kafka topic.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive. Not Null
            producer_async: (Boolean) Flag to enable asynchronous mode.
            producer_async_buffering_limits_messages_in_memory: (Number) Maximum number of messages that can be buffered in memory in asynchronous mode.
            producer_async_flush_timeout: (Number) Maximum time interval in milliseconds between buffer flushes in asynchronous mode.
            producer_request_acks: '(Number) The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments; 1 for only the leader; and -1 for the full ISR (In-Sync Replica set). must be one of ["-1", "0", "1"]'
            producer_request_limits_bytes_per_request: (Number) Maximum size of a Produce request in bytes.
            producer_request_limits_messages_per_request: (Number) Maximum number of messages to include into a single producer request.
            producer_request_retries_backoff_timeout: (Number) Backoff interval between retry attempts in milliseconds.
            producer_request_retries_max_attempts: (Number) Maximum number of retry attempts per single Produce request.
            producer_request_timeout: (Number) Time to wait for a Produce response in milliseconds.
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) Socket timeout in milliseconds.
            topic: (String) The default Kafka topic to publish to if the query parameter defined in the topics_query_arg does not exist in the request
            topics_query_arg: (String) The request query parameter name that contains the topics to publish to
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_confluent.my_kong-gateway_plugin_confluent ""
    kong-gateway_plugin_confluent_consume:
        subCategory: ""
        description: PluginConfluentConsume Resource
        name: kong-gateway_plugin_confluent_consume
        title: kong-gateway_plugin_confluent_consume Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginconfluentconsume
              manifest: |-
                {
                  "config": {
                    "auto_offset_reset": "latest",
                    "bootstrap_servers": [
                      {
                        "host": "...my_host...",
                        "port": 6067
                      }
                    ],
                    "cluster_api_key": "...my_cluster_api_key...",
                    "cluster_api_secret": "...my_cluster_api_secret...",
                    "cluster_name": "...my_cluster_name...",
                    "commit_strategy": "auto",
                    "confluent_cloud_api_key": "...my_confluent_cloud_api_key...",
                    "confluent_cloud_api_secret": "...my_confluent_cloud_api_secret...",
                    "keepalive": 6,
                    "keepalive_enabled": true,
                    "message_deserializer": "noop",
                    "mode": "http-get",
                    "timeout": 9,
                    "topics": [
                      {
                        "name": "...my_name..."
                      }
                    ]
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 5
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            auto_offset_reset: (String) The offset to start from when there is no initial offset in the consumer group. must be one of ["earliest", "latest"]
            before: (Attributes) (see below for nested schema)
            bootstrap_servers: '(Attributes List) Set of bootstrap brokers in a {host: host, port: port} list format. (see below for nested schema)'
            cluster_api_key: (String) Username/Apikey for SASL authentication.
            cluster_api_secret: (String) Password/ApiSecret for SASL authentication.
            cluster_name: (String) An identifier for the Kafka cluster. By default, this field generates a random string. You can also set your own custom cluster identifier.  If more than one Kafka plugin is configured without a cluster_name (that is, if the default autogenerated value is removed), these plugins will use the same producer, and by extension, the same cluster. Logs will be sent to the leader of the cluster.
            commit_strategy: (String) The strategy to use for committing offsets. must be one of ["auto", "off"]
            config: (Attributes) (see below for nested schema)
            confluent_cloud_api_key: (String) Apikey for authentication with Confluent Cloud. This allows for management tasks such as creating topics, ACLs, etc.
            confluent_cloud_api_secret: (String) The corresponding secret for the Confluent Cloud API key.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            host: (String) A string representing a host name, such as example.com. Not Null
            id: (String) The ID of this resource.
            instance_name: (String)
            keepalive: (Number) Keepalive timeout in milliseconds.
            keepalive_enabled: (Boolean)
            message_deserializer: (String) The deserializer to use for the consumed messages. must be one of ["json", "noop"]
            mode: (String) The mode of operation for the plugin. must be one of ["http-get", "server-sent-events"]
            name: (String) Not Null
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive. Not Null
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) Socket timeout in milliseconds.
            topics: (Attributes List) The Kafka topics and their configuration you want to consume from. (see below for nested schema)
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_confluent_consume.my_kong-gateway_plugin_confluent_consume ""
    kong-gateway_plugin_correlation_id:
        subCategory: ""
        description: PluginCorrelationID Resource
        name: kong-gateway_plugin_correlation_id
        title: kong-gateway_plugin_correlation_id Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugincorrelationid
              manifest: |-
                {
                  "config": {
                    "echo_downstream": true,
                    "generator": "tracker",
                    "header_name": "...my_header_name..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 6
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            echo_downstream: (Boolean) Whether to echo the header back to downstream (the client).
            enabled: (Boolean) Whether the plugin is applied.
            generator: (String) The generator to use for the correlation ID. Accepted values are uuid, uuid#counter, and tracker. See Generators. must be one of ["tracker", "uuid", "uuid#counter"]
            header_name: (String) The HTTP header name to use for the correlation ID.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_correlation_id.my_kong-gateway_plugin_correlation_id ""
    kong-gateway_plugin_cors:
        subCategory: ""
        description: PluginCors Resource
        name: kong-gateway_plugin_cors
        title: kong-gateway_plugin_cors Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugincors
              manifest: |-
                {
                  "config": {
                    "allow_origin_absent": true,
                    "credentials": false,
                    "exposed_headers": [
                      "..."
                    ],
                    "headers": [
                      "..."
                    ],
                    "max_age": 8.09,
                    "methods": [
                      "DELETE"
                    ],
                    "origins": [
                      "..."
                    ],
                    "preflight_continue": false,
                    "private_network": true
                  },
                  "created_at": 7,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 6
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_origin_absent: (Boolean) A boolean value that skip cors response headers when origin header of request is empty
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            credentials: (Boolean) Flag to determine whether the Access-Control-Allow-Credentials header should be sent with true as the value.
            enabled: (Boolean) Whether the plugin is applied.
            exposed_headers: (List of String) Value for the Access-Control-Expose-Headers header. If not specified, no custom headers are exposed.
            headers: (List of String) Value for the Access-Control-Allow-Headers header.
            id: (String) The ID of this resource.
            instance_name: (String)
            max_age: (Number) Indicates how long the results of the preflight request can be cached, in seconds.
            methods: (List of String) 'Value for the Access-Control-Allow-Methods header. Available options include GET, HEAD, PUT, PATCH, POST, DELETE, OPTIONS, TRACE, CONNECT. By default, all options are allowed.'
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            origins: (List of String) List of allowed domains for the Access-Control-Allow-Origin header. If you want to allow all origins, add * as a single value to this configuration field. The accepted values can either be flat strings or PCRE regexes.
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            preflight_continue: (Boolean) A boolean value that instructs the plugin to proxy the OPTIONS preflight request to the Upstream service.
            private_network: (Boolean) Flag to determine whether the Access-Control-Allow-Private-Network header should be sent with true as the value.
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_cors.my_kong-gateway_plugin_cors ""
    kong-gateway_plugin_datadog:
        subCategory: ""
        description: PluginDatadog Resource
        name: kong-gateway_plugin_datadog
        title: kong-gateway_plugin_datadog Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugindatadog
              manifest: |-
                {
                  "config": {
                    "consumer_tag": "...my_consumer_tag...",
                    "flush_timeout": 1.47,
                    "host": "...my_host...",
                    "metrics": [
                      {
                        "consumer_identifier": "username",
                        "name": "request_size",
                        "sample_rate": 0.44,
                        "stat_type": "counter",
                        "tags": [
                          "..."
                        ]
                      }
                    ],
                    "port": 35125,
                    "prefix": "...my_prefix...",
                    "queue": {
                      "concurrency_limit": 4,
                      "initial_retry_delay": 921892.74,
                      "max_batch_size": 610088,
                      "max_bytes": 5,
                      "max_coalescing_delay": 2243.83,
                      "max_entries": 308545,
                      "max_retry_delay": 245761.91,
                      "max_retry_time": 0.14
                    },
                    "queue_size": 9,
                    "retry_count": 2,
                    "service_name_tag": "...my_service_name_tag...",
                    "status_tag": "...my_status_tag..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 4,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 6
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            concurrency_limit: (Number) The number of of queue delivery timers. -1 indicates unlimited. must be one of ["-1", "1"]
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_identifier: (String) Authenticated user detail. must be one of ["consumer_id", "custom_id", "username"]
            consumer_tag: (String) String to be attached as tag of the consumer.
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            flush_timeout: (Number) Optional time in seconds. If queue_size > 1, this is the max idle time before sending a log with less than queue_size records.
            host: (String) A string representing a host name, such as example.com.
            id: (String) The ID of this resource.
            initial_retry_delay: (Number) Time in seconds before the initial retry is made for a failing batch.
            instance_name: (String)
            max_batch_size: (Number) Maximum number of entries that can be processed at a time.
            max_bytes: (Number) Maximum number of bytes that can be waiting on a queue, requires string content.
            max_coalescing_delay: (Number) Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler.
            max_entries: (Number) Maximum number of entries that can be waiting on the queue.
            max_retry_delay: (Number) Maximum time in seconds between retries, caps exponential backoff.
            max_retry_time: (Number) Time in seconds before the queue gives up calling a failed handler for a batch.
            metrics: (Attributes List) List of metrics to be logged. (see below for nested schema)
            name: (String) Datadog metric’s name. Not Null; must be one of ["kong_latency", "latency", "request_count", "request_size", "response_size", "upstream_latency"]
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            prefix: (String) String to be attached as a prefix to a metric's name.
            protocols: (List of String) A set of strings representing protocols.
            queue: (Attributes) (see below for nested schema)
            queue_size: (Number) Maximum number of log entries to be sent on each message to the upstream server.
            retry_count: (Number) Number of times to retry when sending data to the upstream server.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            sample_rate: (Number) Sampling rate
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            service_name_tag: (String) String to be attached as the name of the service.
            stat_type: (String) Determines what sort of event the metric represents. Not Null; must be one of ["counter", "distribution", "gauge", "histogram", "meter", "set", "timer"]
            status_tag: (String) String to be attached as the tag of the HTTP status.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_datadog.my_kong-gateway_plugin_datadog ""
    kong-gateway_plugin_datadog_tracing:
        subCategory: ""
        description: PluginDatadogTracing Resource
        name: kong-gateway_plugin_datadog_tracing
        title: kong-gateway_plugin_datadog_tracing Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugindatadogtracing
              manifest: |-
                {
                  "config": {
                    "batch_flush_delay": 1,
                    "batch_span_count": 6,
                    "connect_timeout": 143802280,
                    "endpoint": "...my_endpoint...",
                    "environment": "...my_environment...",
                    "read_timeout": 1332038894,
                    "send_timeout": 431769636,
                    "service_name": "...my_service_name..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 9,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            batch_flush_delay: (Number)
            batch_span_count: (Number)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            endpoint: (String)
            environment: (String)
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            read_timeout: (Number)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            send_timeout: (Number)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            service_name: (String)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_datadog_tracing.my_kong-gateway_plugin_datadog_tracing ""
    kong-gateway_plugin_degraphql:
        subCategory: ""
        description: PluginDegraphql Resource
        name: kong-gateway_plugin_degraphql
        title: kong-gateway_plugin_degraphql Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugindegraphql
              manifest: |-
                {
                  "config": {
                    "graphql_server_path": "...my_graphql_server_path..."
                  },
                  "created_at": 2,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 8
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            graphql_server_path: (String) A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_degraphql.my_kong-gateway_plugin_degraphql ""
    kong-gateway_plugin_exit_transformer:
        subCategory: ""
        description: PluginExitTransformer Resource
        name: kong-gateway_plugin_exit_transformer
        title: kong-gateway_plugin_exit_transformer Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginexittransformer
              manifest: |-
                {
                  "config": {
                    "functions": [
                      "..."
                    ],
                    "handle_unexpected": true,
                    "handle_unknown": true
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 9,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 5
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            functions: (List of String)
            handle_unexpected: (Boolean) Determines whether to handle unexpected errors by transforming their responses.
            handle_unknown: (Boolean) Determines whether to handle unknown status codes by transforming their responses.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_exit_transformer.my_kong-gateway_plugin_exit_transformer ""
    kong-gateway_plugin_file_log:
        subCategory: ""
        description: PluginFileLog Resource
        name: kong-gateway_plugin_file_log
        title: kong-gateway_plugin_file_log Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginfilelog
              manifest: |-
                {
                  "config": {
                    "custom_fields_by_lua": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "path": "...my_path...",
                    "reopen": true
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 4,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "udp"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 10
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            custom_fields_by_lua: (Map of String) Lua code as a key-value map
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String) The file path of the output log file. The plugin creates the log file if it doesn't exist yet.
            protocols: (List of String) A set of strings representing protocols.
            reopen: (Boolean) Determines whether the log file is closed and reopened on every request.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_file_log.my_kong-gateway_plugin_file_log ""
    kong-gateway_plugin_forward_proxy:
        subCategory: ""
        description: PluginForwardProxy Resource
        name: kong-gateway_plugin_forward_proxy
        title: kong-gateway_plugin_forward_proxy Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginforwardproxy
              manifest: |-
                {
                  "config": {
                    "auth_password": "...my_auth_password...",
                    "auth_username": "...my_auth_username...",
                    "http_proxy_host": "...my_http_proxy_host...",
                    "http_proxy_port": 59229,
                    "https_proxy_host": "...my_https_proxy_host...",
                    "https_proxy_port": 32773,
                    "https_verify": false,
                    "proxy_scheme": "http",
                    "x_headers": "delete"
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 8,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 6
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            auth_password: |-
                (String) The password to authenticate with, if the forward proxy is protected
                by basic authentication.
            auth_username: |-
                (String) The username to authenticate with, if the forward proxy is protected
                by basic authentication.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            http_proxy_host: (String) A string representing a host name, such as example.com.
            http_proxy_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            https_proxy_host: (String) A string representing a host name, such as example.com.
            https_proxy_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            https_verify: (Boolean) Whether the server certificate will be verified according to the CA certificates specified in lua_ssl_trusted_certificate.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            proxy_scheme: (String) The proxy scheme to use when connecting. Only http is supported. must be "http"
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            x_headers: (String) Determines how to handle headers when forwarding the request. must be one of ["append", "delete", "transparent"]
        importStatements:
            - terraform import kong-gateway_plugin_forward_proxy.my_kong-gateway_plugin_forward_proxy ""
    kong-gateway_plugin_graphql_proxy_cache_advanced:
        subCategory: ""
        description: PluginGraphqlProxyCacheAdvanced Resource
        name: kong-gateway_plugin_graphql_proxy_cache_advanced
        title: kong-gateway_plugin_graphql_proxy_cache_advanced Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugingraphqlproxycacheadvanced
              manifest: |-
                {
                  "config": {
                    "bypass_on_err": false,
                    "cache_ttl": 9,
                    "memory": {
                      "dictionary_name": "...my_dictionary_name..."
                    },
                    "redis": {
                      "cluster_max_redirections": 4,
                      "cluster_nodes": [
                        {
                          "ip": "...my_ip...",
                          "port": 32412
                        }
                      ],
                      "connect_timeout": 2012534229,
                      "connection_is_proxied": true,
                      "database": 10,
                      "host": "...my_host...",
                      "keepalive_backlog": 1623005263,
                      "keepalive_pool_size": 80538716,
                      "password": "...my_password...",
                      "port": 5869,
                      "read_timeout": 413317165,
                      "send_timeout": 706362539,
                      "sentinel_master": "...my_sentinel_master...",
                      "sentinel_nodes": [
                        {
                          "host": "...my_host...",
                          "port": 16105
                        }
                      ],
                      "sentinel_password": "...my_sentinel_password...",
                      "sentinel_role": "master",
                      "sentinel_username": "...my_sentinel_username...",
                      "server_name": "...my_server_name...",
                      "ssl": false,
                      "ssl_verify": false,
                      "username": "...my_username..."
                    },
                    "strategy": "memory",
                    "vary_headers": [
                      "..."
                    ]
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 2,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            bypass_on_err: (Boolean) Unhandled errors while trying to retrieve a cache entry (such as redis down) are resolved with Bypass, with the request going upstream.
            cache_ttl: (Number) TTL in seconds of cache entities. Must be a value greater than 0.
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            database: (Number) Database to use for the Redis connection when using the redis strategy
            dictionary_name: (String) The name of the shared dictionary in which to hold cache entities when the memory strategy is selected. This dictionary currently must be defined manually in the Kong Nginx template.
            enabled: (Boolean) Whether the plugin is applied.
            host: (String) A string representing a host name, such as example.com.
            id: (String) The ID of this resource.
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            memory: (Attributes) (see below for nested schema)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing HTTP protocols.
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redis: (Attributes) (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_verify: (Boolean) If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure lua_ssl_trusted_certificate in kong.conf to specify the CA (or server) certificate used by your Redis server. You may also need to configure lua_ssl_verify_depth accordingly.
            strategy: (String) The backing data store in which to hold cached entities. Accepted value is memory. must be one of ["memory", "redis"]
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            vary_headers: (List of String) Relevant headers considered for the cache key. If undefined, none of the headers are taken into consideration.
        importStatements:
            - terraform import kong-gateway_plugin_graphql_proxy_cache_advanced.my_kong-gateway_plugin_graphql_proxy_cache_advanced ""
    kong-gateway_plugin_graphql_rate_limiting_advanced:
        subCategory: ""
        description: PluginGraphqlRateLimitingAdvanced Resource
        name: kong-gateway_plugin_graphql_rate_limiting_advanced
        title: kong-gateway_plugin_graphql_rate_limiting_advanced Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugingraphqlratelimitingadvanced
              manifest: |-
                {
                  "config": {
                    "cost_strategy": "node_quantifier",
                    "dictionary_name": "...my_dictionary_name...",
                    "hide_client_headers": true,
                    "identifier": "credential",
                    "limit": [
                      2.08
                    ],
                    "max_cost": 7.14,
                    "namespace": "...my_namespace...",
                    "redis": {
                      "cluster_max_redirections": 6,
                      "cluster_nodes": [
                        {
                          "ip": "...my_ip...",
                          "port": 5240
                        }
                      ],
                      "connect_timeout": 1623577037,
                      "connection_is_proxied": false,
                      "database": 0,
                      "host": "...my_host...",
                      "keepalive_backlog": 320511937,
                      "keepalive_pool_size": 411631542,
                      "password": "...my_password...",
                      "port": 42064,
                      "read_timeout": 179232803,
                      "send_timeout": 1620823428,
                      "sentinel_master": "...my_sentinel_master...",
                      "sentinel_nodes": [
                        {
                          "host": "...my_host...",
                          "port": 37666
                        }
                      ],
                      "sentinel_password": "...my_sentinel_password...",
                      "sentinel_role": "slave",
                      "sentinel_username": "...my_sentinel_username...",
                      "server_name": "...my_server_name...",
                      "ssl": true,
                      "ssl_verify": false,
                      "username": "...my_username..."
                    },
                    "score_factor": 3.93,
                    "strategy": "cluster",
                    "sync_rate": 3.35,
                    "window_size": [
                      1.72
                    ],
                    "window_type": "fixed"
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 0,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 6
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            cost_strategy: (String) Strategy to use to evaluate query costs. Either default or node_quantifier. must be one of ["default", "node_quantifier"]
            created_at: (Number) Unix epoch when the resource was created.
            database: (Number) Database to use for the Redis connection when using the redis strategy
            dictionary_name: (String) The shared dictionary where counters will be stored until the next sync cycle.
            enabled: (Boolean) Whether the plugin is applied.
            hide_client_headers: '(Boolean) Optionally hide informative response headers. Available options: true or false.'
            host: (String) A string representing a host name, such as example.com.
            id: (String) The ID of this resource.
            identifier: (String) How to define the rate limit key. Can be ip, credential, consumer. must be one of ["consumer", "credential", "ip"]
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            limit: (List of Number) One or more requests-per-window limits to apply.
            max_cost: (Number) A defined maximum cost per query. 0 means unlimited.
            name: (String)
            namespace: '(String) The rate limiting namespace to use for this plugin instance. This namespace is used to share rate limiting counters across different instances. If it is not provided, a random UUID is generated. NOTE: For the plugin instances sharing the same namespace, all the configurations that are required for synchronizing counters, e.g. strategy, redis, sync_rate, window_size, dictionary_name, need to be the same.'
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing HTTP protocols.
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redis: (Attributes) (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            score_factor: (Number) A scoring factor to multiply (or divide) the cost. The score_factor must always be greater than 0.
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_verify: (Boolean) If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure lua_ssl_trusted_certificate in kong.conf to specify the CA (or server) certificate used by your Redis server. You may also need to configure lua_ssl_verify_depth accordingly.
            strategy: (String) The rate-limiting strategy to use for retrieving and incrementing the limits. must be one of ["cluster", "redis"]
            sync_rate: (Number) How often to sync counter data to the central data store. A value of 0 results in synchronous behavior; a value of -1 ignores sync behavior entirely and only stores counters in node memory. A value greater than 0 syncs the counters in that many number of seconds.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            window_size: (List of Number) One or more window sizes to apply a limit to (defined in seconds).
            window_type: (String) Sets the time window to either sliding or fixed. must be one of ["fixed", "sliding"]
        importStatements:
            - terraform import kong-gateway_plugin_graphql_rate_limiting_advanced.my_kong-gateway_plugin_graphql_rate_limiting_advanced ""
    kong-gateway_plugin_grpc_gateway:
        subCategory: ""
        description: PluginGrpcGateway Resource
        name: kong-gateway_plugin_grpc_gateway
        title: kong-gateway_plugin_grpc_gateway Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugingrpcgateway
              manifest: |-
                {
                  "config": {
                    "proto": "...my_proto..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 4,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "ws"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 3
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            proto: (String) Describes the gRPC types and methods.
            protocols: (List of String) A set of strings representing protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_grpc_gateway.my_kong-gateway_plugin_grpc_gateway ""
    kong-gateway_plugin_grpc_web:
        subCategory: ""
        description: PluginGrpcWeb Resource
        name: kong-gateway_plugin_grpc_web
        title: kong-gateway_plugin_grpc_web Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugingrpcweb
              manifest: |-
                {
                  "config": {
                    "allow_origin_header": "...my_allow_origin_header...",
                    "pass_stripped_path": false,
                    "proto": "...my_proto..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 7,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 6
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_origin_header: (String) The value of the Access-Control-Allow-Origin header in the response to the gRPC-Web client.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            pass_stripped_path: (Boolean) If set to true causes the plugin to pass the stripped request path to the upstream gRPC service.
            path: (String)
            proto: (String) If present, describes the gRPC types and methods. Required to support payload transcoding. When absent, the web client must use application/grpw-web+proto content.
            protocols: (List of String) A set of strings representing protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_grpc_web.my_kong-gateway_plugin_grpc_web ""
    kong-gateway_plugin_header_cert_auth:
        subCategory: ""
        description: PluginHeaderCertAuth Resource
        name: kong-gateway_plugin_header_cert_auth
        title: kong-gateway_plugin_header_cert_auth Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginheadercertauth
              manifest: |-
                {
                  "config": {
                    "allow_partial_chain": false,
                    "anonymous": "...my_anonymous...",
                    "authenticated_group_by": "DN",
                    "ca_certificates": [
                      "..."
                    ],
                    "cache_ttl": 8.61,
                    "cert_cache_ttl": 0.53,
                    "certificate_header_format": "url_encoded",
                    "certificate_header_name": "...my_certificate_header_name...",
                    "consumer_by": [
                      "username"
                    ],
                    "default_consumer": "...my_default_consumer...",
                    "http_proxy_host": "...my_http_proxy_host...",
                    "http_proxy_port": 7500,
                    "http_timeout": 4.51,
                    "https_proxy_host": "...my_https_proxy_host...",
                    "https_proxy_port": 44239,
                    "revocation_check_mode": "IGNORE_CA_ERROR",
                    "secure_source": true,
                    "skip_consumer_lookup": false
                  },
                  "created_at": 2,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 7
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_partial_chain: (Boolean) Allow certificate verification with only an intermediate certificate. When this is enabled, you don't need to upload the full chain to Kong Certificates.
            anonymous: (String) An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request fails with an authentication failure 4xx. Note that this value must refer to the consumer id or username attribute, and not its custom_id.
            authenticated_group_by: (String) Certificate property to use as the authenticated group. Valid values are CN (Common Name) or DN (Distinguished Name). Once skip_consumer_lookup is applied, any client with a valid certificate can access the Service/API. To restrict usage to only some of the authenticated users, also add the ACL plugin (not covered here) and create allowed or denied groups of users. must be one of ["CN", "DN"]
            before: (Attributes) (see below for nested schema)
            ca_certificates: (List of String) List of CA Certificates strings to use as Certificate Authorities (CA) when validating a client certificate. At least one is required but you can specify as many as needed. The value of this array is comprised of primary keys (id).
            cache_ttl: (Number) Cache expiry time in seconds.
            cert_cache_ttl: (Number) The length of time in milliseconds between refreshes of the revocation check status cache.
            certificate_header_format: '(String) Format of the certificate header. Supported formats: base64_encoded, url_encoded. must be one of ["base64_encoded", "url_encoded"]'
            certificate_header_name: (String) Name of the header that contains the certificate, received from the WAF or other L7 downstream proxy.
            config: (Attributes) (see below for nested schema)
            consumer_by: (List of String) Whether to match the subject name of the client-supplied certificate against consumer's username and/or custom_id attribute. If set to [] (the empty array), then auto-matching is disabled.
            created_at: (Number) Unix epoch when the resource was created.
            default_consumer: (String) The UUID or username of the consumer to use when a trusted client certificate is presented but no consumer matches. Note that this value must refer to the consumer id or username attribute, and not its custom_id.
            enabled: (Boolean) Whether the plugin is applied.
            http_proxy_host: (String) A string representing a host name, such as example.com.
            http_proxy_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            http_timeout: (Number) HTTP timeout threshold in milliseconds when communicating with the OCSP server or downloading CRL.
            https_proxy_host: (String) A string representing a host name, such as example.com.
            https_proxy_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            revocation_check_mode: (String) Controls client certificate revocation check behavior. If set to SKIP, no revocation check is performed. If set to IGNORE_CA_ERROR, the plugin respects the revocation status when either OCSP or CRL URL is set, and doesn't fail on network issues. If set to STRICT, the plugin only treats the certificate as valid when it's able to verify the revocation status. must be one of ["IGNORE_CA_ERROR", "SKIP", "STRICT"]
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            secure_source: (Boolean) Whether to secure the source of the request. If set to true, the plugin will only allow requests from trusted IPs (configured by the trusted_ips config option).
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            skip_consumer_lookup: (Boolean) Skip consumer lookup once certificate is trusted against the configured CA list.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_header_cert_auth.my_kong-gateway_plugin_header_cert_auth ""
    kong-gateway_plugin_hmac_auth:
        subCategory: ""
        description: PluginHmacAuth Resource
        name: kong-gateway_plugin_hmac_auth
        title: kong-gateway_plugin_hmac_auth Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginhmacauth
              manifest: |-
                {
                  "config": {
                    "algorithms": [
                      "hmac-sha256"
                    ],
                    "anonymous": "...my_anonymous...",
                    "clock_skew": 8.73,
                    "enforce_headers": [
                      "..."
                    ],
                    "hide_credentials": false,
                    "realm": "...my_realm...",
                    "validate_request_body": false
                  },
                  "created_at": 2,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            algorithms: (List of String) A list of HMAC digest algorithms that the user wants to support. Allowed values are hmac-sha1, hmac-sha256, hmac-sha384, and hmac-sha512
            anonymous: (String) An optional string (Consumer UUID or username) value to use as an “anonymous” consumer if authentication fails.
            before: (Attributes) (see below for nested schema)
            clock_skew: (Number) Clock skew in seconds to prevent replay attacks.
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            enforce_headers: (List of String) A list of headers that the client should at least use for HTTP signature creation.
            hide_credentials: (Boolean) An optional boolean value telling the plugin to show or hide the credential from the upstream service.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            realm: (String) When authentication fails the plugin sends WWW-Authenticate header with realm attribute value.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            validate_request_body: (Boolean) A boolean value telling the plugin to enable body validation.
        importStatements:
            - terraform import kong-gateway_plugin_hmac_auth.my_kong-gateway_plugin_hmac_auth ""
    kong-gateway_plugin_http_log:
        subCategory: ""
        description: PluginHTTPLog Resource
        name: kong-gateway_plugin_http_log
        title: kong-gateway_plugin_http_log Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginhttplog
              manifest: |-
                {
                  "config": {
                    "content_type": "application/json",
                    "custom_fields_by_lua": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "flush_timeout": 8.6,
                    "headers": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "http_endpoint": "...my_http_endpoint...",
                    "keepalive": 4.44,
                    "method": "PUT",
                    "queue": {
                      "concurrency_limit": 1,
                      "initial_retry_delay": 273110.25,
                      "max_batch_size": 635763,
                      "max_bytes": 9,
                      "max_coalescing_delay": 553.65,
                      "max_entries": 735326,
                      "max_retry_delay": 445848.89,
                      "max_retry_time": 5.62
                    },
                    "queue_size": 8,
                    "retry_count": 2,
                    "timeout": 2.86
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 8,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "udp"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            concurrency_limit: (Number) The number of of queue delivery timers. -1 indicates unlimited. must be one of ["-1", "1"]
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            content_type: (String) Indicates the type of data sent. The only available option is application/json. must be one of ["application/json", "application/json; charset=utf-8"]
            created_at: (Number) Unix epoch when the resource was created.
            custom_fields_by_lua: (Map of String) Lua code as a key-value map
            enabled: (Boolean) Whether the plugin is applied.
            flush_timeout: (Number) Optional time in seconds. If queue_size > 1, this is the max idle time before sending a log with less than queue_size records.
            headers: (Map of String) An optional table of headers included in the HTTP message to the upstream server. Values are indexed by header name, and each header name accepts a single string.
            http_endpoint: (String) A string representing a URL, such as https://example.com/path/to/resource?q=search.
            id: (String) The ID of this resource.
            initial_retry_delay: (Number) Time in seconds before the initial retry is made for a failing batch.
            instance_name: (String)
            keepalive: (Number) An optional value in milliseconds that defines how long an idle connection will live before being closed.
            max_batch_size: (Number) Maximum number of entries that can be processed at a time.
            max_bytes: (Number) Maximum number of bytes that can be waiting on a queue, requires string content.
            max_coalescing_delay: (Number) Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler.
            max_entries: (Number) Maximum number of entries that can be waiting on the queue.
            max_retry_delay: (Number) Maximum time in seconds between retries, caps exponential backoff.
            max_retry_time: (Number) Time in seconds before the queue gives up calling a failed handler for a batch.
            method: (String) An optional method used to send data to the HTTP server. Supported values are POST (default), PUT, and PATCH. must be one of ["PATCH", "POST", "PUT"]
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing protocols.
            queue: (Attributes) (see below for nested schema)
            queue_size: (Number) Maximum number of log entries to be sent on each message to the upstream server.
            retry_count: (Number) Number of times to retry when sending data to the upstream server.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) An optional timeout in milliseconds when sending data to the upstream server.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_http_log.my_kong-gateway_plugin_http_log ""
    kong-gateway_plugin_injection_protection:
        subCategory: ""
        description: PluginInjectionProtection Resource
        name: kong-gateway_plugin_injection_protection
        title: kong-gateway_plugin_injection_protection Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugininjectionprotection
              manifest: |-
                {
                  "config": {
                    "custom_injections": [
                      {
                        "name": "...my_name...",
                        "regex": "...my_regex..."
                      }
                    ],
                    "enforcement_mode": "log_only",
                    "error_message": "...my_error_message...",
                    "error_status_code": 467,
                    "injection_types": [
                      "java_exception"
                    ],
                    "locations": [
                      "body"
                    ]
                  },
                  "created_at": 3,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 10
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            custom_injections: (Attributes List) Custom regexes to check for. (see below for nested schema)
            enabled: (Boolean) Whether the plugin is applied.
            enforcement_mode: (String) Enforcement mode of the security policy. must be one of ["block", "log_only"]
            error_message: (String) The response message when validation fails
            error_status_code: (Number) The response status code when validation fails.
            id: (String) The ID of this resource.
            injection_types: (List of String) The type of injections to check for.
            instance_name: (String)
            locations: (List of String) The locations to check for injection.
            name: (String) A unique name for this injection. Not Null
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            regex: (String) The regex to match against. Not Null
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_injection_protection.my_kong-gateway_plugin_injection_protection ""
    kong-gateway_plugin_ip_restriction:
        subCategory: ""
        description: PluginIPRestriction Resource
        name: kong-gateway_plugin_ip_restriction
        title: kong-gateway_plugin_ip_restriction Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginiprestriction
              manifest: |-
                {
                  "config": {
                    "allow": [
                      "..."
                    ],
                    "deny": [
                      "..."
                    ],
                    "message": "...my_message...",
                    "status": 2.86
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 7,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "wss"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 6
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow: (List of String) List of IPs or CIDR ranges to allow. One of config.allow or config.deny must be specified.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            deny: (List of String) List of IPs or CIDR ranges to deny. One of config.allow or config.deny must be specified.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            message: (String) The message to send as a response body to rejected requests.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            status: (Number) The HTTP status of the requests that will be rejected by the plugin.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_ip_restriction.my_kong-gateway_plugin_ip_restriction ""
    kong-gateway_plugin_jq:
        subCategory: ""
        description: PluginJq Resource
        name: kong-gateway_plugin_jq
        title: kong-gateway_plugin_jq Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginjq
              manifest: |-
                {
                  "config": {
                    "request_if_media_type": [
                      "..."
                    ],
                    "request_jq_program": "...my_request_jq_program...",
                    "request_jq_program_options": {
                      "ascii_output": false,
                      "compact_output": true,
                      "join_output": true,
                      "raw_output": false,
                      "sort_keys": true
                    },
                    "response_if_media_type": [
                      "..."
                    ],
                    "response_if_status_code": [
                      575
                    ],
                    "response_jq_program": "...my_response_jq_program...",
                    "response_jq_program_options": {
                      "ascii_output": true,
                      "compact_output": false,
                      "join_output": true,
                      "raw_output": true,
                      "sort_keys": false
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 5
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            ascii_output: (Boolean)
            before: (Attributes) (see below for nested schema)
            compact_output: (Boolean)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            join_output: (Boolean)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            raw_output: (Boolean)
            request_if_media_type: (List of String)
            request_jq_program: (String)
            request_jq_program_options: (Attributes) (see below for nested schema)
            response_if_media_type: (List of String)
            response_if_status_code: (List of Number)
            response_jq_program: (String)
            response_jq_program_options: (Attributes) (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            sort_keys: (Boolean)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_jq.my_kong-gateway_plugin_jq ""
    kong-gateway_plugin_json_threat_protection:
        subCategory: ""
        description: PluginJSONThreatProtection Resource
        name: kong-gateway_plugin_json_threat_protection
        title: kong-gateway_plugin_json_threat_protection Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginjsonthreatprotection
              manifest: |-
                {
                  "config": {
                    "allow_duplicate_object_entry_name": false,
                    "enforcement_mode": "block",
                    "error_message": "...my_error_message...",
                    "error_status_code": 422,
                    "max_array_element_count": 333817350,
                    "max_body_size": 6963462,
                    "max_container_depth": 1859170481,
                    "max_object_entry_count": 1346643259,
                    "max_object_entry_name_length": 60000047,
                    "max_string_value_length": 64603074
                  },
                  "created_at": 4,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_duplicate_object_entry_name: (Boolean) Allow or disallow duplicate object entry name.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            enforcement_mode: (String) Enforcement mode of the security policy. must be one of ["block", "log_only"]
            error_message: (String) The response message when validation fails
            error_status_code: (Number) The response status code when validation fails.
            id: (String) The ID of this resource.
            instance_name: (String)
            max_array_element_count: (Number) Max number of elements in an array. -1 means unlimited.
            max_body_size: (Number) Max size of the request body. -1 means unlimited.
            max_container_depth: (Number) Max nested depth of objects and arrays. -1 means unlimited.
            max_object_entry_count: (Number) Max number of entries in an object. -1 means unlimited.
            max_object_entry_name_length: (Number) Max string length of object name. -1 means unlimited.
            max_string_value_length: (Number) Max string value length. -1 means unlimited.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_json_threat_protection.my_kong-gateway_plugin_json_threat_protection ""
    kong-gateway_plugin_jwe_decrypt:
        subCategory: ""
        description: PluginJweDecrypt Resource
        name: kong-gateway_plugin_jwe_decrypt
        title: kong-gateway_plugin_jwe_decrypt Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginjwedecrypt
              manifest: |-
                {
                  "config": {
                    "forward_header_name": "...my_forward_header_name...",
                    "key_sets": [
                      "..."
                    ],
                    "lookup_header_name": "...my_lookup_header_name...",
                    "strict": false
                  },
                  "created_at": 5,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 10
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            forward_header_name: (String) The name of the header that is used to set the decrypted value.
            id: (String) The ID of this resource.
            instance_name: (String)
            key_sets: (List of String) Denote the name or names of all Key Sets that should be inspected when trying to find a suitable key to decrypt the JWE token.
            lookup_header_name: (String) The name of the header to look for the JWE token.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            strict: (Boolean) Defines how the plugin behaves in cases where no token was found in the request. When using strict mode, the request requires a token to be present and subsequently raise an error if none could be found.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_jwe_decrypt.my_kong-gateway_plugin_jwe_decrypt ""
    kong-gateway_plugin_jwt:
        subCategory: ""
        description: PluginJwt Resource
        name: kong-gateway_plugin_jwt
        title: kong-gateway_plugin_jwt Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginjwt
              manifest: |-
                {
                  "config": {
                    "anonymous": "...my_anonymous...",
                    "claims_to_verify": [
                      "exp"
                    ],
                    "cookie_names": [
                      "..."
                    ],
                    "header_names": [
                      "..."
                    ],
                    "key_claim_name": "...my_key_claim_name...",
                    "maximum_expiration": 8041591.04,
                    "realm": "...my_realm...",
                    "run_on_preflight": false,
                    "secret_is_base64": true,
                    "uri_param_names": [
                      "..."
                    ]
                  },
                  "created_at": 1,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 5
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            anonymous: (String) An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails.
            before: (Attributes) (see below for nested schema)
            claims_to_verify: '(List of String) A list of registered claims (according to RFC 7519) that Kong can verify as well. Accepted values: one of exp or nbf.'
            config: (Attributes) (see below for nested schema)
            cookie_names: (List of String) A list of cookie names that Kong will inspect to retrieve JWTs.
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            header_names: (List of String) A list of HTTP header names that Kong will inspect to retrieve JWTs.
            id: (String) The ID of this resource.
            instance_name: (String)
            key_claim_name: (String) The name of the claim in which the key identifying the secret must be passed. The plugin will attempt to read this claim from the JWT payload and the header, in that order.
            maximum_expiration: (Number) A value between 0 and 31536000 (365 days) limiting the lifetime of the JWT to maximum_expiration seconds in the future.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            realm: (String) When authentication fails the plugin sends WWW-Authenticate header with realm attribute value.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            run_on_preflight: (Boolean) A boolean value that indicates whether the plugin should run (and try to authenticate) on OPTIONS preflight requests. If set to false, then OPTIONS requests will always be allowed.
            secret_is_base64: (Boolean) If true, the plugin assumes the credential’s secret to be base64 encoded. You will need to create a base64-encoded secret for your Consumer, and sign your JWT with the original secret.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            uri_param_names: (List of String) A list of querystring parameters that Kong will inspect to retrieve JWTs.
        importStatements:
            - terraform import kong-gateway_plugin_jwt.my_kong-gateway_plugin_jwt ""
    kong-gateway_plugin_jwt_signer:
        subCategory: ""
        description: PluginJwtSigner Resource
        name: kong-gateway_plugin_jwt_signer
        title: kong-gateway_plugin_jwt_signer Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginjwtsigner
              manifest: |-
                {
                  "config": {
                    "access_token_consumer_by": [
                      "custom_id"
                    ],
                    "access_token_consumer_claim": [
                      "..."
                    ],
                    "access_token_introspection_authorization": "...my_access_token_introspection_authorization...",
                    "access_token_introspection_body_args": "...my_access_token_introspection_body_args...",
                    "access_token_introspection_consumer_by": [
                      "custom_id"
                    ],
                    "access_token_introspection_consumer_claim": [
                      "..."
                    ],
                    "access_token_introspection_endpoint": "...my_access_token_introspection_endpoint...",
                    "access_token_introspection_hint": "...my_access_token_introspection_hint...",
                    "access_token_introspection_jwt_claim": [
                      "..."
                    ],
                    "access_token_introspection_leeway": 6.13,
                    "access_token_introspection_scopes_claim": [
                      "..."
                    ],
                    "access_token_introspection_scopes_required": [
                      "..."
                    ],
                    "access_token_introspection_timeout": 1.35,
                    "access_token_issuer": "...my_access_token_issuer...",
                    "access_token_jwks_uri": "...my_access_token_jwks_uri...",
                    "access_token_jwks_uri_client_certificate": "...my_access_token_jwks_uri_client_certificate...",
                    "access_token_jwks_uri_client_password": "...my_access_token_jwks_uri_client_password...",
                    "access_token_jwks_uri_client_username": "...my_access_token_jwks_uri_client_username...",
                    "access_token_jwks_uri_rotate_period": 7.58,
                    "access_token_keyset": "...my_access_token_keyset...",
                    "access_token_keyset_client_certificate": "...my_access_token_keyset_client_certificate...",
                    "access_token_keyset_client_password": "...my_access_token_keyset_client_password...",
                    "access_token_keyset_client_username": "...my_access_token_keyset_client_username...",
                    "access_token_keyset_rotate_period": 4.73,
                    "access_token_leeway": 4.2,
                    "access_token_optional": false,
                    "access_token_request_header": "...my_access_token_request_header...",
                    "access_token_scopes_claim": [
                      "..."
                    ],
                    "access_token_scopes_required": [
                      "..."
                    ],
                    "access_token_signing_algorithm": "ES256",
                    "access_token_upstream_header": "...my_access_token_upstream_header...",
                    "access_token_upstream_leeway": 7.45,
                    "add_access_token_claims": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "add_channel_token_claims": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "add_claims": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "cache_access_token_introspection": true,
                    "cache_channel_token_introspection": false,
                    "channel_token_consumer_by": [
                      "id"
                    ],
                    "channel_token_consumer_claim": [
                      "..."
                    ],
                    "channel_token_introspection_authorization": "...my_channel_token_introspection_authorization...",
                    "channel_token_introspection_body_args": "...my_channel_token_introspection_body_args...",
                    "channel_token_introspection_consumer_by": [
                      "custom_id"
                    ],
                    "channel_token_introspection_consumer_claim": [
                      "..."
                    ],
                    "channel_token_introspection_endpoint": "...my_channel_token_introspection_endpoint...",
                    "channel_token_introspection_hint": "...my_channel_token_introspection_hint...",
                    "channel_token_introspection_jwt_claim": [
                      "..."
                    ],
                    "channel_token_introspection_leeway": 7.13,
                    "channel_token_introspection_scopes_claim": [
                      "..."
                    ],
                    "channel_token_introspection_scopes_required": [
                      "..."
                    ],
                    "channel_token_introspection_timeout": 1.55,
                    "channel_token_issuer": "...my_channel_token_issuer...",
                    "channel_token_jwks_uri": "...my_channel_token_jwks_uri...",
                    "channel_token_jwks_uri_client_certificate": "...my_channel_token_jwks_uri_client_certificate...",
                    "channel_token_jwks_uri_client_password": "...my_channel_token_jwks_uri_client_password...",
                    "channel_token_jwks_uri_client_username": "...my_channel_token_jwks_uri_client_username...",
                    "channel_token_jwks_uri_rotate_period": 6.47,
                    "channel_token_keyset": "...my_channel_token_keyset...",
                    "channel_token_keyset_client_certificate": "...my_channel_token_keyset_client_certificate...",
                    "channel_token_keyset_client_password": "...my_channel_token_keyset_client_password...",
                    "channel_token_keyset_client_username": "...my_channel_token_keyset_client_username...",
                    "channel_token_keyset_rotate_period": 7.71,
                    "channel_token_leeway": 7.21,
                    "channel_token_optional": true,
                    "channel_token_request_header": "...my_channel_token_request_header...",
                    "channel_token_scopes_claim": [
                      "..."
                    ],
                    "channel_token_scopes_required": [
                      "..."
                    ],
                    "channel_token_signing_algorithm": "HS384",
                    "channel_token_upstream_header": "...my_channel_token_upstream_header...",
                    "channel_token_upstream_leeway": 3.03,
                    "enable_access_token_introspection": true,
                    "enable_channel_token_introspection": true,
                    "enable_hs_signatures": false,
                    "enable_instrumentation": false,
                    "original_access_token_upstream_header": "...my_original_access_token_upstream_header...",
                    "original_channel_token_upstream_header": "...my_original_channel_token_upstream_header...",
                    "realm": "...my_realm...",
                    "remove_access_token_claims": [
                      "..."
                    ],
                    "remove_channel_token_claims": [
                      "..."
                    ],
                    "set_access_token_claims": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "set_channel_token_claims": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "set_claims": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "trust_access_token_introspection": true,
                    "trust_channel_token_introspection": false,
                    "verify_access_token_expiry": true,
                    "verify_access_token_introspection_expiry": true,
                    "verify_access_token_introspection_scopes": true,
                    "verify_access_token_scopes": true,
                    "verify_access_token_signature": true,
                    "verify_channel_token_expiry": false,
                    "verify_channel_token_introspection_expiry": true,
                    "verify_channel_token_introspection_scopes": true,
                    "verify_channel_token_scopes": true,
                    "verify_channel_token_signature": false
                  },
                  "created_at": 1,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            access_token_consumer_by: (List of String) When the plugin tries to apply an access token to a Kong consumer mapping, it tries to find a matching Kong consumer from properties defined using this configuration parameter. The parameter can take an array of alues. Valid values are id, username, and custom_id.
            access_token_consumer_claim: (List of String) When you set a value for this parameter, the plugin tries to map an arbitrary claim specified with this configuration parameter (for example, sub or username) in an access token to Kong consumer entity.
            access_token_introspection_authorization: (String) If the introspection endpoint requires client authentication (client being the JWT Signer plugin), you can specify the Authorization header's value with this configuration parameter.
            access_token_introspection_body_args: '(String) This parameter allows you to pass URL encoded request body arguments. For example: resource= or a=1&b=&c.'
            access_token_introspection_consumer_by: (List of String) When the plugin tries to do access token introspection results to Kong consumer mapping, it tries to find a matching Kong consumer from properties defined using this configuration parameter. The parameter can take an array of values.
            access_token_introspection_consumer_claim: (List of String) When you set a value for this parameter, the plugin tries to map an arbitrary claim specified with this configuration parameter (such as sub or username) in access token introspection results to the Kong consumer entity.
            access_token_introspection_endpoint: (String) When you use opaque access tokens and you want to turn on access token introspection, you need to specify the OAuth 2.0 introspection endpoint URI with this configuration parameter.
            access_token_introspection_hint: (String) If you need to give hint parameter when introspecting an access token, use this parameter to specify the value. By default, the plugin sends hint=access_token.
            access_token_introspection_jwt_claim: (List of String) If your introspection endpoint returns an access token in one of the keys (or claims) within the introspection results (JSON). If the key cannot be found, the plugin responds with 401 Unauthorized. Also if the key is found but cannot be decoded as JWT, it also responds with 401 Unauthorized.
            access_token_introspection_leeway: (Number) Adjusts clock skew between the token issuer introspection results and Kong. The value is added to introspection results (JSON) exp claim/property before checking token expiry against Kong servers current time in seconds. You can disable access token introspection expiry verification altogether with config.verify_access_token_introspection_expiry.
            access_token_introspection_scopes_claim: (List of String) Specify the claim/property in access token introspection results (JSON) to be verified against values of config.access_token_introspection_scopes_required. This supports nested claims. For example, with Keycloak you could use [ "realm_access", "roles" ], hich can be given as realm_access,roles (form post). If the claim is not found in access token introspection results, and you have specified config.access_token_introspection_scopes_required, the plugin responds with 403 Forbidden.
            access_token_introspection_scopes_required: (List of String) Specify the required values (or scopes) that are checked by an introspection claim/property specified by config.access_token_introspection_scopes_claim.
            access_token_introspection_timeout: (Number) Timeout in milliseconds for an introspection request. The plugin tries to introspect twice if the first request fails for some reason. If both requests timeout, then the plugin runs two times the config.access_token_introspection_timeout on access token introspection.
            access_token_issuer: (String) The iss claim of a signed or re-signed access token is set to this value. Original iss claim of the incoming token (possibly introspected) is stored in original_iss claim of the newly signed access token.
            access_token_jwks_uri: (String) Specify the URI where the plugin can fetch the public keys (JWKS) to verify the signature of the access token.
            access_token_jwks_uri_client_certificate: (String) The client certificate that will be used to authenticate Kong if access_token_jwks_uri is an https uri that requires mTLS Auth.
            access_token_jwks_uri_client_password: (String) The client password that will be used to authenticate Kong if access_token_jwks_uri is a uri that requires Basic Auth. Should be configured together with access_token_jwks_uri_client_username
            access_token_jwks_uri_client_username: (String) The client username that will be used to authenticate Kong if access_token_jwks_uri is a uri that requires Basic Auth. Should be configured together with access_token_jwks_uri_client_password
            access_token_jwks_uri_rotate_period: (Number) Specify the period (in seconds) to auto-rotate the jwks for access_token_jwks_uri. The default value 0 means no auto-rotation.
            access_token_keyset: (String) The name of the keyset containing signing keys.
            access_token_keyset_client_certificate: (String) The client certificate that will be used to authenticate Kong if access_token_keyset is an https uri that requires mTLS Auth.
            access_token_keyset_client_password: (String) The client password that will be used to authenticate Kong if access_token_keyset is a uri that requires Basic Auth. Should be configured together with access_token_keyset_client_username
            access_token_keyset_client_username: (String) The client username that will be used to authenticate Kong if access_token_keyset is a uri that requires Basic Auth. Should be configured together with access_token_keyset_client_password
            access_token_keyset_rotate_period: (Number) Specify the period (in seconds) to auto-rotate the jwks for access_token_keyset. The default value 0 means no auto-rotation.
            access_token_leeway: (Number) Adjusts clock skew between the token issuer and Kong. The value is added to the token's exp claim before checking token expiry against Kong servers' current time in seconds. You can disable access token expiry verification altogether with config.verify_access_token_expiry.
            access_token_optional: (Boolean) If an access token is not provided or no config.access_token_request_header is specified, the plugin cannot verify the access token. In that case, the plugin normally responds with 401 Unauthorized (client didn't send a token) or 500 Unexpected (a configuration error). Use this parameter to allow the request to proceed even when there is no token to check. If the token is provided, then this parameter has no effect
            access_token_request_header: (String) This parameter tells the name of the header where to look for the access token.
            access_token_scopes_claim: (List of String) Specify the claim in an access token to verify against values of config.access_token_scopes_required.
            access_token_scopes_required: (List of String) Specify the required values (or scopes) that are checked by a claim specified by config.access_token_scopes_claim.
            access_token_signing_algorithm: (String) When this plugin sets the upstream header as specified with config.access_token_upstream_header, re-signs the original access token using the private keys of the JWT Signer plugin. Specify the algorithm that is used to sign the token. The config.access_token_issuer specifies which keyset is used to sign the new token issued by Kong using the specified signing algorithm. must be one of ["ES256", "ES384", "ES512", "EdDSA", "HS256", "HS384", "HS512", "PS256", "PS384", "PS512", "RS256", "RS512"]
            access_token_upstream_header: (String) Removes the config.access_token_request_header from the request after reading its value. With config.access_token_upstream_header, you can specify the upstream header where the plugin adds the Kong signed token. If you don't specify a value, such as use null or "" (empty string), the plugin does not even try to sign or re-sign the token.
            access_token_upstream_leeway: (Number) If you want to add or subtract (using a negative value) expiry time (in seconds) of the original access token, you can specify a value that is added to the original access token's exp claim.
            add_access_token_claims: (Map of String) Add customized claims if they are not present yet. Value can be a regular or JSON string; if JSON, decoded data is used as the claim's value.
            add_channel_token_claims: (Map of String) Add customized claims if they are not present yet. Value can be a regular or JSON string; if JSON, decoded data is used as the claim's value.
            add_claims: (Map of String) Add customized claims to both tokens if they are not present yet. Value can be a regular or JSON string; if JSON, decoded data is used as the claim's value.
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            cache_access_token_introspection: (Boolean) Whether to cache access token introspection results.
            cache_channel_token_introspection: (Boolean) Whether to cache channel token introspection results.
            channel_token_consumer_by: '(List of String) When the plugin tries to do channel token to Kong consumer mapping, it tries to find a matching Kong consumer from properties defined using this configuration parameter. The parameter can take an array of valid values: id, username, and custom_id.'
            channel_token_consumer_claim: (List of String) When you set a value for this parameter, the plugin tries to map an arbitrary claim specified with this configuration parameter. Kong consumers have an id, a username, and a custom_id. If this parameter is enabled but the mapping fails, such as when there's a non-existent Kong consumer, the plugin responds with 403 Forbidden.
            channel_token_introspection_authorization: (String) When using opaque channel tokens, and you want to turn on channel token introspection, you need to specify the OAuth 2.0 introspection endpoint URI with this configuration parameter. Otherwise the plugin will not try introspection, and instead returns 401 Unauthorized when using opaque channel tokens.
            channel_token_introspection_body_args: '(String) If you need to pass additional body arguments to introspection endpoint when the plugin introspects the opaque channel token, you can use this config parameter to specify them. You should URL encode the value. For example: resource= or a=1&b=&c.'
            channel_token_introspection_consumer_by: (List of String) When the plugin tries to do channel token introspection results to Kong consumer mapping, it tries to find a matching Kong consumer from properties defined using this configuration parameter. The parameter can take an array of values. Valid values are id, username and custom_id.
            channel_token_introspection_consumer_claim: (List of String) When you set a value for this parameter, the plugin tries to map an arbitrary claim specified with this configuration parameter (such as sub or username) in channel token introspection results to Kong consumer entity
            channel_token_introspection_endpoint: (String) When you use opaque access tokens and you want to turn on access token introspection, you need to specify the OAuth 2.0 introspection endpoint URI with this configuration parameter. Otherwise, the plugin does not try introspection and returns 401 Unauthorized instead.
            channel_token_introspection_hint: (String) If you need to give hint parameter when introspecting a channel token, you can use this parameter to specify the value of such parameter. By default, a hint isn't sent with channel token introspection.
            channel_token_introspection_jwt_claim: (List of String) If your introspection endpoint returns a channel token in one of the keys (or claims) in the introspection results (JSON), the plugin can use that value instead of the introspection results when doing expiry verification and signing of the new token issued by Kong.
            channel_token_introspection_leeway: (Number) You can use this parameter to adjust clock skew between the token issuer introspection results and Kong. The value will be added to introspection results (JSON) exp claim/property before checking token expiry against Kong servers current time (in seconds). You can disable channel token introspection expiry verification altogether with config.verify_channel_token_introspection_expiry.
            channel_token_introspection_scopes_claim: (List of String) Use this parameter to specify the claim/property in channel token introspection results (JSON) to be verified against values of config.channel_token_introspection_scopes_required. This supports nested claims.
            channel_token_introspection_scopes_required: (List of String) Use this parameter to specify the required values (or scopes) that are checked by an introspection claim/property specified by config.channel_token_introspection_scopes_claim.
            channel_token_introspection_timeout: (Number) Timeout in milliseconds for an introspection request. The plugin tries to introspect twice if the first request fails for some reason. If both requests timeout, then the plugin runs two times the config.access_token_introspection_timeout on channel token introspection.
            channel_token_issuer: (String) The iss claim of the re-signed channel token is set to this value, which is kong by default. The original iss claim of the incoming token (possibly introspected) is stored in the original_iss claim of the newly signed channel token.
            channel_token_jwks_uri: (String) If you want to use config.verify_channel_token_signature, you must specify the URI where the plugin can fetch the public keys (JWKS) to verify the signature of the channel token. If you don't specify a URI and you pass a JWT token to the plugin, then the plugin responds with 401 Unauthorized.
            channel_token_jwks_uri_client_certificate: (String) The client certificate that will be used to authenticate Kong if access_token_jwks_uri is an https uri that requires mTLS Auth.
            channel_token_jwks_uri_client_password: (String) The client password that will be used to authenticate Kong if channel_token_jwks_uri is a uri that requires Basic Auth. Should be configured together with channel_token_jwks_uri_client_username
            channel_token_jwks_uri_client_username: (String) The client username that will be used to authenticate Kong if channel_token_jwks_uri is a uri that requires Basic Auth. Should be configured together with channel_token_jwks_uri_client_password
            channel_token_jwks_uri_rotate_period: (Number) Specify the period (in seconds) to auto-rotate the jwks for channel_token_jwks_uri. The default value 0 means no auto-rotation.
            channel_token_keyset: (String) The name of the keyset containing signing keys.
            channel_token_keyset_client_certificate: (String) The client certificate that will be used to authenticate Kong if channel_token_keyset is an https uri that requires mTLS Auth.
            channel_token_keyset_client_password: (String) The client password that will be used to authenticate Kong if channel_token_keyset is a uri that requires Basic Auth. Should be configured together with channel_token_keyset_client_username
            channel_token_keyset_client_username: (String) The client username that will be used to authenticate Kong if channel_token_keyset is a uri that requires Basic Auth. Should be configured together with channel_token_keyset_client_password
            channel_token_keyset_rotate_period: (Number) Specify the period (in seconds) to auto-rotate the jwks for channel_token_keyset. The default value 0 means no auto-rotation.
            channel_token_leeway: (Number) Adjusts clock skew between the token issuer and Kong. The value will be added to token's exp claim before checking token expiry against Kong servers current time in seconds. You can disable channel token expiry verification altogether with config.verify_channel_token_expiry.
            channel_token_optional: (Boolean) If a channel token is not provided or no config.channel_token_request_header is specified, the plugin cannot verify the channel token. In that case, the plugin normally responds with 401 Unauthorized (client didn't send a token) or 500 Unexpected (a configuration error). Enable this parameter to allow the request to proceed even when there is no channel token to check. If the channel token is provided, then this parameter has no effect
            channel_token_request_header: (String) This parameter tells the name of the header where to look for the channel token. If you don't want to do anything with the channel token, then you can set this to null or "" (empty string).
            channel_token_scopes_claim: (List of String) Specify the claim in a channel token to verify against values of config.channel_token_scopes_required. This supports nested claims.
            channel_token_scopes_required: (List of String) Specify the required values (or scopes) that are checked by a claim specified by config.channel_token_scopes_claim.
            channel_token_signing_algorithm: (String) When this plugin sets the upstream header as specified with config.channel_token_upstream_header, it also re-signs the original channel token using private keys of this plugin. Specify the algorithm that is used to sign the token. must be one of ["ES256", "ES384", "ES512", "EdDSA", "HS256", "HS384", "HS512", "PS256", "PS384", "PS512", "RS256", "RS512"]
            channel_token_upstream_header: (String) This plugin removes the config.channel_token_request_header from the request after reading its value.
            channel_token_upstream_leeway: (Number) If you want to add or perhaps subtract (using negative value) expiry time of the original channel token, you can specify a value that is added to the original channel token's exp claim.
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enable_access_token_introspection: (Boolean) If you don't want to support opaque access tokens, change this configuration parameter to false to disable introspection.
            enable_channel_token_introspection: (Boolean) If you don't want to support opaque channel tokens, disable introspection by changing this configuration parameter to false.
            enable_hs_signatures: (Boolean) Tokens signed with HMAC algorithms such as HS256, HS384, or HS512 are not accepted by default. If you need to accept such tokens for verification, enable this setting.
            enable_instrumentation: (Boolean) Writes log entries with some added information using ngx.CRIT (CRITICAL) level.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            original_access_token_upstream_header: (String) The HTTP header name used to store the original access token.
            original_channel_token_upstream_header: (String) The HTTP header name used to store the original channel token.
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            realm: (String) When authentication or authorization fails, or there is an unexpected error, the plugin sends an WWW-Authenticate header with the realm attribute value.
            remove_access_token_claims: (List of String) remove claims. It should be an array, and each element is a claim key string.
            remove_channel_token_claims: (List of String) remove claims. It should be an array, and each element is a claim key string.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            set_access_token_claims: (Map of String) Set customized claims. If a claim is already present, it will be overwritten. Value can be a regular or JSON string; if JSON, decoded data is used as the claim's value.
            set_channel_token_claims: (Map of String) Set customized claims. If a claim is already present, it will be overwritten. Value can be a regular or JSON string; if JSON, decoded data is used as the claim's value.
            set_claims: (Map of String) Set customized claims to both tokens. If a claim is already present, it will be overwritten. Value can be a regular or JSON string; if JSON, decoded data is used as the claim's value.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            trust_access_token_introspection: (Boolean) Use this parameter to enable and disable further checks on a payload before the new token is signed. If you set this to true, the expiry or scopes are not checked on a payload.
            trust_channel_token_introspection: (Boolean) Providing an opaque channel token for plugin introspection, and verifying expiry and scopes on introspection results may make further payload checks unnecessary before the plugin signs a new token. This also applies when using a JWT token with introspection JSON as per config.channel_token_introspection_jwt_claim. Use this parameter to manage additional payload checks before signing a new token. With true (default), payload's expiry or scopes aren't checked.
            updated_at: (Number) Unix epoch when the resource was last updated.
            verify_access_token_expiry: (Boolean) Quickly turn access token expiry verification off and on as needed.
            verify_access_token_introspection_expiry: (Boolean) Quickly turn access token introspection expiry verification off and on as needed.
            verify_access_token_introspection_scopes: (Boolean) Quickly turn off and on the access token introspection scopes verification, specified with config.access_token_introspection_scopes_required.
            verify_access_token_scopes: (Boolean) Quickly turn off and on the access token required scopes verification, specified with config.access_token_scopes_required.
            verify_access_token_signature: (Boolean) Quickly turn access token signature verification off and on as needed.
            verify_channel_token_expiry: (Boolean)
            verify_channel_token_introspection_expiry: (Boolean) Quickly turn on/off the channel token introspection expiry verification.
            verify_channel_token_introspection_scopes: (Boolean) Quickly turn on/off the channel token introspection scopes verification specified with config.channel_token_introspection_scopes_required.
            verify_channel_token_scopes: (Boolean) Quickly turn on/off the channel token required scopes verification specified with config.channel_token_scopes_required.
            verify_channel_token_signature: (Boolean) Quickly turn on/off the channel token signature verification.
        importStatements:
            - terraform import kong-gateway_plugin_jwt_signer.my_kong-gateway_plugin_jwt_signer ""
    kong-gateway_plugin_kafka_consume:
        subCategory: ""
        description: PluginKafkaConsume Resource
        name: kong-gateway_plugin_kafka_consume
        title: kong-gateway_plugin_kafka_consume Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginkafkaconsume
              manifest: |-
                {
                  "config": {
                    "authentication": {
                      "mechanism": "SCRAM-SHA-256",
                      "password": "...my_password...",
                      "strategy": "sasl",
                      "tokenauth": true,
                      "user": "...my_user..."
                    },
                    "auto_offset_reset": "latest",
                    "bootstrap_servers": [
                      {
                        "host": "...my_host...",
                        "port": 90
                      }
                    ],
                    "cluster_name": "...my_cluster_name...",
                    "commit_strategy": "auto",
                    "message_deserializer": "noop",
                    "mode": "http-get",
                    "security": {
                      "certificate_id": "...my_certificate_id...",
                      "ssl": false
                    },
                    "topics": [
                      {
                        "name": "...my_name..."
                      }
                    ]
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 2
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            authentication: (Attributes) (see below for nested schema)
            auto_offset_reset: (String) The offset to start from when there is no initial offset in the consumer group. must be one of ["earliest", "latest"]
            before: (Attributes) (see below for nested schema)
            bootstrap_servers: '(Attributes List) Set of bootstrap brokers in a {host: host, port: port} list format. (see below for nested schema)'
            certificate_id: (String) UUID of certificate entity for mTLS authentication.
            cluster_name: (String) An identifier for the Kafka cluster.
            commit_strategy: (String) The strategy to use for committing offsets. must be one of ["auto", "off"]
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            host: (String) A string representing a host name, such as example.com. Not Null
            id: (String) The ID of this resource.
            instance_name: (String)
            mechanism: '(String) The SASL authentication mechanism.  Supported options: PLAIN or SCRAM-SHA-256. must be one of ["PLAIN", "SCRAM-SHA-256", "SCRAM-SHA-512"]'
            message_deserializer: (String) The deserializer to use for the consumed messages. must be one of ["json", "noop"]
            mode: (String) The mode of operation for the plugin. must be one of ["http-get", "server-sent-events"]
            name: (String) Not Null
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password for SASL authentication.
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive. Not Null
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            security: (Attributes) (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) Enables TLS.
            strategy: (String) The authentication strategy for the plugin, the only option for the value is sasl. must be "sasl"
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            tokenauth: (Boolean) Enable this to indicate DelegationToken authentication
            topics: (Attributes List) The Kafka topics and their configuration you want to consume from. (see below for nested schema)
            updated_at: (Number) Unix epoch when the resource was last updated.
            user: (String) Username for SASL authentication.
        importStatements:
            - terraform import kong-gateway_plugin_kafka_consume.my_kong-gateway_plugin_kafka_consume ""
    kong-gateway_plugin_kafka_log:
        subCategory: ""
        description: PluginKafkaLog Resource
        name: kong-gateway_plugin_kafka_log
        title: kong-gateway_plugin_kafka_log Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginkafkalog
              manifest: |-
                {
                  "config": {
                    "authentication": {
                      "mechanism": "SCRAM-SHA-256",
                      "password": "...my_password...",
                      "strategy": "sasl",
                      "tokenauth": true,
                      "user": "...my_user..."
                    },
                    "bootstrap_servers": [
                      {
                        "host": "...my_host...",
                        "port": 59919
                      }
                    ],
                    "cluster_name": "...my_cluster_name...",
                    "custom_fields_by_lua": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "keepalive": 5,
                    "keepalive_enabled": false,
                    "producer_async": false,
                    "producer_async_buffering_limits_messages_in_memory": 4,
                    "producer_async_flush_timeout": 8,
                    "producer_request_acks": 0,
                    "producer_request_limits_bytes_per_request": 10,
                    "producer_request_limits_messages_per_request": 0,
                    "producer_request_retries_backoff_timeout": 2,
                    "producer_request_retries_max_attempts": 6,
                    "producer_request_timeout": 6,
                    "security": {
                      "certificate_id": "...my_certificate_id...",
                      "ssl": false
                    },
                    "timeout": 0,
                    "topic": "...my_topic..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 5,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 3
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            authentication: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            bootstrap_servers: '(Attributes List) Set of bootstrap brokers in a {host: host, port: port} list format. (see below for nested schema)'
            certificate_id: (String) UUID of certificate entity for mTLS authentication.
            cluster_name: (String) An identifier for the Kafka cluster. By default, this field generates a random string. You can also set your own custom cluster identifier.  If more than one Kafka plugin is configured without a cluster_name (that is, if the default autogenerated value is removed), these plugins will use the same producer, and by extension, the same cluster. Logs will be sent to the leader of the cluster.
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            custom_fields_by_lua: (Map of String) Lua code as a key-value map
            enabled: (Boolean) Whether the plugin is applied.
            host: (String) A string representing a host name, such as example.com. Not Null
            id: (String) The ID of this resource.
            instance_name: (String)
            keepalive: (Number)
            keepalive_enabled: (Boolean)
            mechanism: '(String) The SASL authentication mechanism.  Supported options: PLAIN, SCRAM-SHA-256 or SCRAM-SHA-512. must be one of ["PLAIN", "SCRAM-SHA-256", "SCRAM-SHA-512"]'
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password for SASL authentication.
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive. Not Null
            producer_async: (Boolean) Flag to enable asynchronous mode.
            producer_async_buffering_limits_messages_in_memory: (Number) Maximum number of messages that can be buffered in memory in asynchronous mode.
            producer_async_flush_timeout: (Number) Maximum time interval in milliseconds between buffer flushes in asynchronous mode.
            producer_request_acks: '(Number) The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments; 1 for only the leader; and -1 for the full ISR (In-Sync Replica set). must be one of ["-1", "0", "1"]'
            producer_request_limits_bytes_per_request: (Number) Maximum size of a Produce request in bytes.
            producer_request_limits_messages_per_request: (Number) Maximum number of messages to include into a single Produce request.
            producer_request_retries_backoff_timeout: (Number) Backoff interval between retry attempts in milliseconds.
            producer_request_retries_max_attempts: (Number) Maximum number of retry attempts per single Produce request.
            producer_request_timeout: (Number) Time to wait for a Produce response in milliseconds
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            security: (Attributes) (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) Enables TLS.
            strategy: (String) The authentication strategy for the plugin, the only option for the value is sasl. must be "sasl"
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) Socket timeout in milliseconds.
            tokenauth: (Boolean) Enable this to indicate DelegationToken authentication
            topic: (String) The Kafka topic to publish to.
            updated_at: (Number) Unix epoch when the resource was last updated.
            user: (String) Username for SASL authentication.
        importStatements:
            - terraform import kong-gateway_plugin_kafka_log.my_kong-gateway_plugin_kafka_log ""
    kong-gateway_plugin_kafka_upstream:
        subCategory: ""
        description: PluginKafkaUpstream Resource
        name: kong-gateway_plugin_kafka_upstream
        title: kong-gateway_plugin_kafka_upstream Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginkafkaupstream
              manifest: |-
                {
                  "config": {
                    "allowed_topics": [
                      "..."
                    ],
                    "authentication": {
                      "mechanism": "SCRAM-SHA-256",
                      "password": "...my_password...",
                      "strategy": "sasl",
                      "tokenauth": true,
                      "user": "...my_user..."
                    },
                    "bootstrap_servers": [
                      {
                        "host": "...my_host...",
                        "port": 37844
                      }
                    ],
                    "cluster_name": "...my_cluster_name...",
                    "forward_body": false,
                    "forward_headers": false,
                    "forward_method": true,
                    "forward_uri": false,
                    "keepalive": 3,
                    "keepalive_enabled": true,
                    "message_by_lua_functions": [
                      "..."
                    ],
                    "producer_async": false,
                    "producer_async_buffering_limits_messages_in_memory": 3,
                    "producer_async_flush_timeout": 0,
                    "producer_request_acks": 0,
                    "producer_request_limits_bytes_per_request": 3,
                    "producer_request_limits_messages_per_request": 0,
                    "producer_request_retries_backoff_timeout": 0,
                    "producer_request_retries_max_attempts": 5,
                    "producer_request_timeout": 0,
                    "security": {
                      "certificate_id": "...my_certificate_id...",
                      "ssl": false
                    },
                    "timeout": 3,
                    "topic": "...my_topic...",
                    "topics_query_arg": "...my_topics_query_arg..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 10
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allowed_topics: (List of String) The list of allowed topic names to which messages can be sent. The default topic configured in the topic field is always allowed, regardless of its inclusion in allowed_topics.
            authentication: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            bootstrap_servers: '(Attributes List) Set of bootstrap brokers in a {host: host, port: port} list format. (see below for nested schema)'
            certificate_id: (String) UUID of certificate entity for mTLS authentication.
            cluster_name: (String) An identifier for the Kafka cluster. By default, this field generates a random string. You can also set your own custom cluster identifier.  If more than one Kafka plugin is configured without a cluster_name (that is, if the default autogenerated value is removed), these plugins will use the same producer, and by extension, the same cluster. Logs will be sent to the leader of the cluster.
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            forward_body: '(Boolean) Include the request body in the message. At least one of these must be true: forward_method, forward_uri, forward_headers, forward_body.'
            forward_headers: '(Boolean) Include the request headers in the message. At least one of these must be true: forward_method, forward_uri, forward_headers, forward_body.'
            forward_method: '(Boolean) Include the request method in the message. At least one of these must be true: forward_method, forward_uri, forward_headers, forward_body.'
            forward_uri: '(Boolean) Include the request URI and URI arguments (as in, query arguments) in the message. At least one of these must be true: forward_method, forward_uri, forward_headers, forward_body.'
            host: (String) A string representing a host name, such as example.com. Not Null
            id: (String) The ID of this resource.
            instance_name: (String)
            keepalive: (Number) Keepalive timeout in milliseconds.
            keepalive_enabled: (Boolean)
            mechanism: '(String) The SASL authentication mechanism.  Supported options: PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512. must be one of ["PLAIN", "SCRAM-SHA-256", "SCRAM-SHA-512"]'
            message_by_lua_functions: (List of String) The Lua functions that manipulates the message being sent to the Kafka topic.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password for SASL authentication.
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive. Not Null
            producer_async: (Boolean) Flag to enable asynchronous mode.
            producer_async_buffering_limits_messages_in_memory: (Number) Maximum number of messages that can be buffered in memory in asynchronous mode.
            producer_async_flush_timeout: (Number) Maximum time interval in milliseconds between buffer flushes in asynchronous mode.
            producer_request_acks: '(Number) The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments; 1 for only the leader; and -1 for the full ISR (In-Sync Replica set). must be one of ["-1", "0", "1"]'
            producer_request_limits_bytes_per_request: (Number) Maximum size of a Produce request in bytes.
            producer_request_limits_messages_per_request: (Number) Maximum number of messages to include into a single producer request.
            producer_request_retries_backoff_timeout: (Number) Backoff interval between retry attempts in milliseconds.
            producer_request_retries_max_attempts: (Number) Maximum number of retry attempts per single Produce request.
            producer_request_timeout: (Number) Time to wait for a Produce response in milliseconds.
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            security: (Attributes) (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) Enables TLS.
            strategy: (String) The authentication strategy for the plugin, the only option for the value is sasl. must be "sasl"
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) Socket timeout in milliseconds.
            tokenauth: (Boolean) Enable this to indicate DelegationToken authentication.
            topic: (String) The default Kafka topic to publish to if the query parameter defined in the topics_query_arg does not exist in the request
            topics_query_arg: (String) The request query parameter name that contains the topics to publish to
            updated_at: (Number) Unix epoch when the resource was last updated.
            user: (String) Username for SASL authentication.
        importStatements:
            - terraform import kong-gateway_plugin_kafka_upstream.my_kong-gateway_plugin_kafka_upstream ""
    kong-gateway_plugin_key_auth:
        subCategory: ""
        description: PluginKeyAuth Resource
        name: kong-gateway_plugin_key_auth
        title: kong-gateway_plugin_key_auth Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginkeyauth
              manifest: |-
                {
                  "config": {
                    "anonymous": "...my_anonymous...",
                    "hide_credentials": false,
                    "identity_realms": [
                      {
                        "id": "...my_id...",
                        "region": "...my_region...",
                        "scope": "cp"
                      }
                    ],
                    "key_in_body": false,
                    "key_in_header": false,
                    "key_in_query": true,
                    "key_names": [
                      "..."
                    ],
                    "realm": "...my_realm...",
                    "run_on_preflight": false
                  },
                  "created_at": 8,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "ws"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            anonymous: (String) An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request will fail with an authentication failure 4xx.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            hide_credentials: (Boolean) An optional boolean value telling the plugin to show or hide the credential from the upstream service. If true, the plugin strips the credential from the request.
            id: (String) The ID of this resource.
            identity_realms: (Attributes List) A configuration of Konnect Identity Realms that indicate where to source a consumer from. (see below for nested schema)
            instance_name: (String)
            key_in_body: '(Boolean) If enabled, the plugin reads the request body. Supported MIME types: application/www-form-urlencoded, application/json, and multipart/form-data.'
            key_in_header: (Boolean) If enabled (default), the plugin reads the request header and tries to find the key in it.
            key_in_query: (Boolean) If enabled (default), the plugin reads the query parameter in the request and tries to find the key in it.
            key_names: (List of String) Describes an array of parameter names where the plugin will look for a key. The key names may only contain [a-z], [A-Z], [0-9], [_] underscore, and [-] hyphen.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            realm: (String) When authentication fails the plugin sends WWW-Authenticate header with realm attribute value.
            region: (String)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            run_on_preflight: (Boolean) A boolean value that indicates whether the plugin should run (and try to authenticate) on OPTIONS preflight requests. If set to false, then OPTIONS requests are always allowed.
            scope: (String) must be one of ["cp", "realm"]
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_key_auth.my_kong-gateway_plugin_key_auth ""
    kong-gateway_plugin_key_auth_enc:
        subCategory: ""
        description: PluginKeyAuthEnc Resource
        name: kong-gateway_plugin_key_auth_enc
        title: kong-gateway_plugin_key_auth_enc Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginkeyauthenc
              manifest: |-
                {
                  "config": {
                    "anonymous": "...my_anonymous...",
                    "hide_credentials": true,
                    "key_in_body": false,
                    "key_in_header": true,
                    "key_in_query": true,
                    "key_names": [
                      "..."
                    ],
                    "realm": "...my_realm...",
                    "run_on_preflight": false
                  },
                  "created_at": 6,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            anonymous: (String) An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request will fail with an authentication failure 4xx. Note that this value must refer to the consumer id or username attribute, and not its custom_id.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            hide_credentials: (Boolean) An optional boolean value telling the plugin to show or hide the credential from the upstream service. If true, the plugin strips the credential from the request (i.e., the header, query string, or request body containing the key) before proxying it.
            id: (String) The ID of this resource.
            instance_name: (String)
            key_in_body: '(Boolean) If enabled, the plugin reads the request body (if said request has one and its MIME type is supported) and tries to find the key in it. Supported MIME types: application/www-form-urlencoded, application/json, and multipart/form-data.'
            key_in_header: (Boolean) If enabled (default), the plugin reads the request header and tries to find the key in it.
            key_in_query: (Boolean) If enabled (default), the plugin reads the query parameter in the request and tries to find the key in it.
            key_names: (List of String) Describes an array of parameter names where the plugin will look for a key. The client must send the authentication key in one of those key names, and the plugin will try to read the credential from a header, request body, or query string parameter with the same name.  Key names may only contain [a-z], [A-Z], [0-9], [_] underscore, and [-] hyphen.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            realm: (String) When authentication fails the plugin sends WWW-Authenticate header with realm attribute value.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            run_on_preflight: (Boolean) A boolean value that indicates whether the plugin should run (and try to authenticate) on OPTIONS preflight requests. If set to false, then OPTIONS requests are always allowed.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_key_auth_enc.my_kong-gateway_plugin_key_auth_enc ""
    kong-gateway_plugin_ldap_auth:
        subCategory: ""
        description: PluginLdapAuth Resource
        name: kong-gateway_plugin_ldap_auth
        title: kong-gateway_plugin_ldap_auth Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginldapauth
              manifest: |-
                {
                  "config": {
                    "anonymous": "...my_anonymous...",
                    "attribute": "...my_attribute...",
                    "base_dn": "...my_base_dn...",
                    "cache_ttl": 0.78,
                    "header_type": "...my_header_type...",
                    "hide_credentials": false,
                    "keepalive": 3.87,
                    "ldap_host": "...my_ldap_host...",
                    "ldap_port": 37816,
                    "ldaps": false,
                    "realm": "...my_realm...",
                    "start_tls": true,
                    "timeout": 4.96,
                    "verify_ldap_host": false
                  },
                  "created_at": 1,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 8
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            anonymous: (String) An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request fails with an authentication failure 4xx.
            attribute: (String) Attribute to be used to search the user; e.g. cn
            base_dn: (String) Base DN as the starting point for the search; e.g., dc=example,dc=com
            before: (Attributes) (see below for nested schema)
            cache_ttl: (Number) Cache expiry time in seconds.
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            header_type: (String) An optional string to use as part of the Authorization header
            hide_credentials: (Boolean) An optional boolean value telling the plugin to hide the credential to the upstream server. It will be removed by Kong before proxying the request.
            id: (String) The ID of this resource.
            instance_name: (String)
            keepalive: (Number) An optional value in milliseconds that defines how long an idle connection to LDAP server will live before being closed.
            ldap_host: (String) A string representing a host name, such as example.com.
            ldap_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            ldaps: (Boolean) Set to true to connect using the LDAPS protocol (LDAP over TLS).  When ldaps is configured, you must use port 636. If the ldap setting is enabled, ensure the start_tls setting is disabled.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            realm: (String) When authentication fails the plugin sends WWW-Authenticate header with realm attribute value.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            start_tls: (Boolean) Set it to true to issue StartTLS (Transport Layer Security) extended operation over ldap connection. If the start_tls setting is enabled, ensure the ldaps setting is disabled.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) An optional timeout in milliseconds when waiting for connection with LDAP server.
            updated_at: (Number) Unix epoch when the resource was last updated.
            verify_ldap_host: (Boolean) Set to true to authenticate LDAP server. The server certificate will be verified according to the CA certificates specified by the lua_ssl_trusted_certificate directive.
        importStatements:
            - terraform import kong-gateway_plugin_ldap_auth.my_kong-gateway_plugin_ldap_auth ""
    kong-gateway_plugin_ldap_auth_advanced:
        subCategory: ""
        description: PluginLdapAuthAdvanced Resource
        name: kong-gateway_plugin_ldap_auth_advanced
        title: kong-gateway_plugin_ldap_auth_advanced Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginldapauthadvanced
              manifest: |-
                {
                  "config": {
                    "anonymous": "...my_anonymous...",
                    "attribute": "...my_attribute...",
                    "base_dn": "...my_base_dn...",
                    "bind_dn": "...my_bind_dn...",
                    "cache_ttl": 5.26,
                    "consumer_by": [
                      "username"
                    ],
                    "consumer_optional": true,
                    "group_base_dn": "...my_group_base_dn...",
                    "group_member_attribute": "...my_group_member_attribute...",
                    "group_name_attribute": "...my_group_name_attribute...",
                    "groups_required": [
                      "..."
                    ],
                    "header_type": "...my_header_type...",
                    "hide_credentials": false,
                    "keepalive": 2.34,
                    "ldap_host": "...my_ldap_host...",
                    "ldap_password": "...my_ldap_password...",
                    "ldap_port": 3.71,
                    "ldaps": true,
                    "log_search_results": false,
                    "realm": "...my_realm...",
                    "start_tls": false,
                    "timeout": 0.12,
                    "verify_ldap_host": true
                  },
                  "created_at": 0,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            anonymous: (String) An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request will fail with an authentication failure 4xx. Note that this value must refer to the consumer id or username attribute, and not its custom_id.
            attribute: (String) Attribute to be used to search the user; e.g., "cn".
            base_dn: (String) Base DN as the starting point for the search; e.g., 'dc=example,dc=com'.
            before: (Attributes) (see below for nested schema)
            bind_dn: (String) The DN to bind to. Used to perform LDAP search of user. This bind_dn should have permissions to search for the user being authenticated.
            cache_ttl: (Number) Cache expiry time in seconds.
            config: (Attributes) (see below for nested schema)
            consumer_by: (List of String) Whether to authenticate consumers based on username, custom_id, or both.
            consumer_optional: (Boolean) Whether consumer mapping is optional. If consumer_optional=true, the plugin will not attempt to associate a consumer with the LDAP authenticated user.
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            group_base_dn: (String) Sets a distinguished name (DN) for the entry where LDAP searches for groups begin. This field is case-insensitive.',dc=com'.
            group_member_attribute: (String) Sets the attribute holding the members of the LDAP group. This field is case-sensitive.
            group_name_attribute: (String) Sets the attribute holding the name of a group, typically called name (in Active Directory) or cn (in OpenLDAP). This field is case-insensitive.
            groups_required: (List of String) The groups required to be present in the LDAP search result for successful authorization. This config parameter works in both AND / OR cases. - When ["group1 group2"] are in the same array indices, both group1 AND group2 need to be present in the LDAP search result. - When ["group1", "group2"] are in different array indices, either group1 OR group2 need to be present in the LDAP search result.
            header_type: '(String) An optional string to use as part of the Authorization header. By default, a valid Authorization header looks like this: Authorization: ldap base64(username:password). If header_type is set to "basic", then the Authorization header would be Authorization: basic base64(username:password). Note that header_type can take any string, not just ''ldap'' and ''basic''.'
            hide_credentials: (Boolean) An optional boolean value telling the plugin to hide the credential to the upstream server. It will be removed by Kong before proxying the request.
            id: (String) The ID of this resource.
            instance_name: (String)
            keepalive: (Number) An optional value in milliseconds that defines how long an idle connection to LDAP server will live before being closed.
            ldap_host: (String) Host on which the LDAP server is running.
            ldap_password: (String) The password to the LDAP server.
            ldap_port: (Number) TCP port where the LDAP server is listening. 389 is the default port for non-SSL LDAP and AD. 636 is the port required for SSL LDAP and AD. If ldaps is configured, you must use port 636.
            ldaps: (Boolean) Set it to true to use ldaps, a secure protocol (that can be configured to TLS) to connect to the LDAP server. When ldaps is configured, you must use port 636. If the ldap setting is enabled, ensure the start_tls setting is disabled.
            log_search_results: (Boolean) Displays all the LDAP search results received from the LDAP server for debugging purposes. Not recommended to be enabled in a production environment.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            realm: (String) When authentication fails the plugin sends WWW-Authenticate header with realm attribute value.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            start_tls: (Boolean) Set it to true to issue StartTLS (Transport Layer Security) extended operation over ldap connection. If the start_tls setting is enabled, ensure the ldaps setting is disabled.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) An optional timeout in milliseconds when waiting for connection with LDAP server.
            updated_at: (Number) Unix epoch when the resource was last updated.
            verify_ldap_host: (Boolean) Set to true to authenticate LDAP server. The server certificate will be verified according to the CA certificates specified by the lua_ssl_trusted_certificate directive.
        importStatements:
            - terraform import kong-gateway_plugin_ldap_auth_advanced.my_kong-gateway_plugin_ldap_auth_advanced ""
    kong-gateway_plugin_loggly:
        subCategory: ""
        description: PluginLoggly Resource
        name: kong-gateway_plugin_loggly
        title: kong-gateway_plugin_loggly Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginloggly
              manifest: |-
                {
                  "config": {
                    "client_errors_severity": "warning",
                    "custom_fields_by_lua": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "host": "...my_host...",
                    "key": "...my_key...",
                    "log_level": "alert",
                    "port": 1920,
                    "server_errors_severity": "err",
                    "successful_severity": "alert",
                    "tags": [
                      "..."
                    ],
                    "timeout": 9.32
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 7
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            client_errors_severity: (String) must be one of ["alert", "crit", "debug", "emerg", "err", "info", "notice", "warning"]
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            custom_fields_by_lua: (Map of String) Lua code as a key-value map
            enabled: (Boolean) Whether the plugin is applied.
            host: (String) A string representing a host name, such as example.com.
            id: (String) The ID of this resource.
            instance_name: (String)
            key: (String)
            log_level: (String) must be one of ["alert", "crit", "debug", "emerg", "err", "info", "notice", "warning"]
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            server_errors_severity: (String) must be one of ["alert", "crit", "debug", "emerg", "err", "info", "notice", "warning"]
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            successful_severity: (String) must be one of ["alert", "crit", "debug", "emerg", "err", "info", "notice", "warning"]
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number)
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_loggly.my_kong-gateway_plugin_loggly ""
    kong-gateway_plugin_mocking:
        subCategory: ""
        description: PluginMocking Resource
        name: kong-gateway_plugin_mocking
        title: kong-gateway_plugin_mocking Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginmocking
              manifest: |-
                {
                  "config": {
                    "api_specification": "...my_api_specification...",
                    "api_specification_filename": "...my_api_specification_filename...",
                    "custom_base_path": "...my_custom_base_path...",
                    "include_base_path": false,
                    "included_status_codes": [
                      1
                    ],
                    "max_delay_time": 8.63,
                    "min_delay_time": 6.83,
                    "random_delay": true,
                    "random_examples": false,
                    "random_status_code": false
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 3,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 2
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            api_specification: (String) The contents of the specification file. You must use this option for hybrid or DB-less mode. You can include the full specification as part of the configuration. In Kong Manager, you can copy and paste the contents of the spec directly into the Config.Api Specification text field.
            api_specification_filename: (String) The path and name of the specification file loaded into Kong Gateway's database. You cannot use this option for DB-less or hybrid mode.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            custom_base_path: (String) The base path to be used for path match evaluation. This value is ignored if include_base_path is set to false.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            include_base_path: (Boolean) Indicates whether to include the base path when performing path match evaluation.
            included_status_codes: (List of Number) A global list of the HTTP status codes that can only be selected and returned.
            instance_name: (String)
            max_delay_time: (Number) The maximum value in seconds of delay time. Set this value when random_delay is enabled and you want to adjust the default. The value must be greater than the min_delay_time.
            min_delay_time: (Number) The minimum value in seconds of delay time. Set this value when random_delay is enabled and you want to adjust the default. The value must be less than the max_delay_time.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            random_delay: (Boolean) Enables a random delay in the mocked response. Introduces delays to simulate real-time response times by APIs.
            random_examples: (Boolean) Randomly selects one example and returns it. This parameter requires the spec to have multiple examples configured.
            random_status_code: (Boolean) Determines whether to randomly select an HTTP status code from the responses of the corresponding API method. The default value is false, which means the minimum HTTP status code is always selected and returned.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_mocking.my_kong-gateway_plugin_mocking ""
    kong-gateway_plugin_mtls_auth:
        subCategory: ""
        description: PluginMtlsAuth Resource
        name: kong-gateway_plugin_mtls_auth
        title: kong-gateway_plugin_mtls_auth Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginmtlsauth
              manifest: |-
                {
                  "config": {
                    "allow_partial_chain": false,
                    "anonymous": "...my_anonymous...",
                    "authenticated_group_by": "CN",
                    "ca_certificates": [
                      "..."
                    ],
                    "cache_ttl": 7.47,
                    "cert_cache_ttl": 4.67,
                    "consumer_by": [
                      "username"
                    ],
                    "default_consumer": "...my_default_consumer...",
                    "http_proxy_host": "...my_http_proxy_host...",
                    "http_proxy_port": 51616,
                    "http_timeout": 2.43,
                    "https_proxy_host": "...my_https_proxy_host...",
                    "https_proxy_port": 35718,
                    "revocation_check_mode": "IGNORE_CA_ERROR",
                    "send_ca_dn": true,
                    "skip_consumer_lookup": true
                  },
                  "created_at": 2,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 2
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_partial_chain: (Boolean) Allow certificate verification with only an intermediate certificate. When this is enabled, you don't need to upload the full chain to Kong Certificates.
            anonymous: (String) An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request fails with an authentication failure 4xx. Note that this value must refer to the consumer id or username attribute, and not its custom_id.
            authenticated_group_by: (String) Certificate property to use as the authenticated group. Valid values are CN (Common Name) or DN (Distinguished Name). Once skip_consumer_lookup is applied, any client with a valid certificate can access the Service/API. To restrict usage to only some of the authenticated users, also add the ACL plugin (not covered here) and create allowed or denied groups of users. must be one of ["CN", "DN"]
            before: (Attributes) (see below for nested schema)
            ca_certificates: (List of String) List of CA Certificates strings to use as Certificate Authorities (CA) when validating a client certificate. At least one is required but you can specify as many as needed. The value of this array is comprised of primary keys (id).
            cache_ttl: (Number) Cache expiry time in seconds.
            cert_cache_ttl: (Number) The length of time in seconds between refreshes of the revocation check status cache.
            config: (Attributes) (see below for nested schema)
            consumer_by: (List of String) Whether to match the subject name of the client-supplied certificate against consumer's username and/or custom_id attribute. If set to [] (the empty array), then auto-matching is disabled.
            created_at: (Number) Unix epoch when the resource was created.
            default_consumer: (String) The UUID or username of the consumer to use when a trusted client certificate is presented but no consumer matches. Note that this value must refer to the consumer id or username attribute, and not its custom_id.
            enabled: (Boolean) Whether the plugin is applied.
            http_proxy_host: (String) A string representing a host name, such as example.com.
            http_proxy_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            http_timeout: (Number) HTTP timeout threshold in milliseconds when communicating with the OCSP server or downloading CRL.
            https_proxy_host: (String) A string representing a host name, such as example.com.
            https_proxy_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            revocation_check_mode: (String) Controls client certificate revocation check behavior. If set to SKIP, no revocation check is performed. If set to IGNORE_CA_ERROR, the plugin respects the revocation status when either OCSP or CRL URL is set, and doesn't fail on network issues. If set to STRICT, the plugin only treats the certificate as valid when it's able to verify the revocation status. must be one of ["IGNORE_CA_ERROR", "SKIP", "STRICT"]
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            send_ca_dn: (Boolean) Sends the distinguished names (DN) of the configured CA list in the TLS handshake message.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            skip_consumer_lookup: (Boolean) Skip consumer lookup once certificate is trusted against the configured CA list.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_mtls_auth.my_kong-gateway_plugin_mtls_auth ""
    kong-gateway_plugin_oas_validation:
        subCategory: ""
        description: PluginOasValidation Resource
        name: kong-gateway_plugin_oas_validation
        title: kong-gateway_plugin_oas_validation Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginoasvalidation
              manifest: |-
                {
                  "config": {
                    "allowed_header_parameters": "...my_allowed_header_parameters...",
                    "api_spec": "...my_api_spec...",
                    "api_spec_encoded": false,
                    "custom_base_path": "...my_custom_base_path...",
                    "header_parameter_check": false,
                    "include_base_path": true,
                    "notify_only_request_validation_failure": true,
                    "notify_only_response_body_validation_failure": false,
                    "query_parameter_check": false,
                    "validate_request_body": true,
                    "validate_request_header_params": true,
                    "validate_request_query_params": true,
                    "validate_request_uri_params": false,
                    "validate_response_body": false,
                    "verbose_response": true
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 3
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allowed_header_parameters: (String) List of header parameters in the request that will be ignored when performing HTTP header validation. These are additional headers added to an API request beyond those defined in the API specification.  For example, you might include the HTTP header User-Agent, which lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent.
            api_spec: (String) The API specification defined using either Swagger or the OpenAPI. This can be either a JSON or YAML based file. If using a YAML file, the spec needs to be URI-Encoded to preserve the YAML format.
            api_spec_encoded: (Boolean) Indicates whether the api_spec is URI-Encoded.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            custom_base_path: (String) The base path to be used for path match evaluation. This value is ignored if include_base_path is set to false.
            enabled: (Boolean) Whether the plugin is applied.
            header_parameter_check: (Boolean) If set to true, checks if HTTP header parameters in the request exist in the API specification.
            id: (String) The ID of this resource.
            include_base_path: (Boolean) Indicates whether to include the base path when performing path match evaluation.
            instance_name: (String)
            name: (String)
            notify_only_request_validation_failure: (Boolean) If set to true, notifications via event hooks are enabled, but request based validation failures don't affect the request flow.
            notify_only_response_body_validation_failure: (Boolean) If set to true, notifications via event hooks are enabled, but response validation failures don't affect the response flow.
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            query_parameter_check: (Boolean) If set to true, checks if query parameters in the request exist in the API specification.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            validate_request_body: (Boolean) If set to true, validates the request body content against the API specification.
            validate_request_header_params: (Boolean) If set to true, validates HTTP header parameters against the API specification.
            validate_request_query_params: (Boolean) If set to true, validates query parameters against the API specification.
            validate_request_uri_params: (Boolean) If set to true, validates URI parameters in the request against the API specification.
            validate_response_body: (Boolean) If set to true, validates the response from the upstream services against the API specification. If validation fails, it results in an HTTP 406 Not Acceptable status code.
            verbose_response: (Boolean) If set to true, returns a detailed error message for invalid requests & responses. This is useful while testing.
        importStatements:
            - terraform import kong-gateway_plugin_oas_validation.my_kong-gateway_plugin_oas_validation ""
    kong-gateway_plugin_oauth2:
        subCategory: ""
        description: PluginOauth2 Resource
        name: kong-gateway_plugin_oauth2
        title: kong-gateway_plugin_oauth2 Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginoauth2
              manifest: |-
                {
                  "config": {
                    "accept_http_if_already_terminated": false,
                    "anonymous": "...my_anonymous...",
                    "auth_header_name": "...my_auth_header_name...",
                    "enable_authorization_code": false,
                    "enable_client_credentials": false,
                    "enable_implicit_grant": false,
                    "enable_password_grant": true,
                    "global_credentials": false,
                    "hide_credentials": false,
                    "mandatory_scope": true,
                    "persistent_refresh_token": false,
                    "pkce": "lax",
                    "provision_key": "...my_provision_key...",
                    "realm": "...my_realm...",
                    "refresh_token_ttl": 88185235.96,
                    "reuse_refresh_token": false,
                    "scopes": [
                      "..."
                    ],
                    "token_expiration": 4.31
                  },
                  "created_at": 6,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 8
                }
        argumentDocs:
            accept_http_if_already_terminated: (Boolean) Accepts HTTPs requests that have already been terminated by a proxy or load balancer.
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            anonymous: (String) An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails.
            auth_header_name: (String) The name of the header that is supposed to carry the access token.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enable_authorization_code: (Boolean) An optional boolean value to enable the three-legged Authorization Code flow (RFC 6742 Section 4.1).
            enable_client_credentials: (Boolean) An optional boolean value to enable the Client Credentials Grant flow (RFC 6742 Section 4.4).
            enable_implicit_grant: (Boolean) An optional boolean value to enable the Implicit Grant flow which allows to provision a token as a result of the authorization process (RFC 6742 Section 4.2).
            enable_password_grant: (Boolean) An optional boolean value to enable the Resource Owner Password Credentials Grant flow (RFC 6742 Section 4.3).
            enabled: (Boolean) Whether the plugin is applied.
            global_credentials: (Boolean) An optional boolean value that allows using the same OAuth credentials generated by the plugin with any other service whose OAuth 2.0 plugin configuration also has config.global_credentials=true.
            hide_credentials: (Boolean) An optional boolean value telling the plugin to show or hide the credential from the upstream service.
            id: (String) The ID of this resource.
            instance_name: (String)
            mandatory_scope: (Boolean) An optional boolean value telling the plugin to require at least one scope to be authorized by the end user.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            persistent_refresh_token: (Boolean)
            pkce: (String) Specifies a mode of how the Proof Key for Code Exchange (PKCE) should be handled by the plugin. must be one of ["lax", "none", "strict"]
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            provision_key: (String) The unique key the plugin has generated when it has been added to the Service.
            realm: (String) When authentication fails the plugin sends WWW-Authenticate header with realm attribute value.
            refresh_token_ttl: (Number) Time-to-live value for data
            reuse_refresh_token: (Boolean) An optional boolean value that indicates whether an OAuth refresh token is reused when refreshing an access token.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            scopes: (List of String) Describes an array of scope names that will be available to the end user. If mandatory_scope is set to true, then scopes are required.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            token_expiration: (Number) An optional integer value telling the plugin how many seconds a token should last, after which the client will need to refresh the token. Set to 0 to disable the expiration.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_oauth2.my_kong-gateway_plugin_oauth2 ""
    kong-gateway_plugin_oauth2_introspection:
        subCategory: ""
        description: PluginOauth2Introspection Resource
        name: kong-gateway_plugin_oauth2_introspection
        title: kong-gateway_plugin_oauth2_introspection Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginoauth2introspection
              manifest: |-
                {
                  "config": {
                    "anonymous": "...my_anonymous...",
                    "authorization_value": "...my_authorization_value...",
                    "consumer_by": "client_id",
                    "custom_claims_forward": [
                      "..."
                    ],
                    "custom_introspection_headers": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "hide_credentials": true,
                    "introspect_request": true,
                    "introspection_url": "...my_introspection_url...",
                    "keepalive": 9,
                    "run_on_preflight": true,
                    "timeout": 4,
                    "token_type_hint": "...my_token_type_hint...",
                    "ttl": 7.64
                  },
                  "created_at": 6,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 3
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            anonymous: (String) An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request fails with an authentication failure 4xx. Note that this value must refer to the consumer id or username attribute, and not its custom_id.
            authorization_value: (String) The value to set as the Authorization header when querying the introspection endpoint. This depends on the OAuth 2.0 server, but usually is the client_id and client_secret as a Base64-encoded Basic Auth string (Basic MG9hNWl...).
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer_by: (String) A string indicating whether to associate OAuth2 username or client_id with the consumer's username. OAuth2 username is mapped to a consumer's username field, while an OAuth2 client_id maps to a consumer's custom_id. must be one of ["client_id", "username"]
            created_at: (Number) Unix epoch when the resource was created.
            custom_claims_forward: (List of String) A list of custom claims to be forwarded from the introspection response to the upstream request. Claims are forwarded in headers with prefix X-Credential-{claim-name}.
            custom_introspection_headers: (Map of String) A list of custom headers to be added in the introspection request.
            enabled: (Boolean) Whether the plugin is applied.
            hide_credentials: (Boolean) An optional boolean value telling the plugin to hide the credential to the upstream API server. It will be removed by Kong before proxying the request.
            id: (String) The ID of this resource.
            instance_name: (String)
            introspect_request: (Boolean) A boolean indicating whether to forward information about the current downstream request to the introspect endpoint. If true, headers X-Request-Path and X-Request-Http-Method will be inserted into the introspect request.
            introspection_url: (String) A string representing a URL, such as https://example.com/path/to/resource?q=search.
            keepalive: (Number) An optional value in milliseconds that defines how long an idle connection lives before being closed.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            run_on_preflight: (Boolean) A boolean value that indicates whether the plugin should run (and try to authenticate) on OPTIONS preflight requests. If set to false, then OPTIONS requests will always be allowed.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) An optional timeout in milliseconds when sending data to the upstream server.
            token_type_hint: (String) The token_type_hint value to associate to introspection requests.
            ttl: (Number) The TTL in seconds for the introspection response. Set to 0 to disable the expiration.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_oauth2_introspection.my_kong-gateway_plugin_oauth2_introspection ""
    kong-gateway_plugin_opa:
        subCategory: ""
        description: PluginOpa Resource
        name: kong-gateway_plugin_opa
        title: kong-gateway_plugin_opa Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginopa
              manifest: |-
                {
                  "config": {
                    "include_body_in_opa_input": true,
                    "include_consumer_in_opa_input": false,
                    "include_parsed_json_body_in_opa_input": true,
                    "include_route_in_opa_input": false,
                    "include_service_in_opa_input": true,
                    "include_uri_captures_in_opa_input": true,
                    "opa_host": "...my_opa_host...",
                    "opa_path": "...my_opa_path...",
                    "opa_port": 42562,
                    "opa_protocol": "https",
                    "ssl_verify": false
                  },
                  "created_at": 3,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 3
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            include_body_in_opa_input: (Boolean)
            include_consumer_in_opa_input: (Boolean) If set to true, the Kong Gateway Consumer object in use for the current request (if any) is included as input to OPA.
            include_parsed_json_body_in_opa_input: (Boolean) If set to true and the Content-Type header of the current request is application/json, the request body will be JSON decoded and the decoded struct is included as input to OPA.
            include_route_in_opa_input: (Boolean) If set to true, the Kong Gateway Route object in use for the current request is included as input to OPA.
            include_service_in_opa_input: (Boolean) If set to true, the Kong Gateway Service object in use for the current request is included as input to OPA.
            include_uri_captures_in_opa_input: (Boolean) If set to true, the regex capture groups captured on the Kong Gateway Route's path field in the current request (if any) are included as input to OPA.
            instance_name: (String)
            name: (String)
            opa_host: (String) A string representing a host name, such as example.com.
            opa_path: (String) A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).
            opa_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            opa_protocol: (String) The protocol to use when talking to Open Policy Agent (OPA) server. Allowed protocols are http and https. must be one of ["http", "https"]
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl_verify: (Boolean) If set to true, the OPA certificate will be verified according to the CA certificates specified in lua_ssl_trusted_certificate.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_opa.my_kong-gateway_plugin_opa ""
    kong-gateway_plugin_openid_connect:
        subCategory: ""
        description: PluginOpenidConnect Resource
        name: kong-gateway_plugin_openid_connect
        title: kong-gateway_plugin_openid_connect Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginopenidconnect
              manifest: |-
                {
                  "config": {
                    "anonymous": "...my_anonymous...",
                    "audience": [
                      "..."
                    ],
                    "audience_claim": [
                      "..."
                    ],
                    "audience_required": [
                      "..."
                    ],
                    "auth_methods": [
                      "kong_oauth2"
                    ],
                    "authenticated_groups_claim": [
                      "..."
                    ],
                    "authorization_cookie_domain": "...my_authorization_cookie_domain...",
                    "authorization_cookie_http_only": true,
                    "authorization_cookie_name": "...my_authorization_cookie_name...",
                    "authorization_cookie_path": "...my_authorization_cookie_path...",
                    "authorization_cookie_same_site": "Lax",
                    "authorization_cookie_secure": false,
                    "authorization_endpoint": "...my_authorization_endpoint...",
                    "authorization_query_args_client": [
                      "..."
                    ],
                    "authorization_query_args_names": [
                      "..."
                    ],
                    "authorization_query_args_values": [
                      "..."
                    ],
                    "authorization_rolling_timeout": 4.31,
                    "bearer_token_cookie_name": "...my_bearer_token_cookie_name...",
                    "bearer_token_param_type": [
                      "cookie"
                    ],
                    "by_username_ignore_case": false,
                    "cache_introspection": true,
                    "cache_token_exchange": true,
                    "cache_tokens": true,
                    "cache_tokens_salt": "...my_cache_tokens_salt...",
                    "cache_ttl": 4.72,
                    "cache_ttl_max": 0.06,
                    "cache_ttl_min": 2.99,
                    "cache_ttl_neg": 5.72,
                    "cache_ttl_resurrect": 9.42,
                    "cache_user_info": false,
                    "claims_forbidden": [
                      "..."
                    ],
                    "client_alg": [
                      "HS512"
                    ],
                    "client_arg": "...my_client_arg...",
                    "client_auth": [
                      "private_key_jwt"
                    ],
                    "client_credentials_param_type": [
                      "query"
                    ],
                    "client_id": [
                      "..."
                    ],
                    "client_jwk": [
                      {
                        "alg": "...my_alg...",
                        "crv": "...my_crv...",
                        "d": "...my_d...",
                        "dp": "...my_dp...",
                        "dq": "...my_dq...",
                        "e": "...my_e...",
                        "issuer": "...my_issuer...",
                        "k": "...my_k...",
                        "key_ops": [
                          "..."
                        ],
                        "kid": "...my_kid...",
                        "kty": "...my_kty...",
                        "n": "...my_n...",
                        "oth": "...my_oth...",
                        "p": "...my_p...",
                        "q": "...my_q...",
                        "qi": "...my_qi...",
                        "r": "...my_r...",
                        "t": "...my_t...",
                        "use": "...my_use...",
                        "x": "...my_x...",
                        "x5c": [
                          "..."
                        ],
                        "x5t": "...my_x5t...",
                        "x5t_number_s256": "...my_x5t_number_s256...",
                        "x5u": "...my_x5u...",
                        "y": "...my_y..."
                      }
                    ],
                    "client_secret": [
                      "..."
                    ],
                    "cluster_cache_redis": {
                      "cluster_max_redirections": 1,
                      "cluster_nodes": [
                        {
                          "ip": "...my_ip...",
                          "port": 57214
                        }
                      ],
                      "connect_timeout": 982158285,
                      "connection_is_proxied": true,
                      "database": 9,
                      "host": "...my_host...",
                      "keepalive_backlog": 246205291,
                      "keepalive_pool_size": 322806210,
                      "password": "...my_password...",
                      "port": 3692,
                      "read_timeout": 1341530044,
                      "send_timeout": 2024267446,
                      "sentinel_master": "...my_sentinel_master...",
                      "sentinel_nodes": [
                        {
                          "host": "...my_host...",
                          "port": 35632
                        }
                      ],
                      "sentinel_password": "...my_sentinel_password...",
                      "sentinel_role": "master",
                      "sentinel_username": "...my_sentinel_username...",
                      "server_name": "...my_server_name...",
                      "ssl": false,
                      "ssl_verify": true,
                      "username": "...my_username..."
                    },
                    "cluster_cache_strategy": "off",
                    "consumer_by": [
                      "custom_id"
                    ],
                    "consumer_claim": [
                      "..."
                    ],
                    "consumer_optional": true,
                    "credential_claim": [
                      "..."
                    ],
                    "disable_session": [
                      "bearer"
                    ],
                    "discovery_headers_names": [
                      "..."
                    ],
                    "discovery_headers_values": [
                      "..."
                    ],
                    "display_errors": true,
                    "domains": [
                      "..."
                    ],
                    "downstream_access_token_header": "...my_downstream_access_token_header...",
                    "downstream_access_token_jwk_header": "...my_downstream_access_token_jwk_header...",
                    "downstream_headers_claims": [
                      "..."
                    ],
                    "downstream_headers_names": [
                      "..."
                    ],
                    "downstream_id_token_header": "...my_downstream_id_token_header...",
                    "downstream_id_token_jwk_header": "...my_downstream_id_token_jwk_header...",
                    "downstream_introspection_header": "...my_downstream_introspection_header...",
                    "downstream_introspection_jwt_header": "...my_downstream_introspection_jwt_header...",
                    "downstream_refresh_token_header": "...my_downstream_refresh_token_header...",
                    "downstream_session_id_header": "...my_downstream_session_id_header...",
                    "downstream_user_info_header": "...my_downstream_user_info_header...",
                    "downstream_user_info_jwt_header": "...my_downstream_user_info_jwt_header...",
                    "dpop_proof_lifetime": 0.25,
                    "dpop_use_nonce": true,
                    "enable_hs_signatures": false,
                    "end_session_endpoint": "...my_end_session_endpoint...",
                    "expose_error_code": false,
                    "extra_jwks_uris": [
                      "..."
                    ],
                    "forbidden_destroy_session": true,
                    "forbidden_error_message": "...my_forbidden_error_message...",
                    "forbidden_redirect_uri": [
                      "..."
                    ],
                    "groups_claim": [
                      "..."
                    ],
                    "groups_required": [
                      "..."
                    ],
                    "hide_credentials": true,
                    "http_proxy": "...my_http_proxy...",
                    "http_proxy_authorization": "...my_http_proxy_authorization...",
                    "http_version": 2.58,
                    "https_proxy": "...my_https_proxy...",
                    "https_proxy_authorization": "...my_https_proxy_authorization...",
                    "id_token_param_name": "...my_id_token_param_name...",
                    "id_token_param_type": [
                      "query"
                    ],
                    "ignore_signature": [
                      "userinfo"
                    ],
                    "introspect_jwt_tokens": true,
                    "introspection_accept": "application/json",
                    "introspection_check_active": false,
                    "introspection_endpoint": "...my_introspection_endpoint...",
                    "introspection_endpoint_auth_method": "client_secret_post",
                    "introspection_headers_client": [
                      "..."
                    ],
                    "introspection_headers_names": [
                      "..."
                    ],
                    "introspection_headers_values": [
                      "..."
                    ],
                    "introspection_hint": "...my_introspection_hint...",
                    "introspection_post_args_client": [
                      "..."
                    ],
                    "introspection_post_args_client_headers": [
                      "..."
                    ],
                    "introspection_post_args_names": [
                      "..."
                    ],
                    "introspection_post_args_values": [
                      "..."
                    ],
                    "introspection_token_param_name": "...my_introspection_token_param_name...",
                    "issuer": "...my_issuer...",
                    "issuers_allowed": [
                      "..."
                    ],
                    "jwt_session_claim": "...my_jwt_session_claim...",
                    "jwt_session_cookie": "...my_jwt_session_cookie...",
                    "keepalive": false,
                    "leeway": 5.19,
                    "login_action": "response",
                    "login_methods": [
                      "authorization_code"
                    ],
                    "login_redirect_mode": "query",
                    "login_redirect_uri": [
                      "..."
                    ],
                    "login_tokens": [
                      "refresh_token"
                    ],
                    "logout_methods": [
                      "DELETE"
                    ],
                    "logout_post_arg": "...my_logout_post_arg...",
                    "logout_query_arg": "...my_logout_query_arg...",
                    "logout_redirect_uri": [
                      "..."
                    ],
                    "logout_revoke": false,
                    "logout_revoke_access_token": true,
                    "logout_revoke_refresh_token": false,
                    "logout_uri_suffix": "...my_logout_uri_suffix...",
                    "max_age": 6.65,
                    "mtls_introspection_endpoint": "...my_mtls_introspection_endpoint...",
                    "mtls_revocation_endpoint": "...my_mtls_revocation_endpoint...",
                    "mtls_token_endpoint": "...my_mtls_token_endpoint...",
                    "no_proxy": "...my_no_proxy...",
                    "password_param_type": [
                      "query"
                    ],
                    "preserve_query_args": true,
                    "proof_of_possession_auth_methods_validation": false,
                    "proof_of_possession_dpop": "strict",
                    "proof_of_possession_mtls": "strict",
                    "pushed_authorization_request_endpoint": "...my_pushed_authorization_request_endpoint...",
                    "pushed_authorization_request_endpoint_auth_method": "client_secret_jwt",
                    "redirect_uri": [
                      "..."
                    ],
                    "redis": {
                      "cluster_max_redirections": 6,
                      "cluster_nodes": [
                        {
                          "ip": "...my_ip...",
                          "port": 23549
                        }
                      ],
                      "connect_timeout": 1702562507,
                      "connection_is_proxied": false,
                      "database": 5,
                      "host": "...my_host...",
                      "keepalive_backlog": 1466734250,
                      "keepalive_pool_size": 1177237243,
                      "password": "...my_password...",
                      "port": 31761,
                      "prefix": "...my_prefix...",
                      "read_timeout": 1817869754,
                      "send_timeout": 1963309234,
                      "sentinel_master": "...my_sentinel_master...",
                      "sentinel_nodes": [
                        {
                          "host": "...my_host...",
                          "port": 41757
                        }
                      ],
                      "sentinel_password": "...my_sentinel_password...",
                      "sentinel_role": "slave",
                      "sentinel_username": "...my_sentinel_username...",
                      "server_name": "...my_server_name...",
                      "socket": "...my_socket...",
                      "ssl": true,
                      "ssl_verify": false,
                      "username": "...my_username..."
                    },
                    "rediscovery_lifetime": 6.26,
                    "refresh_token_param_name": "...my_refresh_token_param_name...",
                    "refresh_token_param_type": [
                      "header"
                    ],
                    "refresh_tokens": true,
                    "require_proof_key_for_code_exchange": false,
                    "require_pushed_authorization_requests": false,
                    "require_signed_request_object": true,
                    "resolve_distributed_claims": false,
                    "response_mode": "fragment.jwt",
                    "response_type": [
                      "..."
                    ],
                    "reverify": true,
                    "revocation_endpoint": "...my_revocation_endpoint...",
                    "revocation_endpoint_auth_method": "client_secret_post",
                    "revocation_token_param_name": "...my_revocation_token_param_name...",
                    "roles_claim": [
                      "..."
                    ],
                    "roles_required": [
                      "..."
                    ],
                    "run_on_preflight": false,
                    "scopes": [
                      "..."
                    ],
                    "scopes_claim": [
                      "..."
                    ],
                    "scopes_required": [
                      "..."
                    ],
                    "search_user_info": false,
                    "session_absolute_timeout": 2.42,
                    "session_audience": "...my_session_audience...",
                    "session_cookie_domain": "...my_session_cookie_domain...",
                    "session_cookie_http_only": false,
                    "session_cookie_name": "...my_session_cookie_name...",
                    "session_cookie_path": "...my_session_cookie_path...",
                    "session_cookie_same_site": "Strict",
                    "session_cookie_secure": false,
                    "session_enforce_same_subject": false,
                    "session_hash_storage_key": true,
                    "session_hash_subject": true,
                    "session_idling_timeout": 1.94,
                    "session_memcached_host": "...my_session_memcached_host...",
                    "session_memcached_port": 4879,
                    "session_memcached_prefix": "...my_session_memcached_prefix...",
                    "session_memcached_socket": "...my_session_memcached_socket...",
                    "session_remember": false,
                    "session_remember_absolute_timeout": 6.53,
                    "session_remember_cookie_name": "...my_session_remember_cookie_name...",
                    "session_remember_rolling_timeout": 4.66,
                    "session_request_headers": [
                      "subject"
                    ],
                    "session_response_headers": [
                      "audience"
                    ],
                    "session_rolling_timeout": 6.97,
                    "session_secret": "...my_session_secret...",
                    "session_storage": "redis",
                    "session_store_metadata": false,
                    "ssl_verify": true,
                    "timeout": 4.71,
                    "tls_client_auth_cert_id": "...my_tls_client_auth_cert_id...",
                    "tls_client_auth_ssl_verify": false,
                    "token_cache_key_include_scope": true,
                    "token_endpoint": "...my_token_endpoint...",
                    "token_endpoint_auth_method": "private_key_jwt",
                    "token_exchange_endpoint": "...my_token_exchange_endpoint...",
                    "token_headers_client": [
                      "..."
                    ],
                    "token_headers_grants": [
                      "client_credentials"
                    ],
                    "token_headers_names": [
                      "..."
                    ],
                    "token_headers_prefix": "...my_token_headers_prefix...",
                    "token_headers_replay": [
                      "..."
                    ],
                    "token_headers_values": [
                      "..."
                    ],
                    "token_post_args_client": [
                      "..."
                    ],
                    "token_post_args_names": [
                      "..."
                    ],
                    "token_post_args_values": [
                      "..."
                    ],
                    "unauthorized_destroy_session": true,
                    "unauthorized_error_message": "...my_unauthorized_error_message...",
                    "unauthorized_redirect_uri": [
                      "..."
                    ],
                    "unexpected_redirect_uri": [
                      "..."
                    ],
                    "upstream_access_token_header": "...my_upstream_access_token_header...",
                    "upstream_access_token_jwk_header": "...my_upstream_access_token_jwk_header...",
                    "upstream_headers_claims": [
                      "..."
                    ],
                    "upstream_headers_names": [
                      "..."
                    ],
                    "upstream_id_token_header": "...my_upstream_id_token_header...",
                    "upstream_id_token_jwk_header": "...my_upstream_id_token_jwk_header...",
                    "upstream_introspection_header": "...my_upstream_introspection_header...",
                    "upstream_introspection_jwt_header": "...my_upstream_introspection_jwt_header...",
                    "upstream_refresh_token_header": "...my_upstream_refresh_token_header...",
                    "upstream_session_id_header": "...my_upstream_session_id_header...",
                    "upstream_user_info_header": "...my_upstream_user_info_header...",
                    "upstream_user_info_jwt_header": "...my_upstream_user_info_jwt_header...",
                    "userinfo_accept": "application/jwt",
                    "userinfo_endpoint": "...my_userinfo_endpoint...",
                    "userinfo_headers_client": [
                      "..."
                    ],
                    "userinfo_headers_names": [
                      "..."
                    ],
                    "userinfo_headers_values": [
                      "..."
                    ],
                    "userinfo_query_args_client": [
                      "..."
                    ],
                    "userinfo_query_args_names": [
                      "..."
                    ],
                    "userinfo_query_args_values": [
                      "..."
                    ],
                    "using_pseudo_issuer": true,
                    "verify_claims": false,
                    "verify_nonce": true,
                    "verify_parameters": true,
                    "verify_signature": true
                  },
                  "created_at": 3,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 7
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            alg: (String)
            anonymous: (String) An optional string (consumer UUID or username) value that functions as an “anonymous” consumer if authentication fails. If empty (default null), requests that fail authentication will return a 4xx HTTP status code. This value must refer to the consumer id or username attribute, and not its custom_id.
            audience: (List of String) The audience passed to the authorization endpoint.
            audience_claim: (List of String) The claim that contains the audience. If multiple values are set, it means the claim is inside a nested object of the token payload.
            audience_required: (List of String) The audiences (audience_claim claim) required to be present in the access token (or introspection results) for successful authorization. This config parameter works in both AND / OR cases.
            auth_methods: (List of String) Types of credentials/grants to enable.
            authenticated_groups_claim: (List of String) The claim that contains authenticated groups. This setting can be used together with ACL plugin, but it also enables IdP managed groups with other applications and integrations. If multiple values are set, it means the claim is inside a nested object of the token payload.
            authorization_cookie_domain: (String) The authorization cookie Domain flag.
            authorization_cookie_http_only: (Boolean) Forbids JavaScript from accessing the cookie, for example, through the Document.cookie property.
            authorization_cookie_name: (String) The authorization cookie name.
            authorization_cookie_path: (String) The authorization cookie Path flag.
            authorization_cookie_same_site: (String) Controls whether a cookie is sent with cross-origin requests, providing some protection against cross-site request forgery attacks. must be one of ["Default", "Lax", "None", "Strict"]
            authorization_cookie_secure: '(Boolean) Cookie is only sent to the server when a request is made with the https: scheme (except on localhost), and therefore is more resistant to man-in-the-middle attacks.'
            authorization_endpoint: (String) The authorization endpoint. If set it overrides the value in authorization_endpoint returned by the discovery endpoint.
            authorization_query_args_client: (List of String) Extra query arguments passed from the client to the authorization endpoint.
            authorization_query_args_names: (List of String) Extra query argument names passed to the authorization endpoint.
            authorization_query_args_values: (List of String) Extra query argument values passed to the authorization endpoint.
            authorization_rolling_timeout: (Number) Specifies how long the session used for the authorization code flow can be used in seconds until it needs to be renewed. 0 disables the checks and rolling.
            bearer_token_cookie_name: (String) The name of the cookie in which the bearer token is passed.
            bearer_token_param_type: '(List of String) Where to look for the bearer token: - header: search the Authorization, access-token, and x-access-token HTTP headers - query: search the URL''s query string - body: search the HTTP request body - cookie: search the HTTP request cookies specified with config.bearer_token_cookie_name.'
            before: (Attributes) (see below for nested schema)
            by_username_ignore_case: (Boolean) If consumer_by is set to username, specify whether username can match consumers case-insensitively.
            cache_introspection: (Boolean) Cache the introspection endpoint requests.
            cache_token_exchange: (Boolean) Cache the token exchange endpoint requests.
            cache_tokens: (Boolean) Cache the token endpoint requests.
            cache_tokens_salt: (String) Salt used for generating the cache key that is used for caching the token endpoint requests.
            cache_ttl: (Number) The default cache ttl in seconds that is used in case the cached object does not specify the expiry.
            cache_ttl_max: (Number) The maximum cache ttl in seconds (enforced).
            cache_ttl_min: (Number) The minimum cache ttl in seconds (enforced).
            cache_ttl_neg: (Number) The negative cache ttl in seconds.
            cache_ttl_resurrect: (Number) The resurrection ttl in seconds.
            cache_user_info: (Boolean) Cache the user info requests.
            claims_forbidden: (List of String) If given, these claims are forbidden in the token payload.
            client_alg: (List of String) The algorithm to use for client_secret_jwt (only HS***) or private_key_jwt authentication.
            client_arg: (String) The client to use for this request (the selection is made with a request parameter with the same name).
            client_auth: '(List of String) The default OpenID Connect client authentication method is ''client_secret_basic'' (using ''Authorization: Basic'' header), ''client_secret_post'' (credentials in body), ''client_secret_jwt'' (signed client assertion in body), ''private_key_jwt'' (private key-signed assertion), ''tls_client_auth'' (client certificate), ''self_signed_tls_client_auth'' (self-signed client certificate), and ''none'' (no authentication).'
            client_credentials_param_type: '(List of String) Where to look for the client credentials: - header: search the HTTP headers - query: search the URL''s query string - body: search from the HTTP request body.'
            client_id: (List of String) The client id(s) that the plugin uses when it calls authenticated endpoints on the identity provider.
            client_jwk: (Attributes List) The JWK used for the private_key_jwt authentication. (see below for nested schema)
            client_secret: (List of String) The client secret.
            cluster_cache_redis: (Attributes) (see below for nested schema)
            cluster_cache_strategy: (String) The strategy to use for the cluster cache. If set, the plugin will share cache with nodes configured with the same strategy backend. Currentlly only introspection cache is shared. must be one of ["off", "redis"]
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            consumer_by: '(List of String) Consumer fields used for mapping: - id: try to find the matching Consumer by id - username: try to find the matching Consumer by username - custom_id: try to find the matching Consumer by custom_id.'
            consumer_claim: (List of String) The claim used for consumer mapping. If multiple values are set, it means the claim is inside a nested object of the token payload.
            consumer_optional: (Boolean) Do not terminate the request if consumer mapping fails.
            created_at: (Number) Unix epoch when the resource was created.
            credential_claim: (List of String) The claim used to derive virtual credentials (e.g. to be consumed by the rate-limiting plugin), in case the consumer mapping is not used. If multiple values are set, it means the claim is inside a nested object of the token payload.
            crv: (String)
            d: (String)
            database: (Number) Database to use for the Redis connection when using the redis strategy
            disable_session: (List of String) Disable issuing the session cookie with the specified grants.
            discovery_headers_names: (List of String) Extra header names passed to the discovery endpoint.
            discovery_headers_values: (List of String) Extra header values passed to the discovery endpoint.
            display_errors: (Boolean) Display errors on failure responses.
            domains: (List of String) The allowed values for the hd claim.
            downstream_access_token_header: (String) The downstream access token header.
            downstream_access_token_jwk_header: (String) The downstream access token JWK header.
            downstream_headers_claims: (List of String) The downstream header claims. If multiple values are set, it means the claim is inside a nested object of the token payload.
            downstream_headers_names: (List of String) The downstream header names for the claim values.
            downstream_id_token_header: (String) The downstream id token header.
            downstream_id_token_jwk_header: (String) The downstream id token JWK header.
            downstream_introspection_header: (String) The downstream introspection header.
            downstream_introspection_jwt_header: (String) The downstream introspection JWT header.
            downstream_refresh_token_header: (String) The downstream refresh token header.
            downstream_session_id_header: (String) The downstream session id header.
            downstream_user_info_header: (String) The downstream user info header.
            downstream_user_info_jwt_header: (String) The downstream user info JWT header (in case the user info returns a JWT response).
            dp: (String)
            dpop_proof_lifetime: (Number) Specifies the lifetime in seconds of the DPoP proof. It determines how long the same proof can be used after creation. The creation time is determined by the nonce creation time if a nonce is used, and the iat claim otherwise.
            dpop_use_nonce: (Boolean) Specifies whether to challenge the client with a nonce value for DPoP proof. When enabled it will also be used to calculate the DPoP proof lifetime.
            dq: (String)
            e: (String)
            enable_hs_signatures: (Boolean) Enable shared secret, for example, HS256, signatures (when disabled they will not be accepted).
            enabled: (Boolean) Whether the plugin is applied.
            end_session_endpoint: (String) The end session endpoint. If set it overrides the value in end_session_endpoint returned by the discovery endpoint.
            expose_error_code: (Boolean) Specifies whether to expose the error code header, as defined in RFC 6750. If an authorization request fails, this header is sent in the response. Set to false to disable.
            extra_jwks_uris: (List of String) JWKS URIs whose public keys are trusted (in addition to the keys found with the discovery).
            forbidden_destroy_session: (Boolean) Destroy any active session for the forbidden requests.
            forbidden_error_message: (String) The error message for the forbidden requests (when not using the redirection).
            forbidden_redirect_uri: (List of String) Where to redirect the client on forbidden requests.
            groups_claim: (List of String) The claim that contains the groups. If multiple values are set, it means the claim is inside a nested object of the token payload.
            groups_required: (List of String) The groups (groups_claim claim) required to be present in the access token (or introspection results) for successful authorization. This config parameter works in both AND / OR cases.
            hide_credentials: (Boolean) Remove the credentials used for authentication from the request. If multiple credentials are sent with the same request, the plugin will remove those that were used for successful authentication.
            host: (String) A string representing a host name, such as example.com.
            http_proxy: (String) The HTTP proxy.
            http_proxy_authorization: (String) The HTTP proxy authorization.
            http_version: '(Number) The HTTP version used for the requests by this plugin: - 1.1: HTTP 1.1 (the default) - 1.0: HTTP 1.0.'
            https_proxy: (String) The HTTPS proxy.
            https_proxy_authorization: (String) The HTTPS proxy authorization.
            id: (String) The ID of this resource.
            id_token_param_name: (String) The name of the parameter used to pass the id token.
            id_token_param_type: '(List of String) Where to look for the id token: - header: search the HTTP headers - query: search the URL''s query string - body: search the HTTP request body.'
            ignore_signature: '(List of String) Skip the token signature verification on certain grants: - password: OAuth password grant - client_credentials: OAuth client credentials grant - authorization_code: authorization code flow - refresh_token: OAuth refresh token grant - session: session cookie authentication - introspection: OAuth introspection - userinfo: OpenID Connect user info endpoint authentication.'
            instance_name: (String)
            introspect_jwt_tokens: (Boolean) Specifies whether to introspect the JWT access tokens (can be used to check for revocations).
            introspection_accept: '(String) The value of Accept header for introspection requests: - application/json: introspection response as JSON - application/token-introspection+jwt: introspection response as JWT (from the current IETF draft document) - application/jwt: introspection response as JWT (from the obsolete IETF draft document). must be one of ["application/json", "application/jwt", "application/token-introspection+jwt"]'
            introspection_check_active: (Boolean) Check that the introspection response has an active claim with a value of true.
            introspection_endpoint: (String) The introspection endpoint. If set it overrides the value in introspection_endpoint returned by the discovery endpoint.
            introspection_endpoint_auth_method: '(String) The introspection endpoint authentication method: : client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt, tls_client_auth, self_signed_tls_client_auth, or none: do not authenticate. must be one of ["client_secret_basic", "client_secret_jwt", "client_secret_post", "none", "private_key_jwt", "self_signed_tls_client_auth", "tls_client_auth"]'
            introspection_headers_client: (List of String) Extra headers passed from the client to the introspection endpoint.
            introspection_headers_names: (List of String) Extra header names passed to the introspection endpoint.
            introspection_headers_values: (List of String) Extra header values passed to the introspection endpoint.
            introspection_hint: (String) Introspection hint parameter value passed to the introspection endpoint.
            introspection_post_args_client: (List of String) Extra post arguments passed from the client to the introspection endpoint.
            introspection_post_args_client_headers: (List of String) Extra post arguments passed from the client headers to the introspection endpoint.
            introspection_post_args_names: (List of String) Extra post argument names passed to the introspection endpoint.
            introspection_post_args_values: (List of String) Extra post argument values passed to the introspection endpoint.
            introspection_token_param_name: (String) Designate token's parameter name for introspection.
            ip: (String) A string representing a host name, such as example.com.
            issuer: (String) The discovery endpoint (or the issuer identifier). When there is no discovery endpoint, please also configure config.using_pseudo_issuer=true.
            issuers_allowed: (List of String) The issuers allowed to be present in the tokens (iss claim).
            jwt_session_claim: (String) The claim to match against the JWT session cookie.
            jwt_session_cookie: (String) The name of the JWT session cookie.
            k: (String)
            keepalive: (Boolean) Use keepalive with the HTTP client.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            key_ops: (List of String)
            kid: (String)
            kty: (String)
            leeway: (Number) Defines leeway time (in seconds) for auth_time, exp, iat, and nbf claims
            login_action: '(String) What to do after successful login: - upstream: proxy request to upstream service - response: terminate request with a response - redirect: redirect to a different location. must be one of ["redirect", "response", "upstream"]'
            login_methods: (List of String) Enable login functionality with specified grants.
            login_redirect_mode: '(String) Where to place login_tokens when using redirect login_action: - query: place tokens in query string - fragment: place tokens in url fragment (not readable by servers). must be one of ["fragment", "query"]'
            login_redirect_uri: (List of String) Where to redirect the client when login_action is set to redirect.
            login_tokens: '(List of String) What tokens to include in response body or redirect query string or fragment: - id_token: include id token - access_token: include access token - refresh_token: include refresh token - tokens: include the full token endpoint response - introspection: include introspection response.'
            logout_methods: '(List of String) The request methods that can activate the logout: - POST: HTTP POST method - GET: HTTP GET method - DELETE: HTTP DELETE method.'
            logout_post_arg: (String) The request body argument that activates the logout.
            logout_query_arg: (String) The request query argument that activates the logout.
            logout_redirect_uri: (List of String) Where to redirect the client after the logout.
            logout_revoke: (Boolean) Revoke tokens as part of the logout.
            logout_revoke_access_token: (Boolean) Revoke the access token as part of the logout. Requires logout_revoke to be set to true.
            logout_revoke_refresh_token: (Boolean) Revoke the refresh token as part of the logout. Requires logout_revoke to be set to true.
            logout_uri_suffix: (String) The request URI suffix that activates the logout.
            max_age: (Number) The maximum age (in seconds) compared to the auth_time claim.
            mtls_introspection_endpoint: (String) Alias for the introspection endpoint to be used for mTLS client authentication. If set it overrides the value in mtls_endpoint_aliases returned by the discovery endpoint.
            mtls_revocation_endpoint: (String) Alias for the introspection endpoint to be used for mTLS client authentication. If set it overrides the value in mtls_endpoint_aliases returned by the discovery endpoint.
            mtls_token_endpoint: (String) Alias for the token endpoint to be used for mTLS client authentication. If set it overrides the value in mtls_endpoint_aliases returned by the discovery endpoint.
            "n": (String)
            name: (String)
            no_proxy: (String) Do not use proxy with these hosts.
            ordering: (Attributes) (see below for nested schema)
            oth: (String)
            p: (String)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            password_param_type: '(List of String) Where to look for the username and password: - header: search the HTTP headers - query: search the URL''s query string - body: search the HTTP request body.'
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            prefix: (String) The Redis session key prefix.
            preserve_query_args: (Boolean) With this parameter, you can preserve request query arguments even when doing authorization code flow.
            proof_of_possession_auth_methods_validation: (Boolean) If set to true, only the auth_methods that are compatible with Proof of Possession (PoP) can be configured when PoP is enabled. If set to false, all auth_methods will be configurable and PoP checks will be silently skipped for those auth_methods that are not compatible with PoP.
            proof_of_possession_dpop: (String) Enable Demonstrating Proof-of-Possession (DPoP). If set to strict, all request are verified despite the presence of the DPoP key claim (cnf.jkt). If set to optional, only tokens bound with DPoP's key are verified with the proof. must be one of ["off", "optional", "strict"]
            proof_of_possession_mtls: '(String) Enable mtls proof of possession. If set to strict, all tokens (from supported auth_methods: bearer, introspection, and session granted with bearer or introspection) are verified, if set to optional, only tokens that contain the certificate hash claim are verified. If the verification fails, the request will be rejected with 401. must be one of ["off", "optional", "strict"]'
            protocols: (List of String) A set of strings representing HTTP protocols.
            pushed_authorization_request_endpoint: (String) The pushed authorization endpoint. If set it overrides the value in pushed_authorization_request_endpoint returned by the discovery endpoint.
            pushed_authorization_request_endpoint_auth_method: '(String) The pushed authorization request endpoint authentication method: client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt, tls_client_auth, self_signed_tls_client_auth, or none: do not authenticate. must be one of ["client_secret_basic", "client_secret_jwt", "client_secret_post", "none", "private_key_jwt", "self_signed_tls_client_auth", "tls_client_auth"]'
            q: (String)
            qi: (String)
            r: (String)
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redirect_uri: (List of String) The redirect URI passed to the authorization and token endpoints.
            redis: (Attributes) (see below for nested schema)
            rediscovery_lifetime: (Number) Specifies how long (in seconds) the plugin waits between discovery attempts. Discovery is still triggered on an as-needed basis.
            refresh_token_param_name: (String) The name of the parameter used to pass the refresh token.
            refresh_token_param_type: '(List of String) Where to look for the refresh token: - header: search the HTTP headers - query: search the URL''s query string - body: search the HTTP request body.'
            refresh_tokens: (Boolean) Specifies whether the plugin should try to refresh (soon to be) expired access tokens if the plugin has a refresh_token available.
            require_proof_key_for_code_exchange: (Boolean) Forcibly enable or disable the proof key for code exchange. When not set the value is determined through the discovery using the value of code_challenge_methods_supported, and enabled automatically (in case the code_challenge_methods_supported is missing, the PKCE will not be enabled).
            require_pushed_authorization_requests: (Boolean) Forcibly enable or disable the pushed authorization requests. When not set the value is determined through the discovery using the value of require_pushed_authorization_requests (which defaults to false).
            require_signed_request_object: (Boolean) Forcibly enable or disable the usage of signed request object on authorization or pushed authorization endpoint. When not set the value is determined through the discovery using the value of require_signed_request_object, and enabled automatically (in case the require_signed_request_object is missing, the feature will not be enabled).
            resolve_distributed_claims: (Boolean) Distributed claims are represented by the _claim_names and _claim_sources members of the JSON object containing the claims. If this parameter is set to true, the plugin explicitly resolves these distributed claims.
            response_mode: '(String) Response mode passed to the authorization endpoint: - query: for parameters in query string - form_post: for parameters in request body - fragment: for parameters in uri fragment (rarely useful as the plugin itself cannot read it) - query.jwt, form_post.jwt, fragment.jwt: similar to query, form_post and fragment but the parameters are encoded in a JWT - jwt: shortcut that indicates the default encoding for the requested response type. must be one of ["form_post", "form_post.jwt", "fragment", "fragment.jwt", "jwt", "query", "query.jwt"]'
            response_type: (List of String) The response type passed to the authorization endpoint.
            reverify: (Boolean) Specifies whether to always verify tokens stored in the session.
            revocation_endpoint: (String) The revocation endpoint. If set it overrides the value in revocation_endpoint returned by the discovery endpoint.
            revocation_endpoint_auth_method: '(String) The revocation endpoint authentication method: : client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt, tls_client_auth, self_signed_tls_client_auth, or none: do not authenticate. must be one of ["client_secret_basic", "client_secret_jwt", "client_secret_post", "none", "private_key_jwt", "self_signed_tls_client_auth", "tls_client_auth"]'
            revocation_token_param_name: (String) Designate token's parameter name for revocation.
            roles_claim: (List of String) The claim that contains the roles. If multiple values are set, it means the claim is inside a nested object of the token payload.
            roles_required: (List of String) The roles (roles_claim claim) required to be present in the access token (or introspection results) for successful authorization. This config parameter works in both AND / OR cases.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            run_on_preflight: (Boolean) Specifies whether to run this plugin on pre-flight (OPTIONS) requests.
            scopes: (List of String) The scopes passed to the authorization and token endpoints.
            scopes_claim: (List of String) The claim that contains the scopes. If multiple values are set, it means the claim is inside a nested object of the token payload.
            scopes_required: (List of String) The scopes (scopes_claim claim) required to be present in the access token (or introspection results) for successful authorization. This config parameter works in both AND / OR cases.
            search_user_info: (Boolean) Specify whether to use the user info endpoint to get additional claims for consumer mapping, credential mapping, authenticated groups, and upstream and downstream headers.
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            session_absolute_timeout: (Number) Limits how long the session can be renewed in seconds, until re-authentication is required. 0 disables the checks.
            session_audience: (String) The session audience, which is the intended target application. For example "my-application".
            session_cookie_domain: (String) The session cookie Domain flag.
            session_cookie_http_only: (Boolean) Forbids JavaScript from accessing the cookie, for example, through the Document.cookie property.
            session_cookie_name: (String) The session cookie name.
            session_cookie_path: (String) The session cookie Path flag.
            session_cookie_same_site: (String) Controls whether a cookie is sent with cross-origin requests, providing some protection against cross-site request forgery attacks. must be one of ["Default", "Lax", "None", "Strict"]
            session_cookie_secure: '(Boolean) Cookie is only sent to the server when a request is made with the https: scheme (except on localhost), and therefore is more resistant to man-in-the-middle attacks.'
            session_enforce_same_subject: (Boolean) When set to true, audiences are forced to share the same subject.
            session_hash_storage_key: (Boolean) When set to true, the storage key (session ID) is hashed for extra security. Hashing the storage key means it is impossible to decrypt data from the storage without a cookie.
            session_hash_subject: (Boolean) When set to true, the value of subject is hashed before being stored. Only applies when session_store_metadata is enabled.
            session_idling_timeout: (Number) Specifies how long the session can be inactive until it is considered invalid in seconds. 0 disables the checks and touching.
            session_memcached_host: (String) The memcached host.
            session_memcached_port: (Number) The memcached port.
            session_memcached_prefix: (String) The memcached session key prefix.
            session_memcached_socket: (String) The memcached unix socket path.
            session_remember: (Boolean) Enables or disables persistent sessions.
            session_remember_absolute_timeout: (Number) Limits how long the persistent session can be renewed in seconds, until re-authentication is required. 0 disables the checks.
            session_remember_cookie_name: (String) Persistent session cookie name. Use with the remember configuration parameter.
            session_remember_rolling_timeout: (Number) Specifies how long the persistent session is considered valid in seconds. 0 disables the checks and rolling.
            session_request_headers: (List of String) Set of headers to send to upstream, use id, audience, subject, timeout, idling-timeout, rolling-timeout, absolute-timeout. E.g. [ "id", "timeout" ] will set Session-Id and Session-Timeout request headers.
            session_response_headers: (List of String) Set of headers to send to downstream, use id, audience, subject, timeout, idling-timeout, rolling-timeout, absolute-timeout. E.g. [ "id", "timeout" ] will set Session-Id and Session-Timeout response headers.
            session_rolling_timeout: (Number) Specifies how long the session can be used in seconds until it needs to be renewed. 0 disables the checks and rolling.
            session_secret: (String) The session secret.
            session_storage: '(String) The session storage for session data: - cookie: stores session data with the session cookie (the session cannot be invalidated or revoked without changing session secret, but is stateless, and doesn''t require a database) - memcache: stores session data in memcached - redis: stores session data in Redis. must be one of ["cookie", "memcache", "memcached", "redis"]'
            session_store_metadata: (Boolean) Configures whether or not session metadata should be stored. This metadata includes information about the active sessions for a specific audience belonging to a specific subject.
            socket: (String) The Redis unix socket path.
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_verify: (Boolean) Verify identity provider server certificate. If set to true, the plugin uses the CA certificate set in the kong.conf config parameter lua_ssl_trusted_certificate.
            t: (String)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) Network IO timeout in milliseconds.
            tls_client_auth_cert_id: (String) ID of the Certificate entity representing the client certificate to use for mTLS client authentication for connections between Kong and the Auth Server.
            tls_client_auth_ssl_verify: (Boolean) Verify identity provider server certificate during mTLS client authentication.
            token_cache_key_include_scope: (Boolean) Include the scope in the token cache key, so token with different scopes are considered diffrent tokens.
            token_endpoint: (String) The token endpoint. If set it overrides the value in token_endpoint returned by the discovery endpoint.
            token_endpoint_auth_method: '(String) The token endpoint authentication method: client_secret_basic, client_secret_post, client_secret_jwt, private_key_jwt, tls_client_auth, self_signed_tls_client_auth, or none: do not authenticate. must be one of ["client_secret_basic", "client_secret_jwt", "client_secret_post", "none", "private_key_jwt", "self_signed_tls_client_auth", "tls_client_auth"]'
            token_exchange_endpoint: (String) The token exchange endpoint.
            token_headers_client: (List of String) Extra headers passed from the client to the token endpoint.
            token_headers_grants: '(List of String) Enable the sending of the token endpoint response headers only with certain grants: - password: with OAuth password grant - client_credentials: with OAuth client credentials grant - authorization_code: with authorization code flow - refresh_token with refresh token grant.'
            token_headers_names: (List of String) Extra header names passed to the token endpoint.
            token_headers_prefix: (String) Add a prefix to the token endpoint response headers before forwarding them to the downstream client.
            token_headers_replay: (List of String) The names of token endpoint response headers to forward to the downstream client.
            token_headers_values: (List of String) Extra header values passed to the token endpoint.
            token_post_args_client: '(List of String) Pass extra arguments from the client to the OpenID-Connect plugin. If arguments exist, the client can pass them using: - Query parameters - Request Body - Request Header  This parameter can be used with scope values, like this:  config.token_post_args_client=scope  In this case, the token would take the scope value from the query parameter or from the request body or from the header and send it to the token endpoint.'
            token_post_args_names: (List of String) Extra post argument names passed to the token endpoint.
            token_post_args_values: (List of String) Extra post argument values passed to the token endpoint.
            unauthorized_destroy_session: (Boolean) Destroy any active session for the unauthorized requests.
            unauthorized_error_message: (String) The error message for the unauthorized requests (when not using the redirection).
            unauthorized_redirect_uri: (List of String) Where to redirect the client on unauthorized requests.
            unexpected_redirect_uri: (List of String) Where to redirect the client when unexpected errors happen with the requests.
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_access_token_header: (String) The upstream access token header.
            upstream_access_token_jwk_header: (String) The upstream access token JWK header.
            upstream_headers_claims: (List of String) The upstream header claims. Only top level claims are supported.
            upstream_headers_names: (List of String) The upstream header names for the claim values.
            upstream_id_token_header: (String) The upstream id token header.
            upstream_id_token_jwk_header: (String) The upstream id token JWK header.
            upstream_introspection_header: (String) The upstream introspection header.
            upstream_introspection_jwt_header: (String) The upstream introspection JWT header.
            upstream_refresh_token_header: (String) The upstream refresh token header.
            upstream_session_id_header: (String) The upstream session id header.
            upstream_user_info_header: (String) The upstream user info header.
            upstream_user_info_jwt_header: (String) The upstream user info JWT header (in case the user info returns a JWT response).
            use: (String)
            userinfo_accept: '(String) The value of Accept header for user info requests: - application/json: user info response as JSON - application/jwt: user info response as JWT (from the obsolete IETF draft document). must be one of ["application/json", "application/jwt"]'
            userinfo_endpoint: (String) The user info endpoint. If set it overrides the value in userinfo_endpoint returned by the discovery endpoint.
            userinfo_headers_client: (List of String) Extra headers passed from the client to the user info endpoint.
            userinfo_headers_names: (List of String) Extra header names passed to the user info endpoint.
            userinfo_headers_values: (List of String) Extra header values passed to the user info endpoint.
            userinfo_query_args_client: (List of String) Extra query arguments passed from the client to the user info endpoint.
            userinfo_query_args_names: (List of String) Extra query argument names passed to the user info endpoint.
            userinfo_query_args_values: (List of String) Extra query argument values passed to the user info endpoint.
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            using_pseudo_issuer: (Boolean) If the plugin uses a pseudo issuer. When set to true, the plugin will not discover the configuration from the issuer URL specified with config.issuer.
            verify_claims: (Boolean) Verify tokens for standard claims.
            verify_nonce: (Boolean) Verify nonce on authorization code flow.
            verify_parameters: (Boolean) Verify plugin configuration against discovery.
            verify_signature: (Boolean) Verify signature of tokens.
            x: (String)
            x5c: (List of String)
            x5t: (String)
            x5t_number_s256: (String)
            x5u: (String)
            "y": (String)
        importStatements:
            - terraform import kong-gateway_plugin_openid_connect.my_kong-gateway_plugin_openid_connect ""
    kong-gateway_plugin_opentelemetry:
        subCategory: ""
        description: PluginOpentelemetry Resource
        name: kong-gateway_plugin_opentelemetry
        title: kong-gateway_plugin_opentelemetry Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginopentelemetry
              manifest: |-
                {
                  "config": {
                    "batch_flush_delay": 10,
                    "batch_span_count": 3,
                    "connect_timeout": 989336304,
                    "header_type": "gcp",
                    "headers": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "http_response_header_for_traceid": "...my_http_response_header_for_traceid...",
                    "logs_endpoint": "...my_logs_endpoint...",
                    "propagation": {
                      "clear": [
                        "..."
                      ],
                      "default_format": "instana",
                      "extract": [
                        "instana"
                      ],
                      "inject": [
                        "preserve"
                      ]
                    },
                    "queue": {
                      "concurrency_limit": 4,
                      "initial_retry_delay": 792422.25,
                      "max_batch_size": 170741,
                      "max_bytes": 4,
                      "max_coalescing_delay": 710.09,
                      "max_entries": 123096,
                      "max_retry_delay": 376586.38,
                      "max_retry_time": 7.35
                    },
                    "read_timeout": 225003718,
                    "resource_attributes": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "sampling_rate": 0.04,
                    "send_timeout": 1663136653,
                    "traces_endpoint": "...my_traces_endpoint..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 9,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            batch_flush_delay: (Number) The delay, in seconds, between two consecutive batches.
            batch_span_count: (Number) The number of spans to be sent in a single batch.
            before: (Attributes) (see below for nested schema)
            clear: (List of String) Header names to clear after context extraction. This allows to extract the context from a certain header and then remove it from the request, useful when extraction and injection are performed on different header formats and the original header should not be sent to the upstream. If left empty, no headers are cleared.
            concurrency_limit: (Number) The number of of queue delivery timers. -1 indicates unlimited. must be one of ["-1", "1"]
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            default_format: '(String) The default header format to use when extractors did not match any format in the incoming headers and inject is configured with the value: preserve. This can happen when no tracing header was found in the request, or the incoming tracing header formats were not included in extract. Not Null; must be one of ["aws", "b3", "b3-single", "datadog", "gcp", "instana", "jaeger", "ot", "w3c"]'
            enabled: (Boolean) Whether the plugin is applied.
            extract: (List of String) Header formats used to extract tracing context from incoming requests. If multiple values are specified, the first one found will be used for extraction. If left empty, Kong will not extract any tracing context information from incoming requests and generate a trace with no parent and a new trace ID.
            header_type: (String) must be one of ["aws", "b3", "b3-single", "datadog", "gcp", "ignore", "instana", "jaeger", "ot", "preserve", "w3c"]
            headers: (Map of String) The custom headers to be added in the HTTP request sent to the OTLP server. This setting is useful for adding the authentication headers (token) for the APM backend.
            http_response_header_for_traceid: (String)
            id: (String) The ID of this resource.
            initial_retry_delay: (Number) Time in seconds before the initial retry is made for a failing batch.
            inject: (List of String) Header formats used to inject tracing context. The value preserve will use the same header format as the incoming request. If multiple values are specified, all of them will be used during injection. If left empty, Kong will not inject any tracing context information in outgoing requests.
            instance_name: (String)
            logs_endpoint: (String) A string representing a URL, such as https://example.com/path/to/resource?q=search.
            max_batch_size: (Number) Maximum number of entries that can be processed at a time.
            max_bytes: (Number) Maximum number of bytes that can be waiting on a queue, requires string content.
            max_coalescing_delay: (Number) Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler.
            max_entries: (Number) Maximum number of entries that can be waiting on the queue.
            max_retry_delay: (Number) Maximum time in seconds between retries, caps exponential backoff.
            max_retry_time: (Number) Time in seconds before the queue gives up calling a failed handler for a batch.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            propagation: (Attributes) (see below for nested schema)
            protocols: (List of String) A set of strings representing HTTP protocols.
            queue: (Attributes) (see below for nested schema)
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            resource_attributes: (Map of String)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            sampling_rate: (Number) Tracing sampling rate for configuring the probability-based sampler. When set, this value supersedes the global tracing_sampling_rate setting from kong.conf.
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            traces_endpoint: (String) A string representing a URL, such as https://example.com/path/to/resource?q=search.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_opentelemetry.my_kong-gateway_plugin_opentelemetry ""
    kong-gateway_plugin_post_function:
        subCategory: ""
        description: PluginPostFunction Resource
        name: kong-gateway_plugin_post_function
        title: kong-gateway_plugin_post_function Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginpostfunction
              manifest: |-
                {
                  "config": {
                    "access": [
                      "..."
                    ],
                    "body_filter": [
                      "..."
                    ],
                    "certificate": [
                      "..."
                    ],
                    "header_filter": [
                      "..."
                    ],
                    "log": [
                      "..."
                    ],
                    "rewrite": [
                      "..."
                    ],
                    "ws_client_frame": [
                      "..."
                    ],
                    "ws_close": [
                      "..."
                    ],
                    "ws_handshake": [
                      "..."
                    ],
                    "ws_upstream_frame": [
                      "..."
                    ]
                  },
                  "created_at": 7,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            body_filter: (List of String)
            certificate: (List of String)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            header_filter: (List of String)
            id: (String) The ID of this resource.
            instance_name: (String)
            log: (List of String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing protocols.
            rewrite: (List of String)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            ws_client_frame: (List of String)
            ws_close: (List of String)
            ws_handshake: (List of String)
            ws_upstream_frame: (List of String)
        importStatements:
            - terraform import kong-gateway_plugin_post_function.my_kong-gateway_plugin_post_function ""
    kong-gateway_plugin_pre_function:
        subCategory: ""
        description: PluginPreFunction Resource
        name: kong-gateway_plugin_pre_function
        title: kong-gateway_plugin_pre_function Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginprefunction
              manifest: |-
                {
                  "config": {
                    "access": [
                      "..."
                    ],
                    "body_filter": [
                      "..."
                    ],
                    "certificate": [
                      "..."
                    ],
                    "header_filter": [
                      "..."
                    ],
                    "log": [
                      "..."
                    ],
                    "rewrite": [
                      "..."
                    ],
                    "ws_client_frame": [
                      "..."
                    ],
                    "ws_close": [
                      "..."
                    ],
                    "ws_handshake": [
                      "..."
                    ],
                    "ws_upstream_frame": [
                      "..."
                    ]
                  },
                  "created_at": 1,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "ws"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 5
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            body_filter: (List of String)
            certificate: (List of String)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            header_filter: (List of String)
            id: (String) The ID of this resource.
            instance_name: (String)
            log: (List of String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing protocols.
            rewrite: (List of String)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            ws_client_frame: (List of String)
            ws_close: (List of String)
            ws_handshake: (List of String)
            ws_upstream_frame: (List of String)
        importStatements:
            - terraform import kong-gateway_plugin_pre_function.my_kong-gateway_plugin_pre_function ""
    kong-gateway_plugin_prometheus:
        subCategory: ""
        description: PluginPrometheus Resource
        name: kong-gateway_plugin_prometheus
        title: kong-gateway_plugin_prometheus Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginprometheus
              manifest: |-
                {
                  "config": {
                    "ai_metrics": true,
                    "bandwidth_metrics": true,
                    "latency_metrics": true,
                    "per_consumer": false,
                    "status_code_metrics": true,
                    "upstream_health_metrics": true,
                    "wasm_metrics": true
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 7,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 8
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            ai_metrics: (Boolean) A boolean value that determines if ai metrics should be collected. If enabled, the ai_llm_requests_total, ai_llm_cost_total and ai_llm_tokens_total metrics will be exported.
            bandwidth_metrics: (Boolean) A boolean value that determines if bandwidth metrics should be collected. If enabled, bandwidth_bytes and stream_sessions_total metrics will be exported.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            latency_metrics: (Boolean) A boolean value that determines if latency metrics should be collected. If enabled, kong_latency_ms, upstream_latency_ms and request_latency_ms metrics will be exported.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            per_consumer: (Boolean) A boolean value that determines if per-consumer metrics should be collected. If enabled, the kong_http_requests_total and kong_bandwidth_bytes metrics fill in the consumer label when available.
            protocols: (List of String) A set of strings representing protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            status_code_metrics: (Boolean) A boolean value that determines if status code metrics should be collected. If enabled, http_requests_total, stream_sessions_total metrics will be exported.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_health_metrics: (Boolean) A boolean value that determines if upstream metrics should be collected. If enabled, upstream_target_health metric will be exported.
            wasm_metrics: (Boolean) A boolean value that determines if Wasm metrics should be collected.
        importStatements:
            - terraform import kong-gateway_plugin_prometheus.my_kong-gateway_plugin_prometheus ""
    kong-gateway_plugin_proxy_cache:
        subCategory: ""
        description: PluginProxyCache Resource
        name: kong-gateway_plugin_proxy_cache
        title: kong-gateway_plugin_proxy_cache Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginproxycache
              manifest: |-
                {
                  "config": {
                    "cache_control": true,
                    "cache_ttl": 2,
                    "content_type": [
                      "..."
                    ],
                    "ignore_uri_case": true,
                    "memory": {
                      "dictionary_name": "...my_dictionary_name..."
                    },
                    "request_method": [
                      "PUT"
                    ],
                    "response_code": [
                      510
                    ],
                    "response_headers": {
                      "age": false,
                      "x_cache_key": false,
                      "x_cache_status": true
                    },
                    "storage_ttl": 0,
                    "strategy": "memory",
                    "vary_headers": [
                      "..."
                    ],
                    "vary_query_params": [
                      "..."
                    ]
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 5,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            age: (Boolean)
            before: (Attributes) (see below for nested schema)
            cache_control: (Boolean) When enabled, respect the Cache-Control behaviors defined in RFC7234.
            cache_ttl: (Number) TTL, in seconds, of cache entities.
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            content_type: (List of String) Upstream response content types considered cacheable. The plugin performs an exact match against each specified value.
            created_at: (Number) Unix epoch when the resource was created.
            dictionary_name: (String) The name of the shared dictionary in which to hold cache entities when the memory strategy is selected. Note that this dictionary currently must be defined manually in the Kong Nginx template.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            ignore_uri_case: (Boolean)
            instance_name: (String)
            memory: (Attributes) (see below for nested schema)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing protocols.
            request_method: (List of String) Downstream request methods considered cacheable.
            response_code: (List of Number) Upstream response status code considered cacheable.
            response_headers: (Attributes) Caching related diagnostic headers that should be included in cached responses (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            storage_ttl: (Number) Number of seconds to keep resources in the storage backend. This value is independent of cache_ttl or resource TTLs defined by Cache-Control behaviors.
            strategy: (String) The backing data store in which to hold cache entities. must be "memory"
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            vary_headers: (List of String) Relevant headers considered for the cache key. If undefined, none of the headers are taken into consideration.
            vary_query_params: (List of String) Relevant query parameters considered for the cache key. If undefined, all params are taken into consideration.
            x_cache_key: (Boolean)
            x_cache_status: (Boolean)
        importStatements:
            - terraform import kong-gateway_plugin_proxy_cache.my_kong-gateway_plugin_proxy_cache ""
    kong-gateway_plugin_proxy_cache_advanced:
        subCategory: ""
        description: PluginProxyCacheAdvanced Resource
        name: kong-gateway_plugin_proxy_cache_advanced
        title: kong-gateway_plugin_proxy_cache_advanced Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginproxycacheadvanced
              manifest: |-
                {
                  "config": {
                    "bypass_on_err": true,
                    "cache_control": false,
                    "cache_ttl": 8,
                    "content_type": [
                      "..."
                    ],
                    "ignore_uri_case": false,
                    "memory": {
                      "dictionary_name": "...my_dictionary_name..."
                    },
                    "redis": {
                      "cluster_max_redirections": 4,
                      "cluster_nodes": [
                        {
                          "ip": "...my_ip...",
                          "port": 13001
                        }
                      ],
                      "connect_timeout": 1026198025,
                      "connection_is_proxied": true,
                      "database": 6,
                      "host": "...my_host...",
                      "keepalive_backlog": 1706411375,
                      "keepalive_pool_size": 1943414170,
                      "password": "...my_password...",
                      "port": 14256,
                      "read_timeout": 1093988774,
                      "send_timeout": 799635205,
                      "sentinel_master": "...my_sentinel_master...",
                      "sentinel_nodes": [
                        {
                          "host": "...my_host...",
                          "port": 34334
                        }
                      ],
                      "sentinel_password": "...my_sentinel_password...",
                      "sentinel_role": "master",
                      "sentinel_username": "...my_sentinel_username...",
                      "server_name": "...my_server_name...",
                      "ssl": true,
                      "ssl_verify": false,
                      "username": "...my_username..."
                    },
                    "request_method": [
                      "HEAD"
                    ],
                    "response_code": [
                      487
                    ],
                    "response_headers": {
                      "age": false,
                      "x_cache_key": false,
                      "x_cache_status": true
                    },
                    "storage_ttl": 7,
                    "strategy": "memory",
                    "vary_headers": [
                      "..."
                    ],
                    "vary_query_params": [
                      "..."
                    ]
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 0,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 2
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            age: (Boolean)
            before: (Attributes) (see below for nested schema)
            bypass_on_err: (Boolean) Unhandled errors while trying to retrieve a cache entry (such as redis down) are resolved with Bypass, with the request going upstream.
            cache_control: (Boolean) When enabled, respect the Cache-Control behaviors defined in RFC7234.
            cache_ttl: (Number) TTL in seconds of cache entities.
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            content_type: (List of String) Upstream response content types considered cacheable. The plugin performs an exact match against each specified value; for example, if the upstream is expected to respond with a application/json; charset=utf-8 content-type, the plugin configuration must contain said value or a Bypass cache status is returned.
            created_at: (Number) Unix epoch when the resource was created.
            database: (Number) Database to use for the Redis connection when using the redis strategy
            dictionary_name: (String) The name of the shared dictionary in which to hold cache entities when the memory strategy is selected. Note that this dictionary currently must be defined manually in the Kong Nginx template.
            enabled: (Boolean) Whether the plugin is applied.
            host: (String) A string representing a host name, such as example.com.
            id: (String) The ID of this resource.
            ignore_uri_case: (Boolean) Determines whether to treat URIs as case sensitive. By default, case sensitivity is enabled. If set to true, requests are cached while ignoring case sensitivity in the URI.
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            memory: (Attributes) (see below for nested schema)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing HTTP protocols.
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redis: (Attributes) (see below for nested schema)
            request_method: '(List of String) Downstream request methods considered cacheable. Available options: HEAD, GET, POST, PATCH, PUT.'
            response_code: (List of Number) Upstream response status code considered cacheable. The integers must be a value between 100 and 900.
            response_headers: (Attributes) Caching related diagnostic headers that should be included in cached responses (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_verify: (Boolean) If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure lua_ssl_trusted_certificate in kong.conf to specify the CA (or server) certificate used by your Redis server. You may also need to configure lua_ssl_verify_depth accordingly.
            storage_ttl: (Number) Number of seconds to keep resources in the storage backend. This value is independent of cache_ttl or resource TTLs defined by Cache-Control behaviors.
            strategy: '(String) The backing data store in which to hold cache entities. Accepted values are: memory and redis. must be one of ["memory", "redis"]'
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            vary_headers: (List of String) Relevant headers considered for the cache key. If undefined, none of the headers are taken into consideration.
            vary_query_params: (List of String) Relevant query parameters considered for the cache key. If undefined, all params are taken into consideration. By default, the max number of params accepted is 100. You can change this value via the lua_max_post_args in kong.conf.
            x_cache_key: (Boolean)
            x_cache_status: (Boolean)
        importStatements:
            - terraform import kong-gateway_plugin_proxy_cache_advanced.my_kong-gateway_plugin_proxy_cache_advanced ""
    kong-gateway_plugin_rate_limiting:
        subCategory: ""
        description: PluginRateLimiting Resource
        name: kong-gateway_plugin_rate_limiting
        title: kong-gateway_plugin_rate_limiting Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginratelimiting
              manifest: |-
                {
                  "config": {
                    "day": 5.06,
                    "error_code": 2.76,
                    "error_message": "...my_error_message...",
                    "fault_tolerant": false,
                    "header_name": "...my_header_name...",
                    "hide_client_headers": true,
                    "hour": 8.98,
                    "limit_by": "service",
                    "minute": 2.74,
                    "month": 2.4,
                    "path": "...my_path...",
                    "policy": "redis",
                    "redis": {
                      "database": 3,
                      "host": "...my_host...",
                      "password": "...my_password...",
                      "port": 51015,
                      "server_name": "...my_server_name...",
                      "ssl": true,
                      "ssl_verify": true,
                      "timeout": 1674606661,
                      "username": "...my_username..."
                    },
                    "second": 0.81,
                    "sync_rate": 3.31,
                    "year": 6.14
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 0,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 5
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            database: (Number) Database to use for the Redis connection when using the redis strategy
            day: (Number) The number of HTTP requests that can be made per day.
            enabled: (Boolean) Whether the plugin is applied.
            error_code: (Number) Set a custom error code to return when the rate limit is exceeded.
            error_message: (String) Set a custom error message to return when the rate limit is exceeded.
            fault_tolerant: (Boolean) A boolean value that determines if the requests should be proxied even if Kong has troubles connecting a third-party data store. If true, requests will be proxied anyway, effectively disabling the rate-limiting function until the data store is working again. If false, then the clients will see 500 errors.
            header_name: (String) A string representing an HTTP header name.
            hide_client_headers: (Boolean) Optionally hide informative response headers.
            host: (String) A string representing a host name, such as example.com.
            hour: (Number) The number of HTTP requests that can be made per hour.
            id: (String) The ID of this resource.
            instance_name: (String)
            limit_by: (String) The entity that is used when aggregating the limits. must be one of ["consumer", "consumer-group", "credential", "header", "ip", "path", "service"]
            minute: (Number) The number of HTTP requests that can be made per minute.
            month: (Number) The number of HTTP requests that can be made per month.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            path: (String) A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).
            policy: (String) The rate-limiting policies to use for retrieving and incrementing the limits. must be one of ["cluster", "local", "redis"]
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing HTTP protocols.
            redis: (Attributes) Redis configuration (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            second: (Number) The number of HTTP requests that can be made per second.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_verify: (Boolean) If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure lua_ssl_trusted_certificate in kong.conf to specify the CA (or server) certificate used by your Redis server. You may also need to configure lua_ssl_verify_depth accordingly.
            sync_rate: (Number) How often to sync counter data to the central data store. A value of -1 results in synchronous behavior.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            updated_at: (Number) Unix epoch when the resource was last updated.
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            year: (Number) The number of HTTP requests that can be made per year.
        importStatements:
            - terraform import kong-gateway_plugin_rate_limiting.my_kong-gateway_plugin_rate_limiting ""
    kong-gateway_plugin_rate_limiting_advanced:
        subCategory: ""
        description: PluginRateLimitingAdvanced Resource
        name: kong-gateway_plugin_rate_limiting_advanced
        title: kong-gateway_plugin_rate_limiting_advanced Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginratelimitingadvanced
              manifest: |-
                {
                  "config": {
                    "compound_identifier": [
                      "consumer-group"
                    ],
                    "consumer_groups": [
                      "..."
                    ],
                    "dictionary_name": "...my_dictionary_name...",
                    "disable_penalty": true,
                    "enforce_consumer_groups": false,
                    "error_code": 8.45,
                    "error_message": "...my_error_message...",
                    "header_name": "...my_header_name...",
                    "hide_client_headers": true,
                    "identifier": "consumer-group",
                    "limit": [
                      7.11
                    ],
                    "lock_dictionary_name": "...my_lock_dictionary_name...",
                    "namespace": "...my_namespace...",
                    "path": "...my_path...",
                    "redis": {
                      "cluster_max_redirections": 1,
                      "cluster_nodes": [
                        {
                          "ip": "...my_ip...",
                          "port": 22702
                        }
                      ],
                      "connect_timeout": 1741963165,
                      "connection_is_proxied": true,
                      "database": 9,
                      "host": "...my_host...",
                      "keepalive_backlog": 675439018,
                      "keepalive_pool_size": 1391352988,
                      "password": "...my_password...",
                      "port": 59829,
                      "read_timeout": 532082307,
                      "redis_proxy_type": "envoy_v1.31",
                      "send_timeout": 1287354674,
                      "sentinel_master": "...my_sentinel_master...",
                      "sentinel_nodes": [
                        {
                          "host": "...my_host...",
                          "port": 63686
                        }
                      ],
                      "sentinel_password": "...my_sentinel_password...",
                      "sentinel_role": "master",
                      "sentinel_username": "...my_sentinel_username...",
                      "server_name": "...my_server_name...",
                      "ssl": true,
                      "ssl_verify": true,
                      "username": "...my_username..."
                    },
                    "retry_after_jitter_max": 5.83,
                    "strategy": "cluster",
                    "sync_rate": 9.11,
                    "window_size": [
                      6.06
                    ],
                    "window_type": "sliding"
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 2,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 5
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            compound_identifier: (List of String) Similar to identifer, but supports combining multiple items. The priority of compound_identifier is higher than identifier, which means if compound_identifer is set, it will be used, otherwise identifier will be used.
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            consumer_groups: (List of String) List of consumer groups allowed to override the rate limiting settings for the given Route or Service. Required if enforce_consumer_groups is set to true.
            created_at: (Number) Unix epoch when the resource was created.
            database: (Number) Database to use for the Redis connection when using the redis strategy
            dictionary_name: (String) The shared dictionary where counters are stored. When the plugin is configured to synchronize counter data externally (that is config.strategy is cluster or redis and config.sync_rate isn't -1), this dictionary serves as a buffer to populate counters in the data store on each synchronization cycle.
            disable_penalty: (Boolean) If set to true, this doesn't count denied requests (status = 429). If set to false, all requests, including denied ones, are counted. This parameter only affects the sliding window_type.
            enabled: (Boolean) Whether the plugin is applied.
            enforce_consumer_groups: (Boolean) Determines if consumer groups are allowed to override the rate limiting settings for the given Route or Service. Flipping enforce_consumer_groups from true to false disables the group override, but does not clear the list of consumer groups. You can then flip enforce_consumer_groups to true to re-enforce the groups.
            error_code: (Number) Set a custom error code to return when the rate limit is exceeded.
            error_message: (String) Set a custom error message to return when the rate limit is exceeded.
            header_name: (String) A string representing an HTTP header name.
            hide_client_headers: (Boolean) Optionally hide informative response headers that would otherwise provide information about the current status of limits and counters.
            host: (String) A string representing a host name, such as example.com.
            id: (String) The ID of this resource.
            identifier: (String) The type of identifier used to generate the rate limit key. Defines the scope used to increment the rate limiting counters. Can be ip, credential, consumer, service, header, path or consumer-group. Note if identifier is consumer-group, the plugin must be applied on a consumer group entity. Because a consumer may belong to multiple consumer groups, the plugin needs to know explicitly which consumer group to limit the rate. must be one of ["consumer", "consumer-group", "credential", "header", "ip", "path", "service"]
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            limit: (List of Number) One or more requests-per-window limits to apply. There must be a matching number of window limits and sizes specified.
            lock_dictionary_name: (String) The shared dictionary where concurrency control locks are stored. The default shared dictionary is kong_locks. The shared dictionary should be declare in nginx-kong.conf.
            name: (String)
            namespace: '(String) The rate limiting library namespace to use for this plugin instance. Counter data and sync configuration is isolated in each namespace. NOTE: For the plugin instances sharing the same namespace, all the configurations that are required for synchronizing counters, e.g. strategy, redis, sync_rate, dictionary_name, need to be the same.'
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            path: (String) A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing HTTP protocols.
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redis: (Attributes) (see below for nested schema)
            redis_proxy_type: (String) If the connection_is_proxied is enabled, this field indicates the proxy type and version you are using. For example, you can enable this optioin when you want authentication between Kong and Envoy proxy. must be "envoy_v1.31"
            retry_after_jitter_max: (Number) The upper bound of a jitter (random delay) in seconds to be added to the Retry-After header of denied requests (status = 429) in order to prevent all the clients from coming back at the same time. The lower bound of the jitter is 0; in this case, the Retry-After header is equal to the RateLimit-Reset header.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_verify: (Boolean) If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure lua_ssl_trusted_certificate in kong.conf to specify the CA (or server) certificate used by your Redis server. You may also need to configure lua_ssl_verify_depth accordingly.
            strategy: '(String) The rate-limiting strategy to use for retrieving and incrementing the limits. Available values are: local and cluster. must be one of ["cluster", "local", "redis"]'
            sync_rate: (Number) How often to sync counter data to the central data store. A value of 0 results in synchronous behavior; a value of -1 ignores sync behavior entirely and only stores counters in node memory. A value greater than 0 will sync the counters in the specified number of seconds. The minimum allowed interval is 0.02 seconds (20ms).
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            window_size: (List of Number) One or more window sizes to apply a limit to (defined in seconds). There must be a matching number of window limits and sizes specified.
            window_type: (String) Sets the time window type to either sliding (default) or fixed. Sliding windows apply the rate limiting logic while taking into account previous hit rates (from the window that immediately precedes the current) using a dynamic weight. Fixed windows consist of buckets that are statically assigned to a definitive time range, each request is mapped to only one fixed window based on its timestamp and will affect only that window's counters. must be one of ["fixed", "sliding"]
        importStatements:
            - terraform import kong-gateway_plugin_rate_limiting_advanced.my_kong-gateway_plugin_rate_limiting_advanced ""
    kong-gateway_plugin_redirect:
        subCategory: ""
        description: PluginRedirect Resource
        name: kong-gateway_plugin_redirect
        title: kong-gateway_plugin_redirect Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginredirect
              manifest: |-
                {
                  "config": {
                    "keep_incoming_path": false,
                    "location": "...my_location...",
                    "status_code": 248
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 0,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            keep_incoming_path: (Boolean) Use the incoming request's path and query string in the redirect URL
            location: (String) The URL to redirect to
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            status_code: (Number) The response code to send. Must be an integer between 100 and 599.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_redirect.my_kong-gateway_plugin_redirect ""
    kong-gateway_plugin_request_callout:
        subCategory: ""
        description: PluginRequestCallout Resource
        name: kong-gateway_plugin_request_callout
        title: kong-gateway_plugin_request_callout Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginrequestcallout
              manifest: |-
                {
                  "config": {
                    "cache": {
                      "cache_ttl": 9,
                      "memory": {
                        "dictionary_name": "...my_dictionary_name..."
                      },
                      "redis": {
                        "cluster_max_redirections": 7,
                        "cluster_nodes": [
                          {
                            "ip": "...my_ip...",
                            "port": 64645
                          }
                        ],
                        "connect_timeout": 681140354,
                        "connection_is_proxied": false,
                        "database": 6,
                        "host": "...my_host...",
                        "keepalive_backlog": 839577771,
                        "keepalive_pool_size": 121694753,
                        "password": "...my_password...",
                        "port": 39498,
                        "read_timeout": 587709523,
                        "send_timeout": 532082307,
                        "sentinel_master": "...my_sentinel_master...",
                        "sentinel_nodes": [
                          {
                            "host": "...my_host...",
                            "port": 30939
                          }
                        ],
                        "sentinel_password": "...my_sentinel_password...",
                        "sentinel_role": "any",
                        "sentinel_username": "...my_sentinel_username...",
                        "server_name": "...my_server_name...",
                        "ssl": true,
                        "ssl_verify": true,
                        "username": "...my_username..."
                      },
                      "strategy": "redis"
                    },
                    "callouts": [
                      {
                        "cache": {
                          "bypass": true
                        },
                        "depends_on": [
                          "..."
                        ],
                        "name": "...my_name...",
                        "request": {
                          "body": {
                            "custom": {
                              "key": "${jsonencode(\"value\")}"
                            },
                            "decode": true,
                            "forward": true
                          },
                          "by_lua": "...my_by_lua...",
                          "error": {
                            "error_response_code": 2,
                            "error_response_msg": "...my_error_response_msg...",
                            "http_statuses": [
                              853
                            ],
                            "on_error": "fail",
                            "retries": 8
                          },
                          "headers": {
                            "custom": {
                              "key": "${jsonencode(\"value\")}"
                            },
                            "forward": true
                          },
                          "http_opts": {
                            "proxy": {
                              "auth_password": "...my_auth_password...",
                              "auth_username": "...my_auth_username...",
                              "http_proxy": "...my_http_proxy...",
                              "https_proxy": "...my_https_proxy..."
                            },
                            "ssl_server_name": "...my_ssl_server_name...",
                            "ssl_verify": false,
                            "timeouts": {
                              "connect": 222020744,
                              "read": 336490013,
                              "write": 231633426
                            }
                          },
                          "method": "...my_method...",
                          "query": {
                            "custom": {
                              "key": "${jsonencode(\"value\")}"
                            },
                            "forward": false
                          },
                          "url": "...my_url..."
                        },
                        "response": {
                          "body": {
                            "decode": true,
                            "store": false
                          },
                          "by_lua": "...my_by_lua...",
                          "headers": {
                            "store": false
                          }
                        }
                      }
                    ],
                    "upstream": {
                      "body": {
                        "custom": {
                          "key": "${jsonencode(\"value\")}"
                        },
                        "decode": true,
                        "forward": true
                      },
                      "by_lua": "...my_by_lua...",
                      "headers": {
                        "custom": {
                          "key": "${jsonencode(\"value\")}"
                        },
                        "forward": false
                      },
                      "query": {
                        "custom": {
                          "key": "${jsonencode(\"value\")}"
                        },
                        "forward": false
                      }
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 6,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 7
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            auth_password: (String) The password to authenticate with, if the forward proxy is protected by basic authentication.
            auth_username: (String) The username to authenticate with, if the forward proxy is protected by basic authentication.
            before: (Attributes) (see below for nested schema)
            body: (Attributes) Callout request body customizations. Not Null (see below for nested schema)
            by_lua: (String) Lua code that executes before the callout request is made.Standard Lua sandboxing restrictions apply.
            bypass: (Boolean) If true, skips caching the callout response.
            cache: (Attributes) Plugin global caching configuration. (see below for nested schema)
            cache_ttl: (Number) TTL in seconds of cache entities.
            callouts: (Attributes List) A collection of callout objects, where each object represents an HTTPrequest made in the context of a proxy request. (see below for nested schema)
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect: (Number) The socket connect timeout.
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            custom: (Map of String) The custom body fields to be added in the callout HTTP request.Values can contain Lua expressions in the form $(some_lua_code).
            database: (Number) Database to use for the Redis connection when using the redis strategy
            decode: (Boolean) If true, decodes the request's body to make it available for customizations.
            depends_on: (List of String) An array of callout names the current callout depends on.This dependency determines the callout execution order.
            dictionary_name: (String) The name of the shared dictionary in which to hold cache entities when the memory strategy is selected. Note that this dictionary currently must be defined manually in the Kong Nginx template.
            enabled: (Boolean) Whether the plugin is applied.
            error: (Attributes) The error handling policy the plugin will apply to TCP and HTTP errors. Not Null (see below for nested schema)
            error_response_code: (Number) The error code to respond with if on_error is fail or if retries is achieved.
            error_response_msg: (String) The error mesasge to respond with if on_error is fail or if retries is achieved.Templating with Lua expressions is supported.
            forward: (Boolean) If true, forwards the incoming request's body to the callout request.
            headers: (Attributes) Callout request header customizations. Not Null (see below for nested schema)
            host: (String) A string representing a host name, such as example.com.
            http_opts: (Attributes) HTTP connection parameters. Not Null (see below for nested schema)
            http_proxy: (String) The HTTP proxy URL. This proxy server will be used for HTTP requests.
            http_statuses: (List of Number) The list of HTTP status codes considered errors under the error handling policy.
            https_proxy: (String) The HTTPS proxy URL. This proxy server will be used for HTTPS requests.
            id: (String) The ID of this resource.
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            memory: (Attributes) (see below for nested schema)
            method: (String) The HTTP method that will be requested.
            name: (String) A string identifier for a callout. A callout object is referenceablevia its name in the kong.ctx.shared.callouts.. Not Null
            on_error: (String) must be one of ["continue", "fail", "retry"]
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing HTTP protocols.
            proxy: (Attributes) Proxy settings. (see below for nested schema)
            query: (Attributes) Callout request query param customizations. Not Null (see below for nested schema)
            read: (Number) The socket read timeout.
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redis: (Attributes) (see below for nested schema)
            request: (Attributes) The customizations for the callout request. Not Null (see below for nested schema)
            response: (Attributes) Configurations of callout response handling. Not Null (see below for nested schema)
            retries: (Number) The number of retries the plugin will attempt on TCP and HTTP errors if on_error is set to retry.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_server_name: (String) The SNI used in the callout request. Defaults to host if omitted.
            ssl_verify: (Boolean) If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure lua_ssl_trusted_certificate in kong.conf to specify the CA (or server) certificate used by your Redis server. You may also need to configure lua_ssl_verify_depth accordingly.
            store: (Boolean) If false, skips storing the callout response body into kong.ctx.shared.callouts..response.body.
            strategy: '(String) The backing data store in which to hold cache entities. Accepted values are: off, memory, and redis. must be one of ["memory", "off", "redis"]'
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeouts: (Attributes) Socket timeouts in milliseconds. All or none must be set. (see below for nested schema)
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream: (Attributes) Customizations to the upstream request. (see below for nested schema)
            url: (String) The URL that will be requested. Not Null
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            write: (Number) The socket write timeout.
        importStatements:
            - terraform import kong-gateway_plugin_request_callout.my_kong-gateway_plugin_request_callout ""
    kong-gateway_plugin_request_size_limiting:
        subCategory: ""
        description: PluginRequestSizeLimiting Resource
        name: kong-gateway_plugin_request_size_limiting
        title: kong-gateway_plugin_request_size_limiting Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginrequestsizelimiting
              manifest: |-
                {
                  "config": {
                    "allowed_payload_size": 0,
                    "require_content_length": true,
                    "size_unit": "megabytes"
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 6,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 3
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allowed_payload_size: (Number) Allowed request payload size in megabytes. Default is 128 megabytes (128000000 bytes).
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            require_content_length: (Boolean) Set to true to ensure a valid Content-Length header exists before reading the request body.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            size_unit: (String) Size unit can be set either in bytes, kilobytes, or megabytes (default). This configuration is not available in versions prior to Kong Gateway 1.3 and Kong Gateway (OSS) 2.0. must be one of ["bytes", "kilobytes", "megabytes"]
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_request_size_limiting.my_kong-gateway_plugin_request_size_limiting ""
    kong-gateway_plugin_request_termination:
        subCategory: ""
        description: PluginRequestTermination Resource
        name: kong-gateway_plugin_request_termination
        title: kong-gateway_plugin_request_termination Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginrequesttermination
              manifest: |-
                {
                  "config": {
                    "body": "...my_body...",
                    "content_type": "...my_content_type...",
                    "echo": false,
                    "message": "...my_message...",
                    "status_code": 231,
                    "trigger": "...my_trigger..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 3,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 2
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            body: (String) The raw response body to send. This is mutually exclusive with the config.message field.
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            content_type: (String) Content type of the raw response configured with config.body.
            created_at: (Number) Unix epoch when the resource was created.
            echo: (Boolean) When set, the plugin will echo a copy of the request back to the client. The main usecase for this is debugging. It can be combined with trigger in order to debug requests on live systems without disturbing real traffic.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            message: (String) The message to send, if using the default response generator.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            status_code: (Number) The response code to send. Must be an integer between 100 and 599.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            trigger: (String) A string representing an HTTP header name.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_request_termination.my_kong-gateway_plugin_request_termination ""
    kong-gateway_plugin_request_transformer:
        subCategory: ""
        description: PluginRequestTransformer Resource
        name: kong-gateway_plugin_request_transformer
        title: kong-gateway_plugin_request_transformer Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginrequesttransformer
              manifest: |-
                {
                  "config": {
                    "add": {
                      "body": [
                        "..."
                      ],
                      "headers": [
                        "..."
                      ],
                      "querystring": [
                        "..."
                      ]
                    },
                    "append": {
                      "body": [
                        "..."
                      ],
                      "headers": [
                        "..."
                      ],
                      "querystring": [
                        "..."
                      ]
                    },
                    "http_method": "...my_http_method...",
                    "remove": {
                      "body": [
                        "..."
                      ],
                      "headers": [
                        "..."
                      ],
                      "querystring": [
                        "..."
                      ]
                    },
                    "rename": {
                      "body": [
                        "..."
                      ],
                      "headers": [
                        "..."
                      ],
                      "querystring": [
                        "..."
                      ]
                    },
                    "replace": {
                      "body": [
                        "..."
                      ],
                      "headers": [
                        "..."
                      ],
                      "querystring": [
                        "..."
                      ],
                      "uri": "...my_uri..."
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 6,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "tls_passthrough"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 8
                }
        argumentDocs:
            access: (List of String)
            add: (Attributes) (see below for nested schema)
            after: (Attributes) (see below for nested schema)
            append: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            body: (List of String)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            headers: (List of String)
            http_method: (String) A string representing an HTTP method, such as GET, POST, PUT, or DELETE. The string must contain only uppercase letters.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing protocols.
            querystring: (List of String)
            remove: (Attributes) (see below for nested schema)
            rename: (Attributes) (see below for nested schema)
            replace: (Attributes) (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            uri: (String)
        importStatements:
            - terraform import kong-gateway_plugin_request_transformer.my_kong-gateway_plugin_request_transformer ""
    kong-gateway_plugin_request_transformer_advanced:
        subCategory: ""
        description: PluginRequestTransformerAdvanced Resource
        name: kong-gateway_plugin_request_transformer_advanced
        title: kong-gateway_plugin_request_transformer_advanced Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginrequesttransformeradvanced
              manifest: |-
                {
                  "config": {
                    "add": {
                      "body": [
                        "..."
                      ],
                      "headers": [
                        "..."
                      ],
                      "json_types": [
                        "string"
                      ],
                      "querystring": [
                        "..."
                      ]
                    },
                    "allow": {
                      "body": [
                        "..."
                      ]
                    },
                    "append": {
                      "body": [
                        "..."
                      ],
                      "headers": [
                        "..."
                      ],
                      "json_types": [
                        "boolean"
                      ],
                      "querystring": [
                        "..."
                      ]
                    },
                    "dots_in_keys": false,
                    "http_method": "...my_http_method...",
                    "remove": {
                      "body": [
                        "..."
                      ],
                      "headers": [
                        "..."
                      ],
                      "querystring": [
                        "..."
                      ]
                    },
                    "rename": {
                      "body": [
                        "..."
                      ],
                      "headers": [
                        "..."
                      ],
                      "querystring": [
                        "..."
                      ]
                    },
                    "replace": {
                      "body": [
                        "..."
                      ],
                      "headers": [
                        "..."
                      ],
                      "json_types": [
                        "string"
                      ],
                      "querystring": [
                        "..."
                      ],
                      "uri": "...my_uri..."
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 2,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 10
                }
        argumentDocs:
            access: (List of String)
            add: (Attributes) (see below for nested schema)
            after: (Attributes) (see below for nested schema)
            allow: (Attributes) (see below for nested schema)
            append: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            body: (List of String)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            dots_in_keys: (Boolean) Specify whether dots (for example, customers.info.phone) should be treated as part of a property name or used to descend into nested JSON objects.  See Arrays and nested objects.
            enabled: (Boolean) Whether the plugin is applied.
            headers: (List of String)
            http_method: (String) A string representing an HTTP method, such as GET, POST, PUT, or DELETE. The string must contain only uppercase letters.
            id: (String) The ID of this resource.
            instance_name: (String)
            json_types: (List of String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            querystring: (List of String)
            remove: (Attributes) (see below for nested schema)
            rename: (Attributes) (see below for nested schema)
            replace: (Attributes) (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            uri: (String)
        importStatements:
            - terraform import kong-gateway_plugin_request_transformer_advanced.my_kong-gateway_plugin_request_transformer_advanced ""
    kong-gateway_plugin_request_validator:
        subCategory: ""
        description: PluginRequestValidator Resource
        name: kong-gateway_plugin_request_validator
        title: kong-gateway_plugin_request_validator Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginrequestvalidator
              manifest: |-
                {
                  "config": {
                    "allowed_content_types": [
                      "..."
                    ],
                    "body_schema": "...my_body_schema...",
                    "content_type_parameter_validation": true,
                    "parameter_schema": [
                      {
                        "explode": true,
                        "in": "query",
                        "name": "...my_name...",
                        "required": false,
                        "schema": "...my_schema...",
                        "style": "form"
                      }
                    ],
                    "verbose_response": true,
                    "version": "draft4"
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 2,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 3
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allowed_content_types: (List of String) List of allowed content types. The value can be configured with the charset parameter. For example, application/json; charset=UTF-8.
            before: (Attributes) (see below for nested schema)
            body_schema: (String) The request body schema specification. One of body_schema or parameter_schema must be specified.
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            content_type_parameter_validation: (Boolean) Determines whether to enable parameters validation of request content-type.
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            explode: (Boolean) Required when schema and style are set. When explode is true, parameter values of type array or object generate separate parameters for each value of the array or key-value pair of the map. For other types of parameters, this property has no effect.
            id: (String) The ID of this resource.
            in: (String) The location of the parameter. Not Null; must be one of ["header", "path", "query"]
            instance_name: (String)
            name: (String) The name of the parameter. Parameter names are case-sensitive, and correspond to the parameter name used by the in property. If in is path, the name field MUST correspond to the named capture group from the configured route. Not Null
            ordering: (Attributes) (see below for nested schema)
            parameter_schema: (Attributes List) Array of parameter validator specification. One of body_schema or parameter_schema must be specified. (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            required: (Boolean) Determines whether this parameter is mandatory. Not Null
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            schema: (String) Requred when style and explode are set. This is the schema defining the type used for the parameter. It is validated using draft4 for JSON Schema draft 4 compliant validator. In addition to being a valid JSON Schema, the parameter schema MUST have a top-level type property to enable proper deserialization before validating.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            style: (String) Required when schema and explode are set. Describes how the parameter value will be deserialized depending on the type of the parameter value. must be one of ["deepObject", "form", "label", "matrix", "pipeDelimited", "simple", "spaceDelimited"]
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            verbose_response: (Boolean) If enabled, the plugin returns more verbose and detailed validation errors.
            version: (String) Which validator to use. Supported values are kong (default) for using Kong's own schema validator, or draft4 for using a JSON Schema Draft 4-compliant validator. must be one of ["draft4", "kong"]
        importStatements:
            - terraform import kong-gateway_plugin_request_validator.my_kong-gateway_plugin_request_validator ""
    kong-gateway_plugin_response_ratelimiting:
        subCategory: ""
        description: PluginResponseRatelimiting Resource
        name: kong-gateway_plugin_response_ratelimiting
        title: kong-gateway_plugin_response_ratelimiting Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginresponseratelimiting
              manifest: |-
                {
                  "config": {
                    "block_on_first_violation": true,
                    "fault_tolerant": false,
                    "header_name": "...my_header_name...",
                    "hide_client_headers": false,
                    "limit_by": "consumer",
                    "limits": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "policy": "redis",
                    "redis": {
                      "database": 10,
                      "host": "...my_host...",
                      "password": "...my_password...",
                      "port": 22322,
                      "server_name": "...my_server_name...",
                      "ssl": false,
                      "ssl_verify": false,
                      "timeout": 320380038,
                      "username": "...my_username..."
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 8,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            block_on_first_violation: (Boolean) A boolean value that determines if the requests should be blocked as soon as one limit is being exceeded. This will block requests that are supposed to consume other limits too.
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            database: (Number) Database to use for the Redis connection when using the redis strategy
            enabled: (Boolean) Whether the plugin is applied.
            fault_tolerant: (Boolean) A boolean value that determines if the requests should be proxied even if Kong has troubles connecting a third-party datastore. If true, requests will be proxied anyway, effectively disabling the rate-limiting function until the datastore is working again. If false, then the clients will see 500 errors.
            header_name: (String) The name of the response header used to increment the counters.
            hide_client_headers: (Boolean) Optionally hide informative response headers.
            host: (String) A string representing a host name, such as example.com.
            id: (String) The ID of this resource.
            instance_name: (String)
            limit_by: '(String) The entity that will be used when aggregating the limits: consumer, credential, ip. If the consumer or the credential cannot be determined, the system will always fallback to ip. must be one of ["consumer", "credential", "ip"]'
            limits: (Map of String) A map that defines rate limits for the plugin.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            path: (String)
            policy: (String) The rate-limiting policies to use for retrieving and incrementing the limits. must be one of ["cluster", "local", "redis"]
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing HTTP protocols.
            redis: (Attributes) Redis configuration (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_verify: (Boolean) If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure lua_ssl_trusted_certificate in kong.conf to specify the CA (or server) certificate used by your Redis server. You may also need to configure lua_ssl_verify_depth accordingly.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            updated_at: (Number) Unix epoch when the resource was last updated.
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
        importStatements:
            - terraform import kong-gateway_plugin_response_ratelimiting.my_kong-gateway_plugin_response_ratelimiting ""
    kong-gateway_plugin_response_transformer:
        subCategory: ""
        description: PluginResponseTransformer Resource
        name: kong-gateway_plugin_response_transformer
        title: kong-gateway_plugin_response_transformer Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginresponsetransformer
              manifest: |-
                {
                  "config": {
                    "add": {
                      "headers": [
                        "..."
                      ],
                      "json": [
                        "..."
                      ],
                      "json_types": [
                        "number"
                      ]
                    },
                    "append": {
                      "headers": [
                        "..."
                      ],
                      "json": [
                        "..."
                      ],
                      "json_types": [
                        "number"
                      ]
                    },
                    "remove": {
                      "headers": [
                        "..."
                      ],
                      "json": [
                        "..."
                      ]
                    },
                    "rename": {
                      "headers": [
                        "..."
                      ],
                      "json": [
                        "..."
                      ]
                    },
                    "replace": {
                      "headers": [
                        "..."
                      ],
                      "json": [
                        "..."
                      ],
                      "json_types": [
                        "string"
                      ]
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 4,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9
                }
        argumentDocs:
            access: (List of String)
            add: (Attributes) (see below for nested schema)
            after: (Attributes) (see below for nested schema)
            append: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            headers: (List of String)
            id: (String) The ID of this resource.
            instance_name: (String)
            json: (List of String)
            json_types: |-
                (List of String) List of JSON type names. Specify the types of the JSON values returned when appending
                JSON properties. Each string element can be one of: boolean, number, or string.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            remove: (Attributes) (see below for nested schema)
            rename: (Attributes) (see below for nested schema)
            replace: (Attributes) (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_response_transformer.my_kong-gateway_plugin_response_transformer ""
    kong-gateway_plugin_response_transformer_advanced:
        subCategory: ""
        description: PluginResponseTransformerAdvanced Resource
        name: kong-gateway_plugin_response_transformer_advanced
        title: kong-gateway_plugin_response_transformer_advanced Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginresponsetransformeradvanced
              manifest: |-
                {
                  "config": {
                    "add": {
                      "headers": [
                        "..."
                      ],
                      "if_status": [
                        "..."
                      ],
                      "json": [
                        "..."
                      ],
                      "json_types": [
                        "string"
                      ]
                    },
                    "allow": {
                      "json": [
                        "..."
                      ]
                    },
                    "append": {
                      "headers": [
                        "..."
                      ],
                      "if_status": [
                        "..."
                      ],
                      "json": [
                        "..."
                      ],
                      "json_types": [
                        "boolean"
                      ]
                    },
                    "dots_in_keys": true,
                    "remove": {
                      "headers": [
                        "..."
                      ],
                      "if_status": [
                        "..."
                      ],
                      "json": [
                        "..."
                      ]
                    },
                    "rename": {
                      "headers": [
                        "..."
                      ],
                      "if_status": [
                        "..."
                      ]
                    },
                    "replace": {
                      "body": "...my_body...",
                      "headers": [
                        "..."
                      ],
                      "if_status": [
                        "..."
                      ],
                      "json": [
                        "..."
                      ],
                      "json_types": [
                        "string"
                      ]
                    },
                    "transform": {
                      "functions": [
                        "..."
                      ],
                      "if_status": [
                        "..."
                      ],
                      "json": [
                        "..."
                      ]
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 0,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9
                }
        argumentDocs:
            access: (List of String)
            add: (Attributes) (see below for nested schema)
            after: (Attributes) (see below for nested schema)
            allow: (Attributes) (see below for nested schema)
            append: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            body: (String) String with which to replace the entire response body.
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            dots_in_keys: (Boolean) Whether dots (for example, customers.info.phone) should be treated as part of a property name or used to descend into nested JSON objects..
            enabled: (Boolean) Whether the plugin is applied.
            functions: (List of String)
            headers: (List of String)
            id: (String) The ID of this resource.
            if_status: (List of String)
            instance_name: (String)
            json: (List of String)
            json_types: (List of String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            remove: (Attributes) (see below for nested schema)
            rename: (Attributes) (see below for nested schema)
            replace: (Attributes) (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            transform: (Attributes) (see below for nested schema)
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_response_transformer_advanced.my_kong-gateway_plugin_response_transformer_advanced ""
    kong-gateway_plugin_route_by_header:
        subCategory: ""
        description: PluginRouteByHeader Resource
        name: kong-gateway_plugin_route_by_header
        title: kong-gateway_plugin_route_by_header Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginroutebyheader
              manifest: |-
                {
                  "config": {
                    "rules": [
                      {
                        "condition": {
                          "key": "${jsonencode(\"value\")}"
                        },
                        "upstream_name": "...my_upstream_name..."
                      }
                    ]
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 6,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 4
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            condition: (Map of String) Not Null
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            rules: (Attributes List) Route by header rules. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_name: (String) Not Null
        importStatements:
            - terraform import kong-gateway_plugin_route_by_header.my_kong-gateway_plugin_route_by_header ""
    kong-gateway_plugin_route_transformer_advanced:
        subCategory: ""
        description: PluginRouteTransformerAdvanced Resource
        name: kong-gateway_plugin_route_transformer_advanced
        title: kong-gateway_plugin_route_transformer_advanced Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginroutetransformeradvanced
              manifest: |-
                {
                  "config": {
                    "escape_path": false,
                    "host": "...my_host...",
                    "path": "...my_path...",
                    "port": "...my_port..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 10,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 3
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            escape_path: (Boolean)
            host: (String)
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            port: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_route_transformer_advanced.my_kong-gateway_plugin_route_transformer_advanced ""
    kong-gateway_plugin_saml:
        subCategory: ""
        description: PluginSaml Resource
        name: kong-gateway_plugin_saml
        title: kong-gateway_plugin_saml Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginsaml
              manifest: |-
                {
                  "config": {
                    "anonymous": "...my_anonymous...",
                    "assertion_consumer_path": "...my_assertion_consumer_path...",
                    "idp_certificate": "...my_idp_certificate...",
                    "idp_sso_url": "...my_idp_sso_url...",
                    "issuer": "...my_issuer...",
                    "nameid_format": "Persistent",
                    "redis": {
                      "cluster_max_redirections": 3,
                      "cluster_nodes": [
                        {
                          "ip": "...my_ip...",
                          "port": 7648
                        }
                      ],
                      "connect_timeout": 65070321,
                      "connection_is_proxied": false,
                      "database": 6,
                      "host": "...my_host...",
                      "keepalive_backlog": 94467675,
                      "keepalive_pool_size": 217828035,
                      "password": "...my_password...",
                      "port": 26967,
                      "prefix": "...my_prefix...",
                      "read_timeout": 1347794726,
                      "send_timeout": 881927296,
                      "sentinel_master": "...my_sentinel_master...",
                      "sentinel_nodes": [
                        {
                          "host": "...my_host...",
                          "port": 34775
                        }
                      ],
                      "sentinel_password": "...my_sentinel_password...",
                      "sentinel_role": "slave",
                      "sentinel_username": "...my_sentinel_username...",
                      "server_name": "...my_server_name...",
                      "socket": "...my_socket...",
                      "ssl": true,
                      "ssl_verify": false,
                      "username": "...my_username..."
                    },
                    "request_digest_algorithm": "SHA1",
                    "request_signature_algorithm": "SHA384",
                    "request_signing_certificate": "...my_request_signing_certificate...",
                    "request_signing_key": "...my_request_signing_key...",
                    "response_digest_algorithm": "SHA256",
                    "response_encryption_key": "...my_response_encryption_key...",
                    "response_signature_algorithm": "SHA512",
                    "session_absolute_timeout": 0.91,
                    "session_audience": "...my_session_audience...",
                    "session_cookie_domain": "...my_session_cookie_domain...",
                    "session_cookie_http_only": false,
                    "session_cookie_name": "...my_session_cookie_name...",
                    "session_cookie_path": "...my_session_cookie_path...",
                    "session_cookie_same_site": "Strict",
                    "session_cookie_secure": true,
                    "session_enforce_same_subject": true,
                    "session_hash_storage_key": false,
                    "session_hash_subject": true,
                    "session_idling_timeout": 9.29,
                    "session_memcached_host": "...my_session_memcached_host...",
                    "session_memcached_port": 27249,
                    "session_memcached_prefix": "...my_session_memcached_prefix...",
                    "session_memcached_socket": "...my_session_memcached_socket...",
                    "session_remember": true,
                    "session_remember_absolute_timeout": 3.51,
                    "session_remember_cookie_name": "...my_session_remember_cookie_name...",
                    "session_remember_rolling_timeout": 6.22,
                    "session_request_headers": [
                      "absolute-timeout"
                    ],
                    "session_response_headers": [
                      "absolute-timeout"
                    ],
                    "session_rolling_timeout": 0.1,
                    "session_secret": "...my_session_secret...",
                    "session_storage": "cookie",
                    "session_store_metadata": false,
                    "validate_assertion_signature": false
                  },
                  "created_at": 6,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 8
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            anonymous: (String) An optional string (consumer UUID or username) value to use as an “anonymous” consumer. If not set, a Kong Consumer must exist for the SAML IdP user credentials, mapping the username format to the Kong Consumer username.
            assertion_consumer_path: (String) A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).
            before: (Attributes) (see below for nested schema)
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            created_at: (Number) Unix epoch when the resource was created.
            database: (Number) Database to use for the Redis connection when using the redis strategy
            enabled: (Boolean) Whether the plugin is applied.
            host: (String) A string representing a host name, such as example.com.
            id: (String) The ID of this resource.
            idp_certificate: (String) The public certificate provided by the IdP. This is used to validate responses from the IdP.  Only include the contents of the certificate. Do not include the header (BEGIN CERTIFICATE) and footer (END CERTIFICATE) lines.
            idp_sso_url: (String) A string representing a URL, such as https://example.com/path/to/resource?q=search.
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            issuer: (String) The unique identifier of the IdP application. Formatted as a URL containing information about the IdP so the SP can validate that the SAML assertions it receives are issued from the correct IdP.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            name: (String)
            nameid_format: '(String) The requested NameId format. Options available are: - Unspecified - EmailAddress - Persistent - Transient. must be one of ["EmailAddress", "Persistent", "Transient", "Unspecified"]'
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            prefix: (String) The Redis session key prefix.
            protocols: (List of String) A set of strings representing HTTP protocols.
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redis: (Attributes) (see below for nested schema)
            request_digest_algorithm: '(String) The digest algorithm for Authn requests: - SHA256 - SHA1. must be one of ["SHA1", "SHA256"]'
            request_signature_algorithm: '(String) The signature algorithm for signing Authn requests. Options available are: - SHA256 - SHA384 - SHA512. must be one of ["SHA256", "SHA384", "SHA512"]'
            request_signing_certificate: (String) The certificate for signing requests.
            request_signing_key: (String) The private key for signing requests.  If this parameter is set, requests sent to the IdP are signed.  The request_signing_certificate parameter must be set as well.
            response_digest_algorithm: '(String) The algorithm for verifying digest in SAML responses: - SHA256 - SHA1. must be one of ["SHA1", "SHA256"]'
            response_encryption_key: (String) The private encryption key required to decrypt encrypted assertions.
            response_signature_algorithm: '(String) The algorithm for validating signatures in SAML responses. Options available are: - SHA256 - SHA384 - SHA512. must be one of ["SHA256", "SHA384", "SHA512"]'
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            session_absolute_timeout: (Number) The session cookie absolute timeout in seconds. Specifies how long the session can be used until it is no longer valid.
            session_audience: (String) The session audience, for example "my-application"
            session_cookie_domain: (String) The session cookie domain flag.
            session_cookie_http_only: (Boolean) Forbids JavaScript from accessing the cookie, for example, through the Document.cookie property.
            session_cookie_name: (String) The session cookie name.
            session_cookie_path: (String) A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).
            session_cookie_same_site: (String) Controls whether a cookie is sent with cross-origin requests, providing some protection against cross-site request forgery attacks. must be one of ["Default", "Lax", "None", "Strict"]
            session_cookie_secure: (Boolean) The cookie is only sent to the server when a request is made with the https:scheme (except on localhost), and therefore is more resistant to man-in-the-middle attacks.
            session_enforce_same_subject: (Boolean) When set to true, audiences are forced to share the same subject.
            session_hash_storage_key: (Boolean) When set to true, the storage key (session ID) is hashed for extra security. Hashing the storage key means it is impossible to decrypt data from the storage without a cookie.
            session_hash_subject: (Boolean) When set to true, the value of subject is hashed before being stored. Only applies when session_store_metadata is enabled.
            session_idling_timeout: (Number) The session cookie idle time in seconds.
            session_memcached_host: (String) The memcached host.
            session_memcached_port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            session_memcached_prefix: (String) The memcached session key prefix.
            session_memcached_socket: (String) The memcached unix socket path.
            session_remember: (Boolean) Enables or disables persistent sessions
            session_remember_absolute_timeout: (Number) Persistent session absolute timeout in seconds.
            session_remember_cookie_name: (String) Persistent session cookie name
            session_remember_rolling_timeout: (Number) Persistent session rolling timeout in seconds.
            session_request_headers: (List of String)
            session_response_headers: (List of String)
            session_rolling_timeout: (Number) The session cookie absolute timeout in seconds. Specifies how long the session can be used until it is no longer valid.
            session_secret: (String) The session secret. This must be a random string of 32 characters from the base64 alphabet (letters, numbers, /, _ and +). It is used as the secret key for encrypting session data as well as state information that is sent to the IdP in the authentication exchange.
            session_storage: '(String) The session storage for session data: - cookie: stores session data with the session cookie. The session cannot be invalidated or revoked without changing the session secret, but is stateless, and doesn''t require a database. - memcached: stores session data in memcached - redis: stores session data in Redis. must be one of ["cookie", "memcache", "memcached", "redis"]'
            session_store_metadata: (Boolean) Configures whether or not session metadata should be stored. This includes information about the active sessions for the specific_audience belonging to a specific subject.
            socket: (String) The Redis unix socket path.
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_verify: (Boolean) If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure lua_ssl_trusted_certificate in kong.conf to specify the CA (or server) certificate used by your Redis server. You may also need to configure lua_ssl_verify_depth accordingly.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            validate_assertion_signature: (Boolean) Enable signature validation for SAML responses.
        importStatements:
            - terraform import kong-gateway_plugin_saml.my_kong-gateway_plugin_saml ""
    kong-gateway_plugin_service_protection:
        subCategory: ""
        description: PluginServiceProtection Resource
        name: kong-gateway_plugin_service_protection
        title: kong-gateway_plugin_service_protection Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginserviceprotection
              manifest: |-
                {
                  "config": {
                    "dictionary_name": "...my_dictionary_name...",
                    "disable_penalty": false,
                    "error_code": 2.38,
                    "error_message": "...my_error_message...",
                    "hide_client_headers": false,
                    "limit": [
                      3.7
                    ],
                    "lock_dictionary_name": "...my_lock_dictionary_name...",
                    "namespace": "...my_namespace...",
                    "redis": {
                      "cluster_max_redirections": 2,
                      "cluster_nodes": [
                        {
                          "ip": "...my_ip...",
                          "port": 43795
                        }
                      ],
                      "connect_timeout": 397224056,
                      "connection_is_proxied": true,
                      "database": 0,
                      "host": "...my_host...",
                      "keepalive_backlog": 861259414,
                      "keepalive_pool_size": 1061613826,
                      "password": "...my_password...",
                      "port": 24384,
                      "read_timeout": 857591749,
                      "send_timeout": 214850559,
                      "sentinel_master": "...my_sentinel_master...",
                      "sentinel_nodes": [
                        {
                          "host": "...my_host...",
                          "port": 23247
                        }
                      ],
                      "sentinel_password": "...my_sentinel_password...",
                      "sentinel_role": "slave",
                      "sentinel_username": "...my_sentinel_username...",
                      "server_name": "...my_server_name...",
                      "ssl": true,
                      "ssl_verify": false,
                      "username": "...my_username..."
                    },
                    "retry_after_jitter_max": 5.19,
                    "strategy": "local",
                    "sync_rate": 5.52,
                    "window_size": [
                      4.13
                    ],
                    "window_type": "fixed"
                  },
                  "created_at": 7,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            created_at: (Number) Unix epoch when the resource was created.
            database: (Number) Database to use for the Redis connection when using the redis strategy
            dictionary_name: (String) The shared dictionary where counters are stored. When the plugin is configured to synchronize counter data externally (that is config.strategy is cluster or redis and config.sync_rate isn't -1), this dictionary serves as a buffer to populate counters in the data store on each synchronization cycle.
            disable_penalty: (Boolean) If set to true, this doesn't count denied requests (status = 429). If set to false, all requests, including denied ones, are counted. This parameter only affects the sliding window_type.
            enabled: (Boolean) Whether the plugin is applied.
            error_code: (Number) Set a custom error code to return when the rate limit is exceeded.
            error_message: (String) Set a custom error message to return when the rate limit is exceeded.
            hide_client_headers: (Boolean) Optionally hide informative response headers that would otherwise provide information about the current status of limits and counters.
            host: (String) A string representing a host name, such as example.com.
            id: (String) The ID of this resource.
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            limit: (List of Number) One or more requests-per-window limits to apply. There must be a matching number of window limits and sizes specified.
            lock_dictionary_name: (String) The shared dictionary where concurrency control locks are stored. The default shared dictionary is kong_locks. The shared dictionary should be declared in nginx-kong.conf.
            name: (String)
            namespace: '(String) The rate limiting library namespace to use for this plugin instance. Counter data and sync configuration is isolated in each namespace. NOTE: For the plugin instances sharing the same namespace, all the configurations that are required for synchronizing counters, e.g. strategy, redis, sync_rate, dictionary_name, need to be the same.'
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing HTTP protocols.
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redis: (Attributes) (see below for nested schema)
            retry_after_jitter_max: (Number) The upper bound of a jitter (random delay) in seconds to be added to the Retry-After header of denied requests (status = 429) in order to prevent all the clients from coming back at the same time. The lower bound of the jitter is 0; in this case, the Retry-After header is equal to the RateLimit-Reset header.
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_verify: (Boolean) If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure lua_ssl_trusted_certificate in kong.conf to specify the CA (or server) certificate used by your Redis server. You may also need to configure lua_ssl_verify_depth accordingly.
            strategy: '(String) The rate-limiting strategy to use for retrieving and incrementing the limits. Available values are: local and cluster. must be one of ["cluster", "local", "redis"]'
            sync_rate: (Number) How often to sync counter data to the central data store. A value of 0 results in synchronous behavior; a value of -1 ignores sync behavior entirely and only stores counters in node memory. A value greater than 0 will sync the counters in the specified number of seconds. The minimum allowed interval is 0.02 seconds (20ms).
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
            window_size: (List of Number) One or more window sizes to apply a limit to (defined in seconds). There must be a matching number of window limits and sizes specified.
            window_type: (String) Sets the time window type to either sliding (default) or fixed. Sliding windows apply the rate limiting logic while taking into account previous hit rates (from the window that immediately precedes the current) using a dynamic weight. Fixed windows consist of buckets that are statically assigned to a definitive time range, each request is mapped to only one fixed window based on its timestamp and will affect only that window's counters. must be one of ["fixed", "sliding"]
        importStatements:
            - terraform import kong-gateway_plugin_service_protection.my_kong-gateway_plugin_service_protection ""
    kong-gateway_plugin_session:
        subCategory: ""
        description: PluginSession Resource
        name: kong-gateway_plugin_session
        title: kong-gateway_plugin_session Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginsession
              manifest: |-
                {
                  "config": {
                    "absolute_timeout": 3.79,
                    "audience": "...my_audience...",
                    "cookie_domain": "...my_cookie_domain...",
                    "cookie_http_only": false,
                    "cookie_name": "...my_cookie_name...",
                    "cookie_path": "...my_cookie_path...",
                    "cookie_same_site": "Strict",
                    "cookie_secure": false,
                    "hash_subject": true,
                    "idling_timeout": 0.19,
                    "logout_methods": [
                      "GET"
                    ],
                    "logout_post_arg": "...my_logout_post_arg...",
                    "logout_query_arg": "...my_logout_query_arg...",
                    "read_body_for_logout": false,
                    "remember": false,
                    "remember_absolute_timeout": 4.46,
                    "remember_cookie_name": "...my_remember_cookie_name...",
                    "remember_rolling_timeout": 6.15,
                    "request_headers": [
                      "id"
                    ],
                    "response_headers": [
                      "subject"
                    ],
                    "rolling_timeout": 8.85,
                    "secret": "...my_secret...",
                    "stale_ttl": 7.29,
                    "storage": "cookie",
                    "store_metadata": true
                  },
                  "created_at": 1,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "wss"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 4
                }
        argumentDocs:
            absolute_timeout: (Number) The session cookie absolute timeout, in seconds. Specifies how long the session can be used until it is no longer valid.
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            audience: (String) The session audience, which is the intended target application. For example "my-application".
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            cookie_domain: (String) The domain with which the cookie is intended to be exchanged.
            cookie_http_only: (Boolean) Applies the HttpOnly tag so that the cookie is sent only to a server.
            cookie_name: (String) The name of the cookie.
            cookie_path: (String) The resource in the host where the cookie is available.
            cookie_same_site: (String) Determines whether and how a cookie may be sent with cross-site requests. must be one of ["Default", "Lax", "None", "Strict"]
            cookie_secure: (Boolean) Applies the Secure directive so that the cookie may be sent to the server only with an encrypted request over the HTTPS protocol.
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            hash_subject: (Boolean) Whether to hash or not the subject when store_metadata is enabled.
            id: (String) The ID of this resource.
            idling_timeout: (Number) The session cookie idle time, in seconds.
            instance_name: (String)
            logout_methods: (List of String) A set of HTTP methods that the plugin will respond to.
            logout_post_arg: (String) The POST argument passed to logout requests. Do not change this property.
            logout_query_arg: (String) The query argument passed to logout requests.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing protocols.
            read_body_for_logout: (Boolean)
            remember: (Boolean) Enables or disables persistent sessions.
            remember_absolute_timeout: (Number) The persistent session absolute timeout limit, in seconds.
            remember_cookie_name: (String) Persistent session cookie name. Use with the remember configuration parameter.
            remember_rolling_timeout: (Number) The persistent session rolling timeout window, in seconds.
            request_headers: (List of String) List of information to include, as headers, in the response to the downstream.
            response_headers: (List of String) List of information to include, as headers, in the response to the downstream.
            rolling_timeout: (Number) The session cookie rolling timeout, in seconds. Specifies how long the session can be used until it needs to be renewed.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            secret: (String) The secret that is used in keyed HMAC generation.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            stale_ttl: (Number) The duration, in seconds, after which an old cookie is discarded, starting from the moment when the session becomes outdated and is replaced by a new one.
            storage: '(String) Determines where the session data is stored. kong: Stores encrypted session data into Kong''s current database strategy; the cookie will not contain any session data. cookie: Stores encrypted session data within the cookie itself. must be one of ["cookie", "kong"]'
            store_metadata: (Boolean) Whether to also store metadata of sessions, such as collecting data of sessions for a specific audience belonging to a specific subject.
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_session.my_kong-gateway_plugin_session ""
    kong-gateway_plugin_standard_webhooks:
        subCategory: ""
        description: PluginStandardWebhooks Resource
        name: kong-gateway_plugin_standard_webhooks
        title: kong-gateway_plugin_standard_webhooks Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginstandardwebhooks
              manifest: |-
                {
                  "config": {
                    "secret_v1": "...my_secret_v1...",
                    "tolerance_second": 1
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 6,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            secret_v1: (String) Webhook secret
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            tolerance_second: (Number) Tolerance of the webhook timestamp in seconds. If the webhook timestamp is older than this number of seconds, it will be rejected with a '400' response.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_standard_webhooks.my_kong-gateway_plugin_standard_webhooks ""
    kong-gateway_plugin_statsd:
        subCategory: ""
        description: PluginStatsd Resource
        name: kong-gateway_plugin_statsd
        title: kong-gateway_plugin_statsd Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginstatsd
              manifest: |-
                {
                  "config": {
                    "allow_status_codes": [
                      "..."
                    ],
                    "consumer_identifier_default": "custom_id",
                    "flush_timeout": 9.44,
                    "host": "...my_host...",
                    "hostname_in_prefix": true,
                    "metrics": [
                      {
                        "consumer_identifier": "consumer_id",
                        "name": "response_size",
                        "sample_rate": 5.98,
                        "service_identifier": "service_name_or_host",
                        "stat_type": "meter",
                        "workspace_identifier": "workspace_name"
                      }
                    ],
                    "port": 4402,
                    "prefix": "...my_prefix...",
                    "queue": {
                      "concurrency_limit": 1,
                      "initial_retry_delay": 183991.51,
                      "max_batch_size": 606114,
                      "max_bytes": 8,
                      "max_coalescing_delay": 1232.72,
                      "max_entries": 250059,
                      "max_retry_delay": 87152,
                      "max_retry_time": 1.64
                    },
                    "queue_size": 7,
                    "retry_count": 9,
                    "service_identifier_default": "service_id",
                    "tag_style": "librato",
                    "udp_packet_size": 42127.85,
                    "use_tcp": true,
                    "workspace_identifier_default": "workspace_id"
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 7,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 4
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_status_codes: (List of String) List of status code ranges that are allowed to be logged in metrics.
            before: (Attributes) (see below for nested schema)
            concurrency_limit: (Number) The number of of queue delivery timers. -1 indicates unlimited. must be one of ["-1", "1"]
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_identifier: (String) Authenticated user detail. must be one of ["consumer_id", "custom_id", "username"]
            consumer_identifier_default: (String) must be one of ["consumer_id", "custom_id", "username"]
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            flush_timeout: (Number)
            host: (String) The IP address or hostname of StatsD server to send data to.
            hostname_in_prefix: (Boolean)
            id: (String) The ID of this resource.
            initial_retry_delay: (Number) Time in seconds before the initial retry is made for a failing batch.
            instance_name: (String)
            max_batch_size: (Number) Maximum number of entries that can be processed at a time.
            max_bytes: (Number) Maximum number of bytes that can be waiting on a queue, requires string content.
            max_coalescing_delay: (Number) Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler.
            max_entries: (Number) Maximum number of entries that can be waiting on the queue.
            max_retry_delay: (Number) Maximum time in seconds between retries, caps exponential backoff.
            max_retry_time: (Number) Time in seconds before the queue gives up calling a failed handler for a batch.
            metrics: (Attributes List) List of metrics to be logged. (see below for nested schema)
            name: (String) StatsD metric’s name. Not Null; must be one of ["cache_datastore_hits_total", "cache_datastore_misses_total", "kong_latency", "latency", "request_count", "request_per_user", "request_size", "response_size", "shdict_usage", "status_count", "status_count_per_user", "status_count_per_user_per_route", "status_count_per_workspace", "unique_users", "upstream_latency"]
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            port: (Number) The port of StatsD server to send data to.
            prefix: (String) String to prefix to each metric's name.
            protocols: (List of String) A set of strings representing protocols.
            queue: (Attributes) (see below for nested schema)
            queue_size: (Number)
            retry_count: (Number)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            sample_rate: (Number) Sampling rate
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            service_identifier: (String) Service detail. must be one of ["service_host", "service_id", "service_name", "service_name_or_host"]
            service_identifier_default: (String) must be one of ["service_host", "service_id", "service_name", "service_name_or_host"]
            stat_type: (String) Determines what sort of event a metric represents. Not Null; must be one of ["counter", "gauge", "histogram", "meter", "set", "timer"]
            tag_style: (String) must be one of ["dogstatsd", "influxdb", "librato", "signalfx"]
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            udp_packet_size: (Number)
            updated_at: (Number) Unix epoch when the resource was last updated.
            use_tcp: (Boolean)
            workspace_identifier: (String) Workspace detail. must be one of ["workspace_id", "workspace_name"]
            workspace_identifier_default: (String) must be one of ["workspace_id", "workspace_name"]
        importStatements:
            - terraform import kong-gateway_plugin_statsd.my_kong-gateway_plugin_statsd ""
    kong-gateway_plugin_statsd_advanced:
        subCategory: ""
        description: PluginStatsdAdvanced Resource
        name: kong-gateway_plugin_statsd_advanced
        title: kong-gateway_plugin_statsd_advanced Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginstatsdadvanced
              manifest: |-
                {
                  "config": {
                    "allow_status_codes": [
                      "..."
                    ],
                    "consumer_identifier_default": "username",
                    "host": "...my_host...",
                    "hostname_in_prefix": false,
                    "metrics": [
                      {
                        "consumer_identifier": "custom_id",
                        "name": "cache_datastore_hits_total",
                        "sample_rate": 1.34,
                        "service_identifier": "service_id",
                        "stat_type": "histogram",
                        "workspace_identifier": "workspace_name"
                      }
                    ],
                    "port": 10205,
                    "prefix": "...my_prefix...",
                    "queue": {
                      "concurrency_limit": 4,
                      "initial_retry_delay": 290938.39,
                      "max_batch_size": 791068,
                      "max_bytes": 2,
                      "max_coalescing_delay": 1508.81,
                      "max_entries": 558736,
                      "max_retry_delay": 818553.89,
                      "max_retry_time": 4.4
                    },
                    "service_identifier_default": "service_name_or_host",
                    "udp_packet_size": 21502.96,
                    "use_tcp": true,
                    "workspace_identifier_default": "workspace_name"
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 10,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "tls_passthrough"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 1
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_status_codes: (List of String) List of status code ranges that are allowed to be logged in metrics.
            before: (Attributes) (see below for nested schema)
            concurrency_limit: (Number) The number of of queue delivery timers. -1 indicates unlimited. must be one of ["-1", "1"]
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_identifier: (String) must be one of ["consumer_id", "custom_id", "username"]
            consumer_identifier_default: (String) The default consumer identifier for metrics. This will take effect when a metric's consumer identifier is omitted. Allowed values are custom_id, consumer_id, username. must be one of ["consumer_id", "custom_id", "username"]
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            host: (String) A string representing a host name, such as example.com.
            hostname_in_prefix: (Boolean) Include the hostname in the prefix for each metric name.
            id: (String) The ID of this resource.
            initial_retry_delay: (Number) Time in seconds before the initial retry is made for a failing batch.
            instance_name: (String)
            max_batch_size: (Number) Maximum number of entries that can be processed at a time.
            max_bytes: (Number) Maximum number of bytes that can be waiting on a queue, requires string content.
            max_coalescing_delay: (Number) Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler.
            max_entries: (Number) Maximum number of entries that can be waiting on the queue.
            max_retry_delay: (Number) Maximum time in seconds between retries, caps exponential backoff.
            max_retry_time: (Number) Time in seconds before the queue gives up calling a failed handler for a batch.
            metrics: (Attributes List) List of Metrics to be logged. (see below for nested schema)
            name: (String) Not Null; must be one of ["cache_datastore_hits_total", "cache_datastore_misses_total", "kong_latency", "latency", "request_count", "request_per_user", "request_size", "response_size", "shdict_usage", "status_count", "status_count_per_user", "status_count_per_user_per_route", "status_count_per_workspace", "unique_users", "upstream_latency"]
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            prefix: (String) String to prefix to each metric's name.
            protocols: (List of String) A set of strings representing protocols.
            queue: (Attributes) (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            sample_rate: (Number)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            service_identifier: (String) must be one of ["service_host", "service_id", "service_name", "service_name_or_host"]
            service_identifier_default: (String) The default service identifier for metrics. This will take effect when a metric's service identifier is omitted. Allowed values are service_name_or_host, service_id, service_name, service_host. must be one of ["service_host", "service_id", "service_name", "service_name_or_host"]
            stat_type: (String) Not Null; must be one of ["counter", "gauge", "histogram", "meter", "set", "timer"]
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            udp_packet_size: (Number) Combine UDP packet up to the size configured. If zero (0), don't combine the UDP packet. Must be a number between 0 and 65507 (inclusive).
            updated_at: (Number) Unix epoch when the resource was last updated.
            use_tcp: (Boolean) Use TCP instead of UDP.
            workspace_identifier: (String) must be one of ["workspace_id", "workspace_name"]
            workspace_identifier_default: (String) The default workspace identifier for metrics. This will take effect when a metric's workspace identifier is omitted. Allowed values are workspace_id, workspace_name. must be one of ["workspace_id", "workspace_name"]
        importStatements:
            - terraform import kong-gateway_plugin_statsd_advanced.my_kong-gateway_plugin_statsd_advanced ""
    kong-gateway_plugin_syslog:
        subCategory: ""
        description: PluginSyslog Resource
        name: kong-gateway_plugin_syslog
        title: kong-gateway_plugin_syslog Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginsyslog
              manifest: |-
                {
                  "config": {
                    "client_errors_severity": "crit",
                    "custom_fields_by_lua": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "facility": "user",
                    "log_level": "info",
                    "server_errors_severity": "alert",
                    "successful_severity": "notice"
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 9,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "tls_passthrough"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 6
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            client_errors_severity: (String) must be one of ["alert", "crit", "debug", "emerg", "err", "info", "notice", "warning"]
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            custom_fields_by_lua: (Map of String) Lua code as a key-value map
            enabled: (Boolean) Whether the plugin is applied.
            facility: (String) The facility is used by the operating system to decide how to handle each log message. must be one of ["auth", "authpriv", "cron", "daemon", "ftp", "kern", "local0", "local1", "local2", "local3", "local4", "local5", "local6", "local7", "lpr", "mail", "news", "syslog", "user", "uucp"]
            id: (String) The ID of this resource.
            instance_name: (String)
            log_level: (String) must be one of ["alert", "crit", "debug", "emerg", "err", "info", "notice", "warning"]
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            server_errors_severity: (String) must be one of ["alert", "crit", "debug", "emerg", "err", "info", "notice", "warning"]
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            successful_severity: (String) must be one of ["alert", "crit", "debug", "emerg", "err", "info", "notice", "warning"]
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_syslog.my_kong-gateway_plugin_syslog ""
    kong-gateway_plugin_tcp_log:
        subCategory: ""
        description: PluginTCPLog Resource
        name: kong-gateway_plugin_tcp_log
        title: kong-gateway_plugin_tcp_log Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugintcplog
              manifest: |-
                {
                  "config": {
                    "custom_fields_by_lua": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "host": "...my_host...",
                    "keepalive": 5.51,
                    "port": 64594,
                    "timeout": 6.84,
                    "tls": false,
                    "tls_sni": "...my_tls_sni..."
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 0,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "tcp"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 7
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            custom_fields_by_lua: (Map of String) A list of key-value pairs, where the key is the name of a log field and the value is a chunk of Lua code, whose return value sets or replaces the log field value.
            enabled: (Boolean) Whether the plugin is applied.
            host: (String) The IP address or host name to send data to.
            id: (String) The ID of this resource.
            instance_name: (String)
            keepalive: (Number) An optional value in milliseconds that defines how long an idle connection lives before being closed.
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            port: (Number) The port to send data to on the upstream server.
            protocols: (List of String) A set of strings representing protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) An optional timeout in milliseconds when sending data to the upstream server.
            tls: (Boolean) Indicates whether to perform a TLS handshake against the remote server.
            tls_sni: (String) An optional string that defines the SNI (Server Name Indication) hostname to send in the TLS handshake.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_tcp_log.my_kong-gateway_plugin_tcp_log ""
    kong-gateway_plugin_tls_handshake_modifier:
        subCategory: ""
        description: PluginTLSHandshakeModifier Resource
        name: kong-gateway_plugin_tls_handshake_modifier
        title: kong-gateway_plugin_tls_handshake_modifier Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugintlshandshakemodifier
              manifest: |-
                {
                  "config": {
                    "tls_client_certificate": "REQUEST"
                  },
                  "created_at": 5,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 9
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            tls_client_certificate: (String) TLS Client Certificate. must be "REQUEST"
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_tls_handshake_modifier.my_kong-gateway_plugin_tls_handshake_modifier ""
    kong-gateway_plugin_tls_metadata_headers:
        subCategory: ""
        description: PluginTLSMetadataHeaders Resource
        name: kong-gateway_plugin_tls_metadata_headers
        title: kong-gateway_plugin_tls_metadata_headers Resource - terraform-provider-kong-gateway
        examples:
            - name: my_plugintlsmetadataheaders
              manifest: |-
                {
                  "config": {
                    "client_cert_fingerprint_header_name": "...my_client_cert_fingerprint_header_name...",
                    "client_cert_header_name": "...my_client_cert_header_name...",
                    "client_cert_issuer_dn_header_name": "...my_client_cert_issuer_dn_header_name...",
                    "client_cert_subject_dn_header_name": "...my_client_cert_subject_dn_header_name...",
                    "client_serial_header_name": "...my_client_serial_header_name...",
                    "inject_client_cert_details": true
                  },
                  "created_at": 8,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 10
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            client_cert_fingerprint_header_name: (String) Define the HTTP header name used for the SHA1 fingerprint of the client certificate.
            client_cert_header_name: (String) Define the HTTP header name used for the PEM format URL encoded client certificate.
            client_cert_issuer_dn_header_name: (String) Define the HTTP header name used for the issuer DN of the client certificate.
            client_cert_subject_dn_header_name: (String) Define the HTTP header name used for the subject DN of the client certificate.
            client_serial_header_name: (String) Define the HTTP header name used for the serial number of the client certificate.
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            inject_client_cert_details: (Boolean) Enables TLS client certificate metadata values to be injected into HTTP headers.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_tls_metadata_headers.my_kong-gateway_plugin_tls_metadata_headers ""
    kong-gateway_plugin_udp_log:
        subCategory: ""
        description: PluginUDPLog Resource
        name: kong-gateway_plugin_udp_log
        title: kong-gateway_plugin_udp_log Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginudplog
              manifest: |-
                {
                  "config": {
                    "custom_fields_by_lua": {
                      "key": "${jsonencode(\"value\")}"
                    },
                    "host": "...my_host...",
                    "port": 6547,
                    "timeout": 0.75
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpc"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 2
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            custom_fields_by_lua: (Map of String) Lua code as a key-value map
            enabled: (Boolean) Whether the plugin is applied.
            host: (String) A string representing a host name, such as example.com.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) An optional timeout in milliseconds when sending data to the upstream server.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_udp_log.my_kong-gateway_plugin_udp_log ""
    kong-gateway_plugin_upstream_oauth:
        subCategory: ""
        description: PluginUpstreamOauth Resource
        name: kong-gateway_plugin_upstream_oauth
        title: kong-gateway_plugin_upstream_oauth Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginupstreamoauth
              manifest: |-
                {
                  "config": {
                    "behavior": {
                      "idp_error_response_body_template": "...my_idp_error_response_body_template...",
                      "idp_error_response_content_type": "...my_idp_error_response_content_type...",
                      "idp_error_response_message": "...my_idp_error_response_message...",
                      "idp_error_response_status_code": 534,
                      "purge_token_on_upstream_status_codes": [
                        446
                      ],
                      "upstream_access_token_header_name": "...my_upstream_access_token_header_name..."
                    },
                    "cache": {
                      "default_ttl": 3.28,
                      "eagerly_expire": 4,
                      "memory": {
                        "dictionary_name": "...my_dictionary_name..."
                      },
                      "redis": {
                        "cluster_max_redirections": 0,
                        "cluster_nodes": [
                          {
                            "ip": "...my_ip...",
                            "port": 15113
                          }
                        ],
                        "connect_timeout": 1726421689,
                        "connection_is_proxied": true,
                        "database": 6,
                        "host": "...my_host...",
                        "keepalive_backlog": 852820655,
                        "keepalive_pool_size": 971428883,
                        "password": "...my_password...",
                        "port": 7102,
                        "read_timeout": 1638729991,
                        "send_timeout": 1193078975,
                        "sentinel_master": "...my_sentinel_master...",
                        "sentinel_nodes": [
                          {
                            "host": "...my_host...",
                            "port": 18252
                          }
                        ],
                        "sentinel_password": "...my_sentinel_password...",
                        "sentinel_role": "slave",
                        "sentinel_username": "...my_sentinel_username...",
                        "server_name": "...my_server_name...",
                        "ssl": true,
                        "ssl_verify": true,
                        "username": "...my_username..."
                      },
                      "strategy": "memory"
                    },
                    "client": {
                      "auth_method": "none",
                      "client_secret_jwt_alg": "HS256",
                      "http_proxy": "...my_http_proxy...",
                      "http_proxy_authorization": "...my_http_proxy_authorization...",
                      "http_version": 9.5,
                      "https_proxy": "...my_https_proxy...",
                      "https_proxy_authorization": "...my_https_proxy_authorization...",
                      "keep_alive": false,
                      "no_proxy": "...my_no_proxy...",
                      "ssl_verify": true,
                      "timeout": 879502889
                    },
                    "oauth": {
                      "audience": [
                        "..."
                      ],
                      "client_id": "...my_client_id...",
                      "client_secret": "...my_client_secret...",
                      "grant_type": "client_credentials",
                      "password": "...my_password...",
                      "scopes": [
                        "..."
                      ],
                      "token_endpoint": "...my_token_endpoint...",
                      "token_headers": {
                        "key": "${jsonencode(\"value\")}"
                      },
                      "token_post_args": {
                        "key": "${jsonencode(\"value\")}"
                      },
                      "username": "...my_username..."
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "consumer_group": {
                    "id": "...my_id..."
                  },
                  "created_at": 4,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 8
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            audience: (List of String) List of audiences passed to the IdP when obtaining a new token.
            auth_method: '(String) The authentication method used in client requests to the IdP. Supported values are: client_secret_basic to send client_id and client_secret in the Authorization: Basic header, client_secret_post to send client_id and client_secret as part of the request body, or client_secret_jwt to send a JWT signed with the client_secret using the client assertion as part of the body. must be one of ["client_secret_basic", "client_secret_jwt", "client_secret_post", "none"]'
            before: (Attributes) (see below for nested schema)
            behavior: (Attributes) (see below for nested schema)
            cache: (Attributes) (see below for nested schema)
            client: (Attributes) (see below for nested schema)
            client_id: (String) The client ID for the application registration in the IdP.
            client_secret: (String) The client secret for the application registration in the IdP.
            client_secret_jwt_alg: (String) The algorithm to use with JWT when using client_secret_jwt authentication. must be one of ["HS256", "HS512"]
            cluster_max_redirections: (Number) Maximum retry attempts for redirection.
            cluster_nodes: (Attributes List) Cluster addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element. (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            connection_is_proxied: (Boolean) If the connection to Redis is proxied (e.g. Envoy), set it true. Set the host and port to point to the proxy address.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            consumer_group: (Attributes) If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            database: (Number) Database to use for the Redis connection when using the redis strategy
            default_ttl: (Number) The lifetime of a token without an explicit expires_in value.
            dictionary_name: (String) The shared dictionary used by the plugin to cache tokens if config.cache.strategy is set to memory.
            eagerly_expire: (Number) The number of seconds to eagerly expire a cached token. By default, a cached token expires 5 seconds before its lifetime as defined in expires_in.
            enabled: (Boolean) Whether the plugin is applied.
            grant_type: (String) The OAuth grant type to be used. must be one of ["client_credentials", "password"]
            host: (String) A string representing a host name, such as example.com.
            http_proxy: (String) The proxy to use when making HTTP requests to the IdP.
            http_proxy_authorization: (String) The Proxy-Authorization header value to be used with http_proxy.
            http_version: '(Number) The HTTP version used for requests made by this plugin. Supported values: 1.1 for HTTP 1.1 and 1.0 for HTTP 1.0.'
            https_proxy: (String) The proxy to use when making HTTPS requests to the IdP.
            https_proxy_authorization: (String) The Proxy-Authorization header value to be used with https_proxy.
            id: (String) The ID of this resource.
            idp_error_response_body_template: (String) The template to use to create the body of the response to return to the consumer if Kong fails to obtain a token from the IdP.
            idp_error_response_content_type: (String) The Content-Type of the response to return to the consumer if Kong fails to obtain a token from the IdP.
            idp_error_response_message: (String) The message to embed in the body of the response to return to the consumer if Kong fails to obtain a token from the IdP.
            idp_error_response_status_code: (Number) The response code to return to the consumer if Kong fails to obtain a token from the IdP.
            instance_name: (String)
            ip: (String) A string representing a host name, such as example.com.
            keep_alive: (Boolean) Whether to use keepalive connections to the IdP.
            keepalive_backlog: (Number) Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return nil. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than keepalive_pool_size. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than keepalive_pool_size.
            keepalive_pool_size: (Number) The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither keepalive_pool_size nor keepalive_backlog is specified, no pool is created. If keepalive_pool_size isn't specified but keepalive_backlog is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.
            memory: (Attributes) (see below for nested schema)
            name: (String)
            no_proxy: (String) A comma-separated list of hosts that should not be proxied.
            oauth: (Attributes) (see below for nested schema)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            password: (String) Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.
            path: (String)
            port: (Number) An integer representing a port number between 0 and 65535, inclusive.
            protocols: (List of String) A set of strings representing HTTP protocols.
            purge_token_on_upstream_status_codes: (List of Number) An array of status codes which will force an access token to be purged when returned by the upstream. An empty array will disable this functionality.
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            redis: (Attributes) (see below for nested schema)
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            scopes: (List of String) List of scopes to request from the IdP when obtaining a new token.
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            sentinel_master: (String) Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.
            sentinel_nodes: (Attributes List) Sentinel node addresses to use for Redis connections when the redis strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element. (see below for nested schema)
            sentinel_password: (String) Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.
            sentinel_role: (String) Sentinel role to use for Redis connections when the redis strategy is defined. Defining this value implies using Redis Sentinel. must be one of ["any", "master", "slave"]
            sentinel_username: (String) Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.
            server_name: (String) A string representing an SNI (server name indication) value for TLS.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            ssl: (Boolean) If set to true, uses SSL to connect to Redis.
            ssl_verify: (Boolean) If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure lua_ssl_trusted_certificate in kong.conf to specify the CA (or server) certificate used by your Redis server. You may also need to configure lua_ssl_verify_depth accordingly.
            strategy: (String) The method Kong should use to cache tokens issued by the IdP. must be one of ["memory", "redis"]
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            timeout: (Number) Network I/O timeout for requests to the IdP in milliseconds.
            token_endpoint: (String) The token endpoint URI.
            token_headers: (Map of String) Extra headers to be passed in the token endpoint request.
            token_post_args: (Map of String) Extra post arguments to be passed in the token endpoint request.
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_access_token_header_name: (String) The name of the header used to send the access token (obtained from the IdP) to the upstream service.
            username: (String) Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to default.
        importStatements:
            - terraform import kong-gateway_plugin_upstream_oauth.my_kong-gateway_plugin_upstream_oauth ""
    kong-gateway_plugin_upstream_timeout:
        subCategory: ""
        description: PluginUpstreamTimeout Resource
        name: kong-gateway_plugin_upstream_timeout
        title: kong-gateway_plugin_upstream_timeout Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginupstreamtimeout
              manifest: |-
                {
                  "config": {
                    "connect_timeout": 1708271431,
                    "read_timeout": 1931855615,
                    "send_timeout": 1139545232
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 6,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "grpcs"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 4
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_upstream_timeout.my_kong-gateway_plugin_upstream_timeout ""
    kong-gateway_plugin_vault_auth:
        subCategory: ""
        description: PluginVaultAuth Resource
        name: kong-gateway_plugin_vault_auth
        title: kong-gateway_plugin_vault_auth Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginvaultauth
              manifest: |-
                {
                  "config": {
                    "access_token_name": "...my_access_token_name...",
                    "anonymous": "...my_anonymous...",
                    "hide_credentials": true,
                    "run_on_preflight": false,
                    "secret_token_name": "...my_secret_token_name...",
                    "tokens_in_body": false,
                    "vault": "...my_vault..."
                  },
                  "created_at": 10,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            access_token_name: (String) Describes an array of comma-separated parameter names where the plugin looks for an access token. The client must send the access token in one of those key names, and the plugin will try to read the credential from a header or the querystring parameter with the same name. The key names can only contain [a-z], [A-Z], [0-9], [_], and [-].
            after: (Attributes) (see below for nested schema)
            anonymous: (String) An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request fails with an authentication failure 4xx. Note that this value must refer to the consumer id or username attribute, and not its custom_id.
            before: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            hide_credentials: (Boolean) An optional boolean value telling the plugin to show or hide the credential from the upstream service. If true, the plugin will strip the credential from the request (i.e. the header or querystring containing the key) before proxying it.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            run_on_preflight: (Boolean) A boolean value that indicates whether the plugin should run (and try to authenticate) on OPTIONS preflight requests. If set to false, then OPTIONS requests will always be allowed.
            secret_token_name: (String) Describes an array of comma-separated parameter names where the plugin looks for a secret token. The client must send the secret in one of those key names, and the plugin will try to read the credential from a header or the querystring parameter with the same name. The key names can only contain [a-z], [A-Z], [0-9], [_], and [-].
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            tokens_in_body: (Boolean) If enabled, the plugin will read the request body (if said request has one and its MIME type is supported) and try to find the key in it. Supported MIME types are application/www-form-urlencoded, application/json, and multipart/form-data.
            updated_at: (Number) Unix epoch when the resource was last updated.
            vault: (String) A reference to an existing vault object within the database. vault entities define the connection and authentication parameters used to connect to a Vault HTTP(S) API.
        importStatements:
            - terraform import kong-gateway_plugin_vault_auth.my_kong-gateway_plugin_vault_auth ""
    kong-gateway_plugin_websocket_size_limit:
        subCategory: ""
        description: PluginWebsocketSizeLimit Resource
        name: kong-gateway_plugin_websocket_size_limit
        title: kong-gateway_plugin_websocket_size_limit Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginwebsocketsizelimit
              manifest: |-
                {
                  "config": {
                    "client_max_payload": 16617682,
                    "upstream_max_payload": 12864425
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 3,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "ws"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 0
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            client_max_payload: (Number)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream_max_payload: (Number)
        importStatements:
            - terraform import kong-gateway_plugin_websocket_size_limit.my_kong-gateway_plugin_websocket_size_limit ""
    kong-gateway_plugin_websocket_validator:
        subCategory: ""
        description: PluginWebsocketValidator Resource
        name: kong-gateway_plugin_websocket_validator
        title: kong-gateway_plugin_websocket_validator Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginwebsocketvalidator
              manifest: |-
                {
                  "config": {
                    "client": {
                      "binary": {
                        "schema": "...my_schema...",
                        "type": "draft4"
                      },
                      "text": {
                        "schema": "...my_schema...",
                        "type": "draft4"
                      }
                    },
                    "upstream": {
                      "binary": {
                        "schema": "...my_schema...",
                        "type": "draft4"
                      },
                      "text": {
                        "schema": "...my_schema...",
                        "type": "draft4"
                      }
                    }
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "wss"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 10
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            binary: (Attributes) (see below for nested schema)
            client: (Attributes) (see below for nested schema)
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            enabled: (Boolean) Whether the plugin is applied.
            id: (String) The ID of this resource.
            instance_name: (String)
            name: (String)
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            protocols: (List of String) A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            schema: (String) Schema used to validate upstream-originated binary frames. The semantics of this field depend on the validation type set by config.upstream.binary.type. Not Null
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            text: (Attributes) (see below for nested schema)
            type: (String) The corresponding validation library for config.upstream.binary.schema. Currently, only draft4 is supported. Not Null; must be "draft4"
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream: (Attributes) (see below for nested schema)
        importStatements:
            - terraform import kong-gateway_plugin_websocket_validator.my_kong-gateway_plugin_websocket_validator ""
    kong-gateway_plugin_xml_threat_protection:
        subCategory: ""
        description: PluginXMLThreatProtection Resource
        name: kong-gateway_plugin_xml_threat_protection
        title: kong-gateway_plugin_xml_threat_protection Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginxmlthreatprotection
              manifest: |-
                {
                  "config": {
                    "allow_dtd": false,
                    "allowed_content_types": [
                      "..."
                    ],
                    "attribute": 10,
                    "bla_max_amplification": 6.04,
                    "bla_threshold": 1031,
                    "buffer": 6,
                    "checked_content_types": [
                      "..."
                    ],
                    "comment": 4,
                    "document": 5,
                    "entity": 5,
                    "entityname": 0,
                    "entityproperty": 4,
                    "localname": 3,
                    "max_attributes": 5,
                    "max_children": 3,
                    "max_depth": 5,
                    "max_namespaces": 4,
                    "namespace_aware": true,
                    "namespaceuri": 9,
                    "pidata": 8,
                    "pitarget": 6,
                    "prefix": 8,
                    "text": 3
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 7,
                  "enabled": true,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "http"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 6
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            allow_dtd: (Boolean) Indicates whether an XML Document Type Definition (DTD) section is allowed.
            allowed_content_types: (List of String) A list of Content-Type values with payloads that are allowed, but aren't validated.
            attribute: (Number) Maximum size of the attribute value.
            before: (Attributes) (see below for nested schema)
            bla_max_amplification: (Number) Sets the maximum allowed amplification. This protects against the Billion Laughs Attack.
            bla_threshold: (Number) Sets the threshold after which the protection starts. This protects against the Billion Laughs Attack.
            buffer: (Number) Maximum size of the unparsed buffer (see below).
            checked_content_types: (List of String) A list of Content-Type values with payloads that must be validated.
            comment: (Number) Maximum size of comments.
            config: (Attributes) (see below for nested schema)
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            document: (Number) Maximum size of the entire document.
            enabled: (Boolean) Whether the plugin is applied.
            entity: (Number) Maximum size of entity values in EntityDecl.
            entityname: (Number) Maximum size of entity names in EntityDecl.
            entityproperty: (Number) Maximum size of systemId, publicId, or notationName in EntityDecl.
            id: (String) The ID of this resource.
            instance_name: (String)
            localname: (Number) Maximum size of the localname. This applies to tags and attributes.
            max_attributes: '(Number) Maximum number of attributes allowed on a tag, including default ones. Note: If namespace-aware parsing is disabled, then the namespaces definitions are counted as attributes.'
            max_children: '(Number) Maximum number of children allowed (Element, Text, Comment, ProcessingInstruction, CDATASection). Note: Adjacent text and CDATA sections are counted as one. For example, text-cdata-text-cdata is one child.'
            max_depth: (Number) Maximum depth of tags. Child elements such as Text or Comments are not counted as another level.
            max_namespaces: (Number) Maximum number of namespaces defined on a tag. This value is required if parsing is namespace-aware.
            name: (String)
            namespace_aware: (Boolean) If not parsing namespace aware, all prefixes and namespace attributes will be counted as regular attributes and element names, and validated as such.
            namespaceuri: (Number) Maximum size of the namespace URI. This value is required if parsing is namespace-aware.
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            pidata: (Number) Maximum size of processing instruction data.
            pitarget: (Number) Maximum size of processing instruction targets.
            prefix: (Number) Maximum size of the prefix. This applies to tags and attributes. This value is required if parsing is namespace-aware.
            protocols: (List of String) A set of strings representing HTTP protocols.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            text: (Number) Maximum text inside tags (counted over all adjacent text/CDATA elements combined).
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_plugin_xml_threat_protection.my_kong-gateway_plugin_xml_threat_protection ""
    kong-gateway_plugin_zipkin:
        subCategory: ""
        description: PluginZipkin Resource
        name: kong-gateway_plugin_zipkin
        title: kong-gateway_plugin_zipkin Resource - terraform-provider-kong-gateway
        examples:
            - name: my_pluginzipkin
              manifest: |-
                {
                  "config": {
                    "connect_timeout": 193954425,
                    "default_header_type": "datadog",
                    "default_service_name": "...my_default_service_name...",
                    "header_type": "preserve",
                    "http_endpoint": "...my_http_endpoint...",
                    "http_response_header_for_traceid": "...my_http_response_header_for_traceid...",
                    "http_span_name": "method",
                    "include_credential": true,
                    "local_service_name": "...my_local_service_name...",
                    "phase_duration_flavor": "tags",
                    "propagation": {
                      "clear": [
                        "..."
                      ],
                      "default_format": "aws",
                      "extract": [
                        "aws"
                      ],
                      "inject": [
                        "b3"
                      ]
                    },
                    "queue": {
                      "concurrency_limit": 1,
                      "initial_retry_delay": 272764.47,
                      "max_batch_size": 152161,
                      "max_bytes": 2,
                      "max_coalescing_delay": 1358.03,
                      "max_entries": 902225,
                      "max_retry_delay": 187703.12,
                      "max_retry_time": 0.31
                    },
                    "read_timeout": 1720678031,
                    "sample_ratio": 0.38,
                    "send_timeout": 668408524,
                    "static_tags": [
                      {
                        "name": "...my_name...",
                        "value": "...my_value..."
                      }
                    ],
                    "tags_header": "...my_tags_header...",
                    "traceid_byte_count": 8
                  },
                  "consumer": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "enabled": false,
                  "id": "...my_id...",
                  "instance_name": "...my_instance_name...",
                  "ordering": {
                    "after": {
                      "access": [
                        "..."
                      ]
                    },
                    "before": {
                      "access": [
                        "..."
                      ]
                    }
                  },
                  "partials": [
                    {
                      "id": "...my_id...",
                      "name": "...my_name...",
                      "path": "...my_path..."
                    }
                  ],
                  "protocols": [
                    "https"
                  ],
                  "route": {
                    "id": "...my_id..."
                  },
                  "service": {
                    "id": "...my_id..."
                  },
                  "tags": [
                    "..."
                  ],
                  "updated_at": 6
                }
        argumentDocs:
            access: (List of String)
            after: (Attributes) (see below for nested schema)
            before: (Attributes) (see below for nested schema)
            clear: (List of String) Header names to clear after context extraction. This allows to extract the context from a certain header and then remove it from the request, useful when extraction and injection are performed on different header formats and the original header should not be sent to the upstream. If left empty, no headers are cleared.
            concurrency_limit: (Number) The number of of queue delivery timers. -1 indicates unlimited. must be one of ["-1", "1"]
            config: (Attributes) (see below for nested schema)
            connect_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            consumer: (Attributes) If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            default_format: '(String) The default header format to use when extractors did not match any format in the incoming headers and inject is configured with the value: preserve. This can happen when no tracing header was found in the request, or the incoming tracing header formats were not included in extract. Not Null; must be one of ["aws", "b3", "b3-single", "datadog", "gcp", "instana", "jaeger", "ot", "w3c"]'
            default_header_type: (String) Allows specifying the type of header to be added to requests with no pre-existing tracing headers and when config.header_type is set to "preserve". When header_type is set to any other value, default_header_type is ignored. must be one of ["aws", "b3", "b3-single", "datadog", "gcp", "instana", "jaeger", "ot", "w3c"]
            default_service_name: (String) Set a default service name to override unknown-service-name in the Zipkin spans.
            enabled: (Boolean) Whether the plugin is applied.
            extract: (List of String) Header formats used to extract tracing context from incoming requests. If multiple values are specified, the first one found will be used for extraction. If left empty, Kong will not extract any tracing context information from incoming requests and generate a trace with no parent and a new trace ID.
            header_type: (String) All HTTP requests going through the plugin are tagged with a tracing HTTP request. This property codifies what kind of tracing header the plugin expects on incoming requests. must be one of ["aws", "b3", "b3-single", "datadog", "gcp", "ignore", "instana", "jaeger", "ot", "preserve", "w3c"]
            http_endpoint: (String) A string representing a URL, such as https://example.com/path/to/resource?q=search.
            http_response_header_for_traceid: (String)
            http_span_name: (String) Specify whether to include the HTTP path in the span name. must be one of ["method", "method_path"]
            id: (String) The ID of this resource.
            include_credential: (Boolean) Specify whether the credential of the currently authenticated consumer should be included in metadata sent to the Zipkin server.
            initial_retry_delay: (Number) Time in seconds before the initial retry is made for a failing batch.
            inject: (List of String) Header formats used to inject tracing context. The value preserve will use the same header format as the incoming request. If multiple values are specified, all of them will be used during injection. If left empty, Kong will not inject any tracing context information in outgoing requests.
            instance_name: (String)
            local_service_name: (String) The name of the service as displayed in Zipkin.
            max_batch_size: (Number) Maximum number of entries that can be processed at a time.
            max_bytes: (Number) Maximum number of bytes that can be waiting on a queue, requires string content.
            max_coalescing_delay: (Number) Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler.
            max_entries: (Number) Maximum number of entries that can be waiting on the queue.
            max_retry_delay: (Number) Maximum time in seconds between retries, caps exponential backoff.
            max_retry_time: (Number) Time in seconds before the queue gives up calling a failed handler for a batch.
            name: (String) Not Null
            ordering: (Attributes) (see below for nested schema)
            partials: (Attributes List) (see below for nested schema)
            path: (String)
            phase_duration_flavor: (String) Specify whether to include the duration of each phase as an annotation or a tag. must be one of ["annotations", "tags"]
            propagation: (Attributes) (see below for nested schema)
            protocols: (List of String) A set of strings representing protocols.
            queue: (Attributes) (see below for nested schema)
            read_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            route: (Attributes) If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used. (see below for nested schema)
            sample_ratio: (Number) How often to sample requests that do not contain trace IDs. Set to 0 to turn sampling off, or to 1 to sample all requests.
            send_timeout: (Number) An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.
            service: (Attributes) If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched. (see below for nested schema)
            static_tags: (Attributes List) The tags specified on this property will be added to the generated request traces. (see below for nested schema)
            tags: (List of String) An optional set of strings associated with the Plugin for grouping and filtering.
            tags_header: (String) The Zipkin plugin will add extra headers to the tags associated with any HTTP requests that come with a header named as configured by this property.
            traceid_byte_count: (Number) The length in bytes of each request's Trace ID. must be one of ["8", "16"]
            updated_at: (Number) Unix epoch when the resource was last updated.
            value: (String) Not Null
        importStatements:
            - terraform import kong-gateway_plugin_zipkin.my_kong-gateway_plugin_zipkin ""
    kong-gateway_route:
        subCategory: ""
        description: Route Resource
        name: kong-gateway_route
        title: kong-gateway_route Resource - terraform-provider-kong-gateway
        examples:
            - name: my_route
              manifest: |-
                {
                  "created_at": 5,
                  "destinations": [
                    {
                      "ip": "...my_ip...",
                      "port": 4
                    }
                  ],
                  "headers": {
                    "key": []
                  },
                  "hosts": [
                    "..."
                  ],
                  "https_redirect_status_code": 308,
                  "id": "...my_id...",
                  "methods": [
                    "..."
                  ],
                  "name": "...my_name...",
                  "path_handling": "v0",
                  "paths": [
                    "..."
                  ],
                  "preserve_host": false,
                  "protocols": [
                    "tls"
                  ],
                  "regex_priority": 7,
                  "request_buffering": false,
                  "response_buffering": true,
                  "service": {
                    "id": "...my_id..."
                  },
                  "snis": [
                    "..."
                  ],
                  "sources": [
                    {
                      "ip": "...my_ip...",
                      "port": 9
                    }
                  ],
                  "strip_path": true,
                  "tags": [
                    "..."
                  ],
                  "updated_at": 2
                }
        argumentDocs:
            created_at: (Number) Unix epoch when the resource was created.
            destinations: (Attributes List) A list of IP destinations of incoming connections that match this Route when using stream routing. Each entry is an object with fields "ip" (optionally in CIDR range notation) and/or "port". (see below for nested schema)
            headers: '(Map of List of String) One or more lists of values indexed by header name that will cause this Route to match if present in the request. The Host header cannot be used with this attribute: hosts should be specified using the hosts attribute. When headers contains only one value and that value starts with the special prefix ~*, the value is interpreted as a regular expression.'
            hosts: (List of String) A list of domain names that match this Route. Note that the hosts value is case sensitive.
            https_redirect_status_code: '(Number) The status code Kong responds with when all properties of a Route match except the protocol i.e. if the protocol of the request is HTTP instead of HTTPS. Location header is injected by Kong if the field is set to 301, 302, 307 or 308. Note: This config applies only if the Route is configured to only accept the https protocol. must be one of ["426", "301", "302", "307", "308"]'
            id: (String) The ID of this resource.
            ip: (String)
            methods: (List of String) A list of HTTP methods that match this Route.
            name: (String) The name of the Route. Route names must be unique, and they are case sensitive. For example, there can be two different Routes named "test" and "Test".
            path_handling: (String) Controls how the Service path, Route path and requested path are combined when sending a request to the upstream. See above for a detailed description of each behavior. must be one of ["v0", "v1"]
            paths: (List of String) A list of paths that match this Route.
            port: (Number)
            preserve_host: (Boolean) When matching a Route via one of the hosts domain names, use the request Host header in the upstream request headers. If set to false, the upstream Host header will be that of the Service's host.
            protocols: (List of String) An array of the protocols this Route should allow. See the Route Object section for a list of accepted protocols. When set to only "https", HTTP requests are answered with an upgrade error. When set to only "http", HTTPS requests are answered with an error.
            regex_priority: (Number) A number used to choose which route resolves a given request when several routes match it using regexes simultaneously. When two routes match the path and have the same regex_priority, the older one (lowest created_at) is used. Note that the priority for non-regex routes is different (longer non-regex routes are matched before shorter ones).
            request_buffering: (Boolean) Whether to enable request body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that receive data with chunked transfer encoding.
            response_buffering: (Boolean) Whether to enable response body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that send data with chunked transfer encoding.
            service: (Attributes) The Service this Route is associated to. This is where the Route proxies traffic to. (see below for nested schema)
            snis: (List of String) A list of SNIs that match this Route when using stream routing.
            sources: (Attributes List) A list of IP sources of incoming connections that match this Route when using stream routing. Each entry is an object with fields "ip" (optionally in CIDR range notation) and/or "port". (see below for nested schema)
            strip_path: (Boolean) When matching a Route via one of the paths, strip the matching prefix from the upstream request URL.
            tags: (List of String) An optional set of strings associated with the Route for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_route.my_kong-gateway_route ""
    kong-gateway_route_expression:
        subCategory: ""
        description: RouteExpression Resource
        name: kong-gateway_route_expression
        title: kong-gateway_route_expression Resource - terraform-provider-kong-gateway
        examples:
            - name: my_routeexpression
              manifest: |-
                {
                  "created_at": 8,
                  "expression": "...my_expression...",
                  "https_redirect_status_code": 308,
                  "id": "...my_id...",
                  "name": "...my_name...",
                  "path_handling": "v1",
                  "preserve_host": false,
                  "priority": 8,
                  "protocols": [
                    "tls"
                  ],
                  "request_buffering": true,
                  "response_buffering": true,
                  "service": {
                    "id": "...my_id..."
                  },
                  "strip_path": false,
                  "tags": [
                    "..."
                  ],
                  "updated_at": 7
                }
        argumentDocs:
            created_at: (Number) Unix epoch when the resource was created.
            expression: (String) Use Router Expression to perform route match. This option is only available when router_flavor is set to expressions.
            https_redirect_status_code: '(Number) The status code Kong responds with when all properties of a Route match except the protocol i.e. if the protocol of the request is HTTP instead of HTTPS. Location header is injected by Kong if the field is set to 301, 302, 307 or 308. Note: This config applies only if the Route is configured to only accept the https protocol. must be one of ["426", "301", "302", "307", "308"]'
            id: (String) The ID of this resource.
            name: (String) The name of the Route. Route names must be unique, and they are case sensitive. For example, there can be two different Routes named "test" and "Test".
            path_handling: (String) Controls how the Service path, Route path and requested path are combined when sending a request to the upstream. See above for a detailed description of each behavior. must be one of ["v0", "v1"]
            preserve_host: (Boolean) When matching a Route via one of the hosts domain names, use the request Host header in the upstream request headers. If set to false, the upstream Host header will be that of the Service's host.
            priority: (Number)
            protocols: (List of String) An array of the protocols this Route should allow. See the Route Object section for a list of accepted protocols. When set to only "https", HTTP requests are answered with an upgrade error. When set to only "http", HTTPS requests are answered with an error.
            request_buffering: (Boolean) Whether to enable request body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that receive data with chunked transfer encoding.
            response_buffering: (Boolean) Whether to enable response body buffering or not. With HTTP 1.1, it may make sense to turn this off on services that send data with chunked transfer encoding.
            service: (Attributes) The Service this Route is associated to. This is where the Route proxies traffic to. (see below for nested schema)
            strip_path: (Boolean) When matching a Route via one of the paths, strip the matching prefix from the upstream request URL.
            tags: (List of String) An optional set of strings associated with the Route for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_route_expression.my_kong-gateway_route_expression ""
    kong-gateway_service:
        subCategory: ""
        description: Service Resource
        name: kong-gateway_service
        title: kong-gateway_service Resource - terraform-provider-kong-gateway
        examples:
            - name: my_service
              manifest: |-
                {
                  "ca_certificates": [
                    "..."
                  ],
                  "client_certificate": {
                    "id": "...my_id..."
                  },
                  "connect_timeout": 8,
                  "created_at": 8,
                  "enabled": false,
                  "host": "...my_host...",
                  "id": "...my_id...",
                  "name": "...my_name...",
                  "path": "...my_path...",
                  "port": 1,
                  "protocol": "grpcs",
                  "read_timeout": 7,
                  "retries": 5,
                  "tags": [
                    "..."
                  ],
                  "tls_verify": false,
                  "tls_verify_depth": 0,
                  "updated_at": 10,
                  "url": "...my_url...",
                  "write_timeout": 4
                }
        argumentDocs:
            ca_certificates: (List of String) Array of CA Certificate object UUIDs that are used to build the trust store while verifying upstream server's TLS certificate. If set to null when Nginx default is respected. If default CA list in Nginx are not specified and TLS verification is enabled, then handshake with upstream server will always fail (because no CA are trusted).
            client_certificate: (Attributes) Certificate to be used as client certificate while TLS handshaking to the upstream server. (see below for nested schema)
            connect_timeout: (Number) The timeout in milliseconds for establishing a connection to the upstream server.
            created_at: (Number) Unix epoch when the resource was created.
            enabled: '(Boolean) Whether the Service is active. If set to false, the proxy behavior will be as if any routes attached to it do not exist (404). Default: true.'
            host: (String) The host of the upstream server. Note that the host value is case sensitive.
            id: (String) The ID of this resource.
            name: (String) The Service name.
            path: (String) The path to be used in requests to the upstream server.
            port: (Number) The upstream server port.
            protocol: (String) The protocol used to communicate with the upstream. must be one of ["grpc", "grpcs", "http", "https", "tcp", "tls", "tls_passthrough", "udp", "ws", "wss"]
            read_timeout: (Number) The timeout in milliseconds between two successive read operations for transmitting a request to the upstream server.
            retries: (Number) The number of retries to execute upon failure to proxy.
            tags: (List of String) An optional set of strings associated with the Service for grouping and filtering.
            tls_verify: (Boolean) Whether to enable verification of upstream server TLS certificate. If set to null, then the Nginx default is respected.
            tls_verify_depth: (Number) Maximum depth of chain while verifying Upstream server's TLS certificate. If set to null, then the Nginx default is respected.
            updated_at: (Number) Unix epoch when the resource was last updated.
            url: (String) Helper field to set protocol, host, port and path using a URL. This field is write-only and is not returned in responses.
            write_timeout: (Number) The timeout in milliseconds between two successive write operations for transmitting a request to the upstream server.
        importStatements:
            - terraform import kong-gateway_service.my_kong-gateway_service ""
    kong-gateway_sni:
        subCategory: ""
        description: Sni Resource
        name: kong-gateway_sni
        title: kong-gateway_sni Resource - terraform-provider-kong-gateway
        examples:
            - name: my_sni
              manifest: |-
                {
                  "certificate": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "id": "...my_id...",
                  "name": "...my_name...",
                  "tags": [
                    "..."
                  ],
                  "updated_at": 3
                }
        argumentDocs:
            certificate: (Attributes) The id (a UUID) of the certificate with which to associate the SNI hostname. The Certificate must have a valid private key associated with it to be used by the SNI object. (see below for nested schema)
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            name: (String) The SNI name to associate with the given certificate.
            tags: (List of String) An optional set of strings associated with the SNIs for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_sni.my_kong-gateway_sni ""
    kong-gateway_target:
        subCategory: ""
        description: Target Resource
        name: kong-gateway_target
        title: kong-gateway_target Resource - terraform-provider-kong-gateway
        examples:
            - name: my_target
              manifest: |-
                {
                  "created_at": 2.13,
                  "id": "...my_id...",
                  "tags": [
                    "..."
                  ],
                  "target": "...my_target...",
                  "updated_at": 9,
                  "upstream": {
                    "id": "...my_id..."
                  },
                  "upstream_id": "5a078780-5d4c-4aae-984a-bdc6f52113d8",
                  "weight": 9
                }
        argumentDocs:
            created_at: (Number) Unix epoch when the resource was created.
            id: (String) The ID of this resource.
            tags: (List of String) An optional set of strings associated with the Target for grouping and filtering.
            target: (String) The target address (ip or hostname) and port. If the hostname resolves to an SRV record, the port value will be overridden by the value from the DNS record.
            updated_at: (Number) Unix epoch when the resource was last updated.
            upstream: (Attributes) (see below for nested schema)
            upstream_id: (String) ID or target of the Target to lookup
            weight: (Number) The weight this target gets within the upstream loadbalancer (0-65535). If the hostname resolves to an SRV record, the weight value will be overridden by the value from the DNS record.
        importStatements:
            - 'terraform import kong-gateway_target.my_kong-gateway_target ''{"id": "5a078780-5d4c-4aae-984a-bdc6f52113d8", "upstream_id": "5a078780-5d4c-4aae-984a-bdc6f52113d8"}'''
    kong-gateway_upstream:
        subCategory: ""
        description: Upstream Resource
        name: kong-gateway_upstream
        title: kong-gateway_upstream Resource - terraform-provider-kong-gateway
        examples:
            - name: my_upstream
              manifest: |-
                {
                  "algorithm": "consistent-hashing",
                  "client_certificate": {
                    "id": "...my_id..."
                  },
                  "created_at": 1,
                  "hash_fallback": "query_arg",
                  "hash_fallback_header": "...my_hash_fallback_header...",
                  "hash_fallback_query_arg": "...my_hash_fallback_query_arg...",
                  "hash_fallback_uri_capture": "...my_hash_fallback_uri_capture...",
                  "hash_on": "cookie",
                  "hash_on_cookie": "...my_hash_on_cookie...",
                  "hash_on_cookie_path": "...my_hash_on_cookie_path...",
                  "hash_on_header": "...my_hash_on_header...",
                  "hash_on_query_arg": "...my_hash_on_query_arg...",
                  "hash_on_uri_capture": "...my_hash_on_uri_capture...",
                  "healthchecks": {
                    "active": {
                      "concurrency": 4,
                      "headers": {
                        "key": "value"
                      },
                      "healthy": {
                        "http_statuses": [
                          6
                        ],
                        "interval": 1.45,
                        "successes": 6
                      },
                      "http_path": "...my_http_path...",
                      "https_sni": "...my_https_sni...",
                      "https_verify_certificate": true,
                      "timeout": 1.98,
                      "type": "grpc",
                      "unhealthy": {
                        "http_failures": 5,
                        "http_statuses": [
                          3
                        ],
                        "interval": 7.78,
                        "tcp_failures": 10,
                        "timeouts": 4
                      }
                    },
                    "passive": {
                      "healthy": {
                        "http_statuses": [
                          6
                        ],
                        "successes": 9
                      },
                      "type": "https",
                      "unhealthy": {
                        "http_failures": 3,
                        "http_statuses": [
                          0
                        ],
                        "tcp_failures": 5,
                        "timeouts": 4
                      }
                    },
                    "threshold": 2.14
                  },
                  "host_header": "...my_host_header...",
                  "id": "...my_id...",
                  "name": "...my_name...",
                  "slots": 0,
                  "tags": [
                    "..."
                  ],
                  "updated_at": 7,
                  "use_srv_name": false
                }
        argumentDocs:
            active: (Attributes) (see below for nested schema)
            algorithm: (String) Which load balancing algorithm to use. must be one of ["consistent-hashing", "least-connections", "round-robin", "latency"]
            client_certificate: (Attributes) If set, the certificate to be used as client certificate while TLS handshaking to the upstream server. (see below for nested schema)
            concurrency: (Number)
            created_at: (Number) Unix epoch when the resource was created.
            hash_fallback: (String) What to use as hashing input if the primary hash_on does not return a hash (eg. header is missing, or no Consumer identified). Not available if hash_on is set to cookie. must be one of ["none", "consumer", "ip", "header", "cookie", "path", "query_arg", "uri_capture"]
            hash_fallback_header: (String) The header name to take the value from as hash input. Only required when hash_fallback is set to header.
            hash_fallback_query_arg: (String) The name of the query string argument to take the value from as hash input. Only required when hash_fallback is set to query_arg.
            hash_fallback_uri_capture: (String) The name of the route URI capture to take the value from as hash input. Only required when hash_fallback is set to uri_capture.
            hash_on: (String) What to use as hashing input. Using none results in a weighted-round-robin scheme with no hashing. must be one of ["none", "consumer", "ip", "header", "cookie", "path", "query_arg", "uri_capture"]
            hash_on_cookie: (String) The cookie name to take the value from as hash input. Only required when hash_on or hash_fallback is set to cookie. If the specified cookie is not in the request, Kong will generate a value and set the cookie in the response.
            hash_on_cookie_path: (String) The cookie path to set in the response headers. Only required when hash_on or hash_fallback is set to cookie.
            hash_on_header: (String) The header name to take the value from as hash input. Only required when hash_on is set to header.
            hash_on_query_arg: (String) The name of the query string argument to take the value from as hash input. Only required when hash_on is set to query_arg.
            hash_on_uri_capture: (String) The name of the route URI capture to take the value from as hash input. Only required when hash_on is set to uri_capture.
            headers: (Map of String)
            healthchecks: (Attributes) (see below for nested schema)
            healthy: (Attributes) (see below for nested schema)
            host_header: (String) The hostname to be used as Host header when proxying requests through Kong.
            http_failures: (Number)
            http_path: (String)
            http_statuses: (List of Number)
            https_sni: (String)
            https_verify_certificate: (Boolean)
            id: (String) The ID of this resource.
            interval: (Number)
            name: (String) This is a hostname, which must be equal to the host of a Service.
            passive: (Attributes) (see below for nested schema)
            slots: (Number) The number of slots in the load balancer algorithm. If algorithm is set to round-robin, this setting determines the maximum number of slots. If algorithm is set to consistent-hashing, this setting determines the actual number of slots in the algorithm. Accepts an integer in the range 10-65536.
            successes: (Number)
            tags: (List of String) An optional set of strings associated with the Upstream for grouping and filtering.
            tcp_failures: (Number)
            threshold: (Number)
            timeout: (Number)
            timeouts: (Number)
            type: (String) must be one of ["tcp", "http", "https", "grpc", "grpcs"]
            unhealthy: (Attributes) (see below for nested schema)
            updated_at: (Number) Unix epoch when the resource was last updated.
            use_srv_name: (Boolean) If set, the balancer will use SRV hostname(if DNS Answer has SRV record) as the proxy upstream Host.
        importStatements:
            - terraform import kong-gateway_upstream.my_kong-gateway_upstream ""
    kong-gateway_vault:
        subCategory: ""
        description: Vault Resource
        name: kong-gateway_vault
        title: kong-gateway_vault Resource - terraform-provider-kong-gateway
        examples:
            - name: my_vault
              manifest: |-
                {
                  "config": "{ \"see\": \"documentation\" }",
                  "created_at": 3,
                  "description": "...my_description...",
                  "id": "...my_id...",
                  "name": "...my_name...",
                  "prefix": "...my_prefix...",
                  "tags": [
                    "..."
                  ],
                  "updated_at": 10
                }
        argumentDocs:
            config: (String) The configuration properties for the Vault which can be found on the vaults' documentation page. Parsed as JSON.
            created_at: (Number) Unix epoch when the resource was created.
            description: (String) The description of the Vault entity.
            id: (String) The ID of this resource.
            name: (String) The name of the Vault that's going to be added. Currently, the Vault implementation must be installed in every Kong instance.
            prefix: (String) The unique prefix (or identifier) for this Vault configuration. The prefix is used to load the right Vault configuration and implementation when referencing secrets with the other entities.
            tags: (List of String) An optional set of strings associated with the Vault for grouping and filtering.
            updated_at: (Number) Unix epoch when the resource was last updated.
        importStatements:
            - terraform import kong-gateway_vault.my_kong-gateway_vault ""
